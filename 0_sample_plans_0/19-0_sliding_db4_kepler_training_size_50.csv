query,plan_id,plan_content
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Vassil Radoev)', '(as Lynn Rodden)', '(jacket designer)', '(Bass, Vocals)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%S%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%q%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Katie Craven)', '(as Lidia Darly)', '(as Nic Bettauer)', '(as Sahyly Yamile)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Baba Booey)', '(as Schery)', '(as Kevin Swain)', '(The Hostage)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Andrew Turner)', '(based on books by)', '(as Paco Vidal)', '(orientation)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%[%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Saz-One)', '(main title art)', '(as Geraldine)', '(as Wanda Shipp)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%c%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(logger) (2001)', '(Telugu version)', '(as You Hang)', '(as Ben Davis)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%8%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as J. Adam Giese)', '(as Lain Oi)', '(as Enrika)', '(research: Wales)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%D%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Scott Johnston)', '(as Olivia Brown)', '(as Pablo Mas)', '(as Skwerm)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%.%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Willemijn Lamp)', '(as Gerard Ismael)', '(as Kenny Jones)', '(as Gil A. Morales)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Brandy)', '(as Hiroki Katoh)', '(as Jackie Sydney)', '(as Haaz)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(flight attendant)', '(as Carey Lexes)', '(as Mo Ka Lai)', '(as Daran Norrie)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%4%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Nick Puccio)', '(as Gustavo Reyes)', '(as Candy Cesa)', '(3rd place) (2004)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%f%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(floor director)', '(as Jaycee Parker)', '(as Geena Ginger)', '(as William Mayley)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%g%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%k%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Malisia Parker)', '(2010-)', '(novel ""Ruusunen"")', '(avid provider)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Leland Jones)', '(as Cherry Poppins)', '(#17)', '(as Shannon Giles)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%o%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Nava Plotsky)', '(as Anna Silvi)', '(3-D metagame)', '(as Luis Garcia)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%c%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%R%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(wrangler: miko)', '(as Olga Marceau)', '(technical crew)', '(as Bob Solberg)')
AND cn.country_code = '[ca]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%d%' OR mc.note LIKE '%l%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jennifer Leo)', '(as L.B. Denberg)', '(as Finn Hagemand)', '(as Johan)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%g%' OR mc.note LIKE '%o%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Martin Phibbs)', '(as T-Pain)', '(as Sara Fernandez)', '(as Kirk T. Larsen)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as James Jeffrey)', '(creator and story)', '(as Stefanie Japp)', '(as Jenny Evans)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jessica Huber)', '(as Mia Sylvio)', '(as Eric Cockhill)', '(as Laura Harring)')
AND cn.country_code = '[ar]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%A%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%T%' OR mi.info LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as AgustÃ­n Leiva)', '(harddisk operator)', '(Jade Marcela)', '(as Sophia Alvarez)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%g%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Dan Wilmott)', '(as Manuel CortÃ©s)', '(#1.21)', '(as La Chiva)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%V%' OR mi.info LIKE '%I%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(team)', '(as M.R. Darvishi)', '(Sweden) (2005)', '(as Tony Chang)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%V%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Tony Landy)', '(as Kurt Alan)', '(as Saban)', '(as John Connor)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Suresh Tupe)', '(Audi provider)', '(as Julie Snow)', '(as Rodrigo N.S.)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%b%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Food & Wine)', '(as Sam Cook)', '(as Mike Kramer)', '(segment ""Beat It"")')
AND cn.country_code = '[de]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%P%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mo Blackwood)', '(as Tumelo Phali)', '(as Sissi du Parc)', '(as Bigg Gipp)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(''J.C.'')', '(as Anne GÃ©rard)', '(finished by)', '(as Maiana Borsody)')
AND cn.country_code = '[nl]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%D%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ann Cassin)', '(as Lisa Garside)', '(master editor)', '(as Pharaba Witt)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%o%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Gemma Pheonix)', '(as Julio Vidal)', '(as Mike Caleo)', '(as Eine Raiha)')
AND cn.country_code = '[nl]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%b%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mohanan)', '(as Annastasia B.)', '(as Amit Ganguly)', '(as Alma)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%""%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jon Ward)', '(as Fernando H.)', '(as Alex J. Flores)', '(as Joseph V. Gay)')
AND cn.country_code = '[gr]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer) (2002)', '(as Mauricio Ripke)', '(as Jenny Stoller)', '(as Sig)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jasmin Field)', '(as Matt Micka)', '(The Adulteress)', '(story) (dialogue)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as John Collier)', '(Leslie Rene)', '(as Seth Jones)', '(as Rolf Lovland)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%D%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(# 2)', '(as Carlo Glorioso)', '(as Guido)', '(as Darold Crotzer)')
AND cn.country_code = '[nl]'
AND it.info = 'runtimes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%D%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%4%' OR mi.info LIKE '%4%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as David Poolroom)', '(as Edward Salier)', '(as T. Rahim)', '(as Robert Evans)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%v%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Costumier)', '(as Li Jianguo)', '(as P-Brain)', '(as Garrett Droege)')
AND cn.country_code = '[nl]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Bowling Green)', '(as Madhu Achrya)', '(logger) (season 3)', '(as Gabriel Monaya)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Aaron Lu)', '(as Val Brine)', '(Aces web design)', '(as Occy)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%D%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%k%' OR mi.info LIKE '%w%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(DV producer)', '(advertising art)', '(as Will Espinal)', '(as Manuel Fullola)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%H%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%M%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as I.Kashevskiy)', '(as Eliza Cotter)', '(as Isabella Blue)', '(segment ""Busted"")')
AND cn.country_code = '[de]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(#95) (Interviewee)', '(as Ulrich Paulus)', '(as Adam Paul)', '(as Pankow)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%x%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ma Zijun)', '(R-CA)', '(as Kate Duchene)', '(as Kayla Levels)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%g%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%.%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Octavio Gomez)', '(as Hyun-sung Jang)', '(as Irena Toskova)', '(celebrity spotter)')
AND cn.country_code = '[nl]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mack Rollins)', '(as Ide)', '(as Joe Jardi)', '(as Susanne Stokes)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Darrin McGuire)', '(as Fikrat Aliyev)', '(as Michael Stode)', '(2 ans et demi)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%p%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jessica Gill)', '(as Dr. Dan Kolak)', '(as Juuso)', '(as Tito Galindo)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%H%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as D-Von Dudley)', '(as Ricky Neumann)', '(Prostitute)', '(O-Town)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Albert Kitzel)', '(as Sarah Wheeler)', '(as Paul S. Mezey)', '(as Jamie)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as IvÃ¡n Morales)', '(car coordinator)', '(as Adi Peichl)', '(as Norm Zada)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%5%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%w%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Sven Phillip)', '(Blue Team)', '(publicity writer)', '(Dumb Derelict)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%p%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(water wet down)', '(as Waltel Branco)', '(advisor: graphics)', '(video ""We Belong"")')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%6%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ola Mckenzie)', '(as Jim Moir)', '(as Mike Sheehan)', '(as Shiva Shrestha)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%T%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Cora Bissett)', '(as Cat)', '(safety spotter)', '(as Nick Kemplan)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Reb Flemming)', '(as Nico Liceaga)', '(as Billy Baggett)', '(additional dogs)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%!%' OR mi.info LIKE '%p%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer: 3birds)', '(as Mimi Lempika)', '(as Ivan Subay)', '(segment ""Marlon"")')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%?%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as M.I.A)', '(as MarÃ­''a Canals)', '(Sheena)', '(as Joe Rassulo)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%V%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%w%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(spot boy)', '(marine: Fiji)', '(at 14 years old)', '(Dionne Phillips)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%M%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Masasa)', '(as Alina)', '(episode 2.2)', '(lead technician)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%3%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mariella)', '(as Andrew Noga)', '(on tv)', '(as Karl H. Braun)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%V%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Arianne)', '(as Jozef Ropog)', '(as Danny Edwards)', '(as Jason Fuchs)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%l%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as PÃ©tra)', '(Ajay''s dad)', '(as Dr Greg Olsen)', '(as Ronnie Jhutti)')
AND cn.country_code = '[de]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Salman look alike)', '(line producer: SA)', '(as Chris Cordell)', '(as Chica Carelli)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%T%' OR mi.info LIKE '%f%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mara Schwartz)', '(news team)', '(as Ari Green)', '(as Jim Prior)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Johnny Niraml)', '(supervisor: ARRI)', '(culinary producer)', '(suicidal man)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%H%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%W%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Michael Larson)', '(as Tarim Messalti)', '(as Anup Joshi)', '(as Jordann Kimley)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%M%' OR mi.info LIKE '%w%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Daniel Monroe)', '(as Aneta Curtis)', '(as Dani Golpashin)', '(as Jean Claude)')
AND cn.country_code = '[de]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%F%' OR mi.info LIKE '%P%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Kim Levin)', '(as Alin Oltean)', '(Transvestite)', '(as A. Mateshov)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(10th evicted)', '(as Captain Tuma)', '(as Alanna)', '(as Mauricio Vaca)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Brian Pollock)', '(as Lutchina)', '(as Delfin Delage)', '(Policeman)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%g%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%B%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Yee Tin Hung)', '(as Candy Sweets)', '(as Jeffery Walton)', '(as Iowa Takamoto)')
AND cn.country_code = '[gr]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%P%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Dany Esber)', '(as Hailey Page)', '(as R. Lord)', '(as George Stiso)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jonna Thompson)', '(as BellaDonna)', '(producer: AFI)', '(as Tony Olive)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Lil'' Eazy-E)', '(as Francis Wong)', '(show ""A Wedding"")', '(as Miguel Merkin)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%R%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Vesna Pocuca)', '(as Karla Rahal)', '(as Tin-Ming Hung)', '(as Kenneth Mok)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%D%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%R%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Sara Arango)', '(as A.J. Styles)', '(as Toni Regueiro)', '(as Dinesh Hingu)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%6%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Veronica Caine)', '(as JYD)', '(as Wen-hsuan Chuo)', '(1963)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%9%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Aphrodite)', '(as Ip Ka Fuen)', '(as Ladislav)', '(as Maralyn)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Sally Saffioti)', '(strike crew)', '(as Jhon Alex Toro)', '(present day)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%P%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(2002 -)', '(as Davone Cooper)', '(as Tomas Saez)', '(as Jeff Loftfield)')
AND cn.country_code = '[de]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%5%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Torkil Ranum)', '(as Judy)', '(as David McCallum)', '(as Kelly Taylor)')
AND cn.country_code = '[de]'
AND it.info = 'color info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as David Safarian)', '(legal supervisor)', '(as Dr. Lucy Jones)', '(second engineer)')
AND cn.country_code = '[ar]'
AND it.info = 'color info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ines Sastre)', '(as Matthew Murray)', '(as Suzy Diamond)', '(as Aviva Armour)')
AND cn.country_code = '[gr]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mushtak Khan)', '(as Pierre Trapet)', '(as Martin Sage)', '(as John Beshara)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%D%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(fitter)', '(as Herman Egbers)', '(comic book story)', '(as Dayzjha)')
AND cn.country_code = '[de]'
AND it.info = 'runtimes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%4%' OR mi.info LIKE '%4%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(CinÃ©aste)', '(as Dr. David Moss)', '(as Jayson Krajd)', '(as Helen Thearle)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%b%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Avijit)', '(as Xander Skye)', '(as Von Roddy)', '(as Budapest)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%d%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%J%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(task producer)', '(as Kong Chi Leung)', '(as Kimora Simmons)', '(registration)')
AND cn.country_code = '[ca]'
AND it.info = 'taglines'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%v%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Judith)', '(as Iris Lohninger)', '(Pano)', '(executive editor)')
AND cn.country_code = '[de]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Emily Herston)', '(as Jon Paul Gates)', '(Houndoom)', '(as Anetta Smrhova)')
AND cn.country_code = '[ar]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as De''Bella)', '(as Adam Smith)', '(Stab-C technician)', '(writer) (2000)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Sam & Mark)', '(as V.Yepifantsev)', '(as Mel Grob)', '(as Michelle Wade)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%5%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as K-Maro)', '(as Samuel Elliott)', '(as Dolaine Yates)', '(as Nick Tizzard)')
AND cn.country_code = '[de]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%O%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as L.L. Ginter)', '(Craps)', '(ob manager)', '(as Philipe Dean)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%''%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Siminy Diamond)', '(as KÃ¤the Mazur)', '(as Xingshu Yan)', '(as Mandy Mystery)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%K%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(american version)', '(as Charles Cozens)', '(as GinÃ©s GarcÃ­a)', '(as Alex Enberg)')
AND cn.country_code = '[nl]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as L. Snigireva)', '(as Cyril Plouviez)', '(as Jessica Jewell)', '(as Reed Shelley)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%P%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Anthony York)', '(as Zoe Bridgeman)', '(as Anne Sohn)', '(expert advisor)')
AND cn.country_code = '[ar]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%5%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Little T.)', '(as Joan Marimon)', '(as Judith Browne)', '(as BjÃ¸rn Aasland)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%D%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(game programmer)', '(as E.S. Mintz)', '(the Burglar)', '(as A.Kolokoltsev)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%S%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%F%' OR mi.info LIKE '%O%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Noh Hagos)', '(as Shyla Michelle)', '(recurring)', '(as Mankind)')
AND cn.country_code = '[gr]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%c%' OR mc.note LIKE '%l%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(crew: GMA Records)', '(as To Kee)', '(as Jonathan Coyne)', '(as Dia Sokol)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%h%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Sara Mau)', '(Trabener StraÃe)', '(segment ""Lila"")', '(producer: Denmark)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Irene Iglessi)', '(legal liaison)', '(as Cocoa Pink)', '(as Annie Bunz)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Josh Annex)', '(Nub)', '(as Victor Baccus)', '(e.u.s. operator)')
AND cn.country_code = '[gr]'
AND it.info = 'color info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%G%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Tom''s wife)', '(as Loureen Kiss)', '(as Sarah)', '(as Jon Olafsson)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Siggi Jet)', '(as Stan Fleishman)', '(as Steve Wroe)', '(as Susan Froemke)')
AND cn.country_code = '[gr]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%h%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as G.Kozlov)', '(as The Dawn)', '(as David Stewart)', '(event coordinator)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%w%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Diane Luby)', '(Manager Lilja)', '(as Jen Gillaspy)', '(as Ed Blatchford)')
AND cn.country_code = '[de]'
AND it.info = 'mpaa'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%G%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2003;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Steve Cheng)', '(localization)', '(system program)', '(as Meredith Riley)')
AND cn.country_code = '[nl]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%l%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%p%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Katsumi)', '(as M-Clan)', '(as Yuris Kis)', '(as Sidney McKenna)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(harddisk transfer)', '(as Liz Keifer)', '(picture analysis)', '(as Georgia)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jose Maria Mas)', '(as Biosphere)', '(Karmacoma)', '(as Silvy)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%G%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mike Francis)', '(as Simone Horvath)', '(weapon designer)', '(as Sean Griffin)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Daddy Darby)', '(as Siv Malmquist)', '(as Q. Baxsaliyeva)', '(as Irv Kershner)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%6%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(episodes 7-13)', '(as Wanda Sais)', '(episode ""Train"")', '(as Dinesh Telker)')
AND cn.country_code = '[ar]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%S%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Leilani Wong)', '(paintings)', '(segment ""Carcan"")', '(""Tintin"" - Alive)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as RaÃºl Oropeza)', '(as Jodi)', '(as Dana Ryan)', '(game design)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%w%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Wai-kwong Lo)', '(datacine operator)', '(Nuuk/Ãrhus)', '(as Bill Schilling)')
AND cn.country_code = '[us]'
AND it.info = 'alternate versions'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Kim NÃ¸rrevig)', '(as King Joe)', '(as Birgit Bosboom)', '(as Lana Green)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Norma)', '(as Fraser Heston)', '(as Jenna Von Oy)', '(Kitten)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Shulea Cheang)', '(The Director)', '(as Anna Thompson)', '(as Jing Wu)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2%' OR mi.info LIKE '%3%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Zbig)', '(as Yvonna Kopacz)', '(as Cesar De Leon)', '(as Cory Gums)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Lauryl Berry)', '(as Emily Vancamp)', '(as Katarina B)', '(as Helena Lymbery)')
AND cn.country_code = '[us]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as J. Stojanov)', '(as Misen Groth)', '(as Jeff Kerr)', '(as Trish)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(phone guy)', '(also as Katja K)', '(content advisor)', '(as Skyler Clipner)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(segment ""Impaled"")', '(as Lazar Long)', '(segment ""Bode"")', '(at age 45)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%H%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(French)', '(armorer: Malta)', '(puppeteer: Piglet)', '(as Fred Proust)')
AND cn.country_code = '[ca]'
AND it.info = 'taglines'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(booking producer)', '(movement trainer)', '(social worker)', '(3 Years Old)')
AND cn.country_code = '[nl]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%o%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ed Norton)', '(as Joanna Scanlon)', '(as KÃ¸lig Kaj)', '(research/archive)')
AND cn.country_code = '[us]'
AND it.info = 'plot'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2004;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(daily spark)', '(background voice)', '(as Nic Lana)', '(Karen)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Puddle of Mudd)', '(segment ""Mercy"")', '(as Hennie Bosman)', '(as Nick Corri)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Forward 1992-97)', '(2nd Runner Up)', '(as Urmila Motwani)', '(as Anne Nahbedian)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%N%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Rise FM)', '(Rejected X-Men)', '(as Jerry Sidell)', '(segment ""Yak-42"")')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(novel ""Ruusunen"")', '(as P-Brain)', '( i''m not sure )', '(F)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%g%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Dave Ruth)', '(as Mike Sage)', '(house mother)', '(as Nathan Fulord)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(red carpet)', '(HD scanning check)', '(as Gabe Hogan)', '(as New Edition)')
AND cn.country_code = '[us]'
AND it.info = 'mpaa'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Vikramjeet''s Wife)', '(Antonio)', '(as Zaa Nikweta)', '(as Paul Nicolas)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%k%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Joan Pons)', '(as Ljerka Borosa)', '(Age 13)', '(as Tanya Koerberl)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%9%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as P.J.Lee)', '(as Matt Fox)', '(as Diego Rivera)', '(as Dan Myrhman)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%H%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(bride)', '(as Jon Gordon)', '(as Dr. Rajib Seal)', '(as Lis Kauczki)')
AND cn.country_code = '[ar]'
AND it.info = 'runtimes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%D%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%4%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(segment ""Monster"")', '(as Bob Ziel)', '(as Biyuuden)', '(as Robert Butcher)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%V%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Larent Provost)', '(as HP Virkki)', '(Gehirngestalten)', '(Kron)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%T%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(This Is The Life)', '(the neighbor)', '(wedding dress)', '(as Bobby Barber)')
AND cn.country_code = '[nl]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(facilitator)', '(epk crew)', '(as Marianne Merlo)', '(as Val Cotic)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(segment ""Katrina"")', '(Michael)', '(as Joel E. McHale)', '(as Johnie Stanley)')
AND cn.country_code = '[gr]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Federico)', '(as AJ Khan)', '(video ""Hell W10"")', '(as Chan Wing Yuk)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%w%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Debbie Lien)', '(as Edith Edit)', '(as Tim Stevens)', '(nurse)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%b%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Dr. Phil Good)', '(as Roxzane Mims)', '(as Non Stop)', '(as Joanna Scanlon)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%T%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Sardarji)', '(as Jo-Anne Drea)', '(as Glenys Sigley)', '(as John McPhilips)')
AND cn.country_code = '[gr]'
AND it.info = 'runtimes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%4%' OR mi.info LIKE '%4%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Serge Paquette)', '(as Ben Salisbury)', '(as Vaneese Thomas)', '(as Bella Maria)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%o%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%I%' OR mi.info LIKE '%v%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Yu Jin M.D.)', '(script provider)', '(as Dave McConnell)', '(as Ruth Kelly MP)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(woman on bus)', '(as Lil'' Pimp Hand)', '(as Eye TV)', '(as Emily Liu)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%5%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(as Niki Notarile)', '(as GaÃ«tan Huot)', '(as Rosenstolz)', '(as Peter Zoltan)')
AND cn.country_code = '[ca]'
AND it.info = 'runtimes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%d%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%4%')
AND n.gender = 'm'
AND n.name LIKE '%K%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Scott C. Sener)', '(7-12)', '(as Nyomi Arman)', '(editbox)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ben Bradlee)', '(as Greta Ricci)', '(as Rita Aruma)', '(as Lars Johansson)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Melanie Kai)', '(as Barney Sumner)', '(as Sima BÃ¼rgin)', '(as L.M. Wells)')
AND cn.country_code = '[ar]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%P%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Matt Loehr)', '(producer: NHK)', '(as D.Ogurtsov)', '(as John Petrelli)')
AND cn.country_code = '[nl]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%R%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Debbie Jones)', '(as I.Yazvinskaya)', '(as Amada Gillette)', '(as Scott Higgs)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%p%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%v%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2006;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jayla)', '(as Misa Nagaya)', '(as Rodney Manikam)', '(as Marilinda)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%J%' OR mi.info LIKE '%''%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(1st evicted)', '(video journalist)', '(4 years old)', '(as Panom Yeerum)')
AND cn.country_code = '[us]'
AND it.info = 'plot'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%f%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Best Theater Play)', '(as Rachel Maines)', '(as Pak-Kong Ho)', '(as N. Titov)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jim Coop)', '(as D.B Szumilas)', '(as Radharavi)', '(as Global.Kryner)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%A%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%(%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Maryka)', '(as Forro)', '(as Jan Komersky)', '(as Ashlee)')
AND cn.country_code = '[de]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%w%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Miao Chang Jun)', '(staff) (as MJT)', '(the Dandy Warhols)', '(comic-book)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ryan Johnson)', '(as Tina Tinova)', '(creator) (2000)', '(as Cal MacAninch)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%d%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Sparky)', '(as Hanna Landing)', '(as Anne Foley)', '(the chef)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%g%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as J.C. Carriere)', '(as Teianna Kat)', '(as SHeDAISY)', '(as Dana Miltins)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%b%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(stand-in: Lochlyn)', '(Midway away team)', '(as S. Ezhil)', '(cue cards)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Gary Cervantes)', '(as Heather Rivers)', '(as Silke Klein)', '(as Judy Tylor)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%5%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%''%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mike Meros)', '(judicial advisor)', '(as Jessi Warner)', '(show)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%N%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Ida Hacksel)', '(as Gabriel Shaw)', '(as Randy Jasz)', '(as Chi Chui)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Paul Henry)', '(as Rob Greenlea)', '(as Lars MÃ¸ller)', '(addtional editor)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%5%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(seating assistant)', '(as Ron A. Brooks)', '(as MosDef)', '(as Clare Devaney)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Nick de Mauro)', '(as Karol Wojtyla)', '(as Norma McMillan)', '(as Jean Palette)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%N%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(episodes 2, 3)', '(as Angelica Baran)', '(as Marcos GÃ³mez)', '(as Richard & Judy)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%c%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%f%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Taupin no 2)(2004)', '(as Murat Karabey)', '(as D. Prasad Babu)', '(as Jackie Tong)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%S%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Shawn Cosby)', '(as Deepak Dharwal)', '(as Diana Kaufman)', '(recruiter: PDI)')
AND cn.country_code = '[gr]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%4%' OR mc.note LIKE '%l%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%M%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Heaven Yiu)', '(as Love Shop)', '(as Greg Goosen)', '(as Selly Elson)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%b%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Mireia Asencio)', '(as Dustin Guy)', '(beach gators)', '(as Jim Contner)')
AND cn.country_code = '[ar]'
AND it.info = 'color info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%5%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Tommy Dreamer)', '(as Paula GarcÃ¨s)', '(as Mike McDougal)', '(as Franck Geney)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%p%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Angus Barnet)', '(as Alan Mendleson)', '(as Inma Gamarra)', '(Chief Editor)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%D%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Cowboy)', '(chief designer)', '(as Darryl Warrren)', '(as Manuel OtÃ©ro)')
AND cn.country_code = '[ar]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(picture editor)', '(as Diamond Fox)', '(as F. Lynn Ollie)', '(news organiser)')
AND cn.country_code = '[us]'
AND it.info = 'languages'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Alistair Duff)', '(as Gail Monian)', '(Anastasia Blue)', '(as Sylvan)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(segment ''Justice'')', '(1942 screenplay)', '(ballet soloist)', '(commentator)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%V%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jean GrÃ¨cault)', '(as Juliette FÃ¡si)', '(as Fred Amugi)', '(2007-2011)')
AND cn.country_code = '[gr]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%c%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%3%' OR mi.info LIKE '%3%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2007;",0,/*+  IndexOnlyScan(an person_id_aka_name_4) SeqScan(n) IndexScan(ci person_id_cast_info_4) SeqScan(rt) IndexScan(mc movie_id_movie_companies_4) IndexScan(cn sampled_company_name_4_pkey) IndexScan(t sampled_title_4_pkey) IndexScan(mi movie_id_movie_info_4) SeqScan(it) IndexOnlyScan(chn sampled_char_name_4_pkey) MergeJoin(an n) NestLoop(an n ci) HashJoin(an n ci rt) NestLoop(an n ci rt mc) NestLoop(an n ci rt mc cn) NestLoop(an n ci rt mc cn t) NestLoop(an n ci rt mc cn t mi) HashJoin(an n ci rt mc cn t mi it) NestLoop(an n ci rt mc cn t mi it chn) Leading((((((((((an n) ci) rt) mc) cn) t) mi) it) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Betty Ozmoli)', '(recruiting)', '(as Daria Glover)', '(as Susan Artigas)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%2%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(drama coach)', '(as Nicholl June)', '(game tester: GRI)', '(as John Cleveland)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%c%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Peter J. Soto)', '(co-written by)', '(SAM designed by)', '(Senior Editor)')
AND cn.country_code = '[de]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%p%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(12th to let go)', '(as D.J. Kerzner)', '(concept team)', '(as Fred BÃ¤ckar)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%N%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jong Wam Chung)', '(as Lou Cypher)', '(as Mike Pierce)', '(as Seaman the Dog)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%p%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Line)', '(mamman)', '(Child)', '(as Renee O''Connor)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(advisor: Pawnee)', '(as Bryan Fernando)', '(as Akos Gazdag)', '(as Alekseys)')
AND cn.country_code = '[ar]'
AND it.info = 'sound mix'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%H%' OR mc.note LIKE '%5%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as David JelÃ­nek)', '(Alcibiades)', '(as Yuna Mikunu)', '(as Billy Marchese)')
AND cn.country_code = '[gr]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2006;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(Vega in Japan)', '(avant)', '(as Francesca Lei)', '(as Simms Thomas)')
AND cn.country_code = '[us]'
AND it.info = 'languages'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%o%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%B%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2003;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Amy Lovering)', '(as Sambhawna Seth)', '(as Peter Tankey)', '(as Vo DeBalm)')
AND cn.country_code = '[de]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%)%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%p%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM sampled_aka_name_4 AS an,
   sampled_char_name_4 AS chn,
   sampled_cast_info_4 AS ci,
   sampled_company_name_4 AS cn,
   sampled_info_type_4 AS it,
  sampled_movie_companies_4 AS mc,
   sampled_movie_info_4 AS mi,
   sampled_name_4 AS n,
   sampled_role_type_4 AS rt,
   sampled_title_4 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Kee)', '(as Samantha Gros)', '(as KÃ©llÃ© Bryan)', '(as Mark Berkeley)')
AND cn.country_code = '[us]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2007;",29,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t sampled_title_4_pkey) IndexScan(ci movie_id_cast_info_4) IndexScan(n sampled_name_4_pkey) SeqScan(rt) IndexOnlyScan(chn sampled_char_name_4_pkey) IndexOnlyScan(an person_id_aka_name_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) HashJoin(mc cn t ci n rt) NestLoop(mc cn t ci n rt chn) NestLoop(mc cn t ci n rt chn an) NestLoop(mc cn t ci n rt chn an mi) HashJoin(mc cn t ci n rt chn an mi it) Leading((((((((((mc cn) t) ci) n) rt) chn) an) mi) it)) */
