query,plan_id,plan_content
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '3.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2009;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '7.0'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2009;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '3.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2008;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2009;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2010;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",49,/*+  SeqScan(it2) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(t random_title_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) NestLoop(k mk) NestLoop(k mk t) NestLoop(kt k mk t) NestLoop(kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx) NestLoop(it2 kt k mk t mi_idx mi) NestLoop(it2 kt k mk t mi_idx mi it1) Leading((((it2 ((kt ((k mk) t)) mi_idx)) mi) it1)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM random_info_type_1 AS it1,
   random_info_type_1 AS it2,
   random_keyword_1 AS k,
   random_kind_type_1 AS kt,
   random_movie_info_1 AS mi,
   random_movie_info_idx_1 AS mi_idx,
   random_movie_keyword_1 AS mk,
   random_title_1 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",156,/*+  SeqScan(t) SeqScan(kt) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) SeqScan(it2) HashJoin(t kt) NestLoop(k mk) HashJoin(t kt k mk) NestLoop(t kt k mk mi) HashJoin(t kt k mk mi it1) NestLoop(t kt k mk mi it1 mi_idx) HashJoin(t kt k mk mi it1 mi_idx it2) Leading(((((((t kt) (k mk)) mi) it1) mi_idx) it2)) */
