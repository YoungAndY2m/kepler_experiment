query,plan_id,plan_content
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(writer)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%Mrs%')
AND n.gender = 'm'
AND n.name LIKE '%Thomas%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(co-executive producer)', '(producer)', '(voice)', '(creator)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(writer)', '(uncredited)', '(co-executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1931 AND 1994;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[hu]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Donald%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%production%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%his%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1921 AND 2002;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(producer)', '(written by)', '(associate producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Tony%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(executive producer)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%release%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Carl%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Henson%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1972 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(supervising producer)', '(creator)', '(supervising producer)', '(supervising producer)')
AND cn.country_code = '[gb]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Jamie%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1913 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(producer)', '(executive producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Japan%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%question%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%2008%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%co%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%daring%')
AND n.gender = 'm'
AND n.name LIKE '%George%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2012 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(executive producer)', '(uncredited)', '(archive footage)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Greene%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1965 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%2005%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Philip%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(writer)', '(uncredited)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(producer)', '(uncredited)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1917 AND 1947;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1975%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Mark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(voice: English version)', '(credit only)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Hungary%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(uncredited)', '(voice)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1916%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Baker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1910 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%Belgium%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%her%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Tony%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1997 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2014;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Jones%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1957 AND 1983;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(producer)', '(uncredited)', '(production assistant)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(script)', '(producer)', '(as T.J. Hageboeck)', '(technical advisor: military)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%original%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Jackson%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2007%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1952 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%1989%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Collin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1952 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Jackson%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1997 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%2003%')
AND n.gender = 'm'
AND n.name LIKE '%Jamie%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2003;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Bolton%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1920 AND 2005;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(creator)', '(co-producer)', '(co-producer)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%directly%')
AND n.gender = 'm'
AND n.name LIKE '%Phil%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1995 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(production assistant)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%Boy%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%John%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 1999;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Christoph%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1979 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%production%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Justin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%white%')
AND n.gender = 'm'
AND n.name LIKE '%Gallo%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1980 AND 1999;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(voice)', '(executive producer)', '(uncredited)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%1914%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1963 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Austria%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Jim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1968 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1980%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%d%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2012 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Kent%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1929 AND 1992;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1913 AND 1968;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(co-executive producer)', '(creator)', '(voice)', '(co-executive producer)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%1023%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(head writer)', '(head writer)')
AND cn.country_code = '[au]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%the%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%Foundation%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Green%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1961 AND 1993;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(executive producer)', '(production assistant)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Thomas%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%L%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(associate producer)', '(voice)', '(assistant location manager) (uncredited)', '(archive footage) (uncredited)', '(1998)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Ed%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 1970;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2014;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(co-producer)', '(creator)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1986 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(creator)', '(supervising producer)', '(voice)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%Kane%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%he%')
AND n.gender = 'm'
AND n.name LIKE '%Thomas%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Charles%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%James%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(head writer)', '(voice)', '(head writer)', '(head writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1937 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1927 AND 1978;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(additional key assistant location manager: Los Angeles)', '(archive footage)', '(co-producer)', '(developed by)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Charles%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1989 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(producer)', '(production assistant)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%participation%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Lee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1951 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1915%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(creator)', '(uncredited)', '(written by)', '(executive producer)', '(written by)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%James%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%RAT%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1966 AND 1975;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(production assistant)', '(uncredited)', '(production assistant)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%p%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Stephen%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%Medusa%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%us%')
AND n.gender = 'm'
AND n.name LIKE '%George%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(associate producer)', '(supervising producer)', '(production coordinator)', '(voice)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Barker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2014;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1976 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2012%' OR mc.note LIKE '%2011%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Timothy%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1941 AND 2003;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1958%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1952 AND 1991;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Daniel%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1926 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(writer)', '(writer)', '(producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Steve%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 1997;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2012%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%PCS%')
AND n.gender = 'm'
AND n.name LIKE '%Cal%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(production coordinator)', '(written by)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%De%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 1997;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(uncredited)', '(writer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Germany%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Clinton%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(executive producer)', '(voice)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%982%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1999%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%33%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(segment ""Mukha"")', '(uncredited)', '(as Rob Base and DJ E-Z Rock)', '(producer)', '(executive producer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%who%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%David%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1912 AND 2002;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(writer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Dave%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%1891%')
AND n.gender = 'm'
AND n.name LIKE '%Tom%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1913%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Lee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(written by)', '(uncredited)', '(producer)', '(written by)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1981 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%Mike%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(audience coordinator)', '(creator)', '(voice)', '(studio producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%to%')
AND n.gender = 'm'
AND n.name LIKE '%Clark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1896 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Clark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(voice)', '(production assistant)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1961%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1948 AND 1970;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1966 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(creator)', '(production assistant)', '(associate producer)', '(written by)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2011%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production coordinator)', '(co-producer)', '(executive producer)', '(co-executive producer)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Hungary%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Cal%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1965 AND 1999;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(production assistant)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%1913%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%not%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Tom%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1943 AND 1993;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Mark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(voice)', '(voice)', '(producer) (as Fred DeCordova)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%cable%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%all%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Jimmy%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1961 AND 2014;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(writer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1972 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2012%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1927 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(writer)', '(voice)', '(writer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%of%')
AND n.gender = 'm'
AND n.name LIKE '%Goelz%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Lee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2005;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(production assistant)', '(producer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1975 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(executive producer)', '(executive producer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%to%')
AND n.gender = 'm'
AND n.name LIKE '%Cummings%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(producer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%George%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1983 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(supervising producer)', '(co-executive producer)', '(script supervisor)', '(production coordinator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%production%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Godfrey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1917 AND 1998;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(producer)', '(voice)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%UK%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Gabriel%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(associate producer)', '(writer)', '(voice)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Kar%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(head writer)', '(head writer)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2007%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Jeff%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(writer)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Jack%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%that%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%de%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1914 AND 1927;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(writer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%33%')
AND n.gender = 'm'
AND n.name LIKE '%Blanc%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1928 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1921 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Clark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(voice: English version)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2002%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Will%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Jack%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2012 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1946 AND 1997;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Brazil%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1994 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1952 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Fisher%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1942 AND 2005;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(voice: English version)', '(voice: English version)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%co%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1948 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1928%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Bauer%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1978 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(voice)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%some%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1958 AND 2002;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(production assistant)', '(written by)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%production%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%James%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(voice)', '(writer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Jeff%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1977 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Godfrey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1910 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(executive producer)', '(writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%30%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%production%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Clark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1942 AND 2002;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(adprom manager)', '(executive producer)', '(creator)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Christoph%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1994 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Hungary%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Lee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1933 AND 1997;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(producer)', '(uncredited)', '(co-producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Lenses%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%James%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(1991)', '(script editor)', '(uncredited)', '(co-director)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%John%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2001%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1995 AND 2001;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(creator)', '(production assistant)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Blair%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1977 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(associate producer)', '(uncredited)', '(producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Stephen%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1968 AND 1997;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%production%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%PCS%')
AND n.gender = 'm'
AND n.name LIKE '%Bill%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2006;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(head writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2007%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%Harry%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(executive producer)', '(voice)', '(producer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Castellaneta%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1970 AND 2001;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%White%')
AND n.gender = 'm'
AND n.name LIKE '%Cha%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(producer)', '(voice)', '(producer)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2003;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Harris%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1947 AND 1994;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Christoph%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%his%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Juan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2005;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%PCS%')
AND n.gender = 'm'
AND n.name LIKE '%Clark%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1925 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Hank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jamie%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1965 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(credit only)', '(voice: English version)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1957 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%feel%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1956 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Cummings%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(production assistant)', '(uncredited)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%excuse%')
AND n.gender = 'm'
AND n.name LIKE '%Baker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1919 AND 1990;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%1998%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Tom%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production coordinator)', '(supervising producer)', '(supervising producer)', '(co-producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Jackson%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2001%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%in%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Josep%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1964 AND 1969;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%Bram%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1942 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Colbert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1915 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 1997;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(as JosÃ© Marco Davo)', '(production assistant)', '(segment ""Deep Dark Secret"")')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%look%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2004;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Gilbert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1955 AND 2005;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Josep%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Hungary%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Christoph%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1969 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%p%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%K%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Bennett%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%33%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(executive producer)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%RAT%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Barrie%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1927 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(uncredited)', '(uncredited)', '(uncredited)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%France%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Dick%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Hill%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1910 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%co%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1963 AND 1998;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: Japanese version)', '(writer)', '(child)', '(additional screenplay)', '(voice)')
AND cn.country_code = '[nl]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1998%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Castellaneta%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2001%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Pat%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Letterman%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1968 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Jean%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1989 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Gold%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1947 AND 1996;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2009%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production coordinator)', '(uncredited)', '(voice)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Ellis%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(executive producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Mike%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1960 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(extras set coordinator) (uncredited)', '(voice: Canadian version)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Jackson%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(co-executive producer)', '(creator)', '(voice)', '(supervising producer)', '(co-producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2012%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(creator)', '(writer)', '(executive producer)', '(adprom manager)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%in%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1919 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%January%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1989 AND 2007;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(executive producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Black%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1986 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2005%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2000;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice) (as A. Karachentsov)', '(production assistant: writers)', '(uncredited)', '(scenario, adaptation and dialogue)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%West%' OR mc.note LIKE '%2008%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%PCS%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%White%')
AND n.gender = 'm'
AND n.name LIKE '%Daniel%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1979 AND 2011;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(uncredited)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%France%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2005;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Hayes%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1981 AND 2003;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1965%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1927 AND 1956;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2012%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Rob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Malice%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1975 AND 1991;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(written by)', '(co-executive producer)', '(uncredited)', '(supervising producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1931 AND 1974;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2011%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Al%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1941 AND 2013;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(producer)', '(uncredited)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2008;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1913%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1922 AND 1941;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(producer)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%in%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1981 AND 2009;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Jimmy%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1995 AND 2012;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%Bulgaria%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1948 AND 1962;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM random_aka_name_1 AS an,
   random_char_name_1 AS chn,
   random_cast_info_1 AS ci,
   random_company_name_1 AS cn,
   random_info_type_1 AS it,
  random_movie_companies_1 AS mc,
   random_movie_info_1 AS mi,
   random_name_1 AS n,
   random_role_type_1 AS rt,
   random_title_1 AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Chris%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2010;",147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(ci person_id_cast_info_random_1) SeqScan(rt) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(mc movie_id_movie_companies_random_1) IndexScan(cn random_company_name_1_pkey) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) SeqScan(it) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) NestLoop(n an ci rt chn mc cn t mi) HashJoin(n an ci rt chn mc cn t mi it) Leading((((((((((n an) ci) rt) chn) mc) cn) t) mi) it)) */
