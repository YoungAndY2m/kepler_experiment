query,plan_id,plan_content
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '3.0'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 1950;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '3.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '3.0'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '7.0'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Bulgaria')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Thriller')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '7.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '3.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('USA', 'America')
AND mi_idx.info < '3.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 2005;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND mi_idx.info < '3.0'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND mi_idx.info < '8.5'
AND t.production_year > 1990;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
"SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM sampled_info_type_4 AS it1,
   sampled_info_type_4 AS it2,
   sampled_keyword_4 AS k,
   sampled_kind_type_4 AS kt,
   sampled_movie_info_4 AS mi,
   sampled_movie_info_idx_4 AS mi_idx,
   sampled_movie_keyword_4 AS mk,
   sampled_title_4 AS t
WHERE kt.id = t.kind_id
AND t.id = mi.movie_id
AND t.id = mk.movie_id
AND t.id = mi_idx.movie_id
AND mk.movie_id = mi.movie_id
AND mk.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND k.id = mk.keyword_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND mi_idx.info < '8.5'
AND t.production_year > 2000;",85,/*+  SeqScan(mi_idx) SeqScan(it2) SeqScan(k) IndexScan(mk keyword_id_movie_keyword_4) IndexScan(mi movie_id_movie_info_4) SeqScan(it1) IndexScan(t sampled_title_4_pkey) SeqScan(kt) HashJoin(mi_idx it2) NestLoop(k mk) HashJoin(mi_idx it2 k mk) NestLoop(mi_idx it2 k mk mi) HashJoin(mi_idx it2 k mk mi it1) NestLoop(mi_idx it2 k mk mi it1 t) HashJoin(mi_idx it2 k mk mi it1 t kt) Leading(((((((mi_idx it2) (k mk)) mi) it1) t) kt)) */
