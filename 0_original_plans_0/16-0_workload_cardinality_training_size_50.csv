query,plan_id,plan_content
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 3
AND t.episode_nr < 137;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 4
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 7
AND t.episode_nr < 2854;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 11
AND t.episode_nr < 26;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 23
AND t.episode_nr < 36;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 5;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'murder'
AND t.episode_nr >= 2
AND t.episode_nr < 47;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 4
AND t.episode_nr < 34;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 5
AND t.episode_nr < 19;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 19
AND t.episode_nr < 5092;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 10
AND t.episode_nr < 23;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 14
AND t.episode_nr < 4539;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 39
AND t.episode_nr < 8622;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 2
AND t.episode_nr < 8951;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 1
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'murder'
AND t.episode_nr >= 6
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'oral-sex'
AND t.episode_nr >= 1
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 4571;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 20
AND t.episode_nr < 23;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'father-son-relationship'
AND t.episode_nr >= 10
AND t.episode_nr < 76;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 2
AND t.episode_nr < 49;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 7
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 79
AND t.episode_nr < 5673;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 23
AND t.episode_nr < 38;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 11
AND t.episode_nr < 10733;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ph]'
AND k.keyword = 'sex'
AND t.episode_nr >= 1
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'death'
AND t.episode_nr >= 43
AND t.episode_nr < 8572;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 11
AND t.episode_nr < 13443;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'friendship'
AND t.episode_nr >= 21
AND t.episode_nr < 56;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'male-nudity'
AND t.episode_nr >= 1
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 10
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 1
AND t.episode_nr < 5;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'surrealism'
AND t.episode_nr >= 12
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 8
AND t.episode_nr < 14;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 5
AND t.episode_nr < 10944;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 5
AND t.episode_nr < 15200;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'father-daughter-relationship'
AND t.episode_nr >= 16
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 16
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 1
AND t.episode_nr < 6;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'death'
AND t.episode_nr >= 10
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 3
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 18
AND t.episode_nr < 136;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 5
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 16
AND t.episode_nr < 20;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 4
AND t.episode_nr < 101;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'family-relationships'
AND t.episode_nr >= 6
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 13
AND t.episode_nr < 4964;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 17
AND t.episode_nr < 8179;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 2
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 8
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 13
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 6
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'revenge'
AND t.episode_nr >= 11
AND t.episode_nr < 12942;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 5;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 9
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 10
AND t.episode_nr < 38;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 1
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 15
AND t.episode_nr < 20;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'murder'
AND t.episode_nr >= 3
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'dog'
AND t.episode_nr >= 1
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'nudity'
AND t.episode_nr >= 1
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'death'
AND t.episode_nr >= 8
AND t.episode_nr < 49;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 13
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 2
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 7
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'murder'
AND t.episode_nr >= 6
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 16
AND t.episode_nr < 33;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 18
AND t.episode_nr < 44;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 3
AND t.episode_nr < 10902;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 6
AND t.episode_nr < 19;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 1
AND t.episode_nr < 3;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 2
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-breasts'
AND t.episode_nr >= 14
AND t.episode_nr < 23;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 9
AND t.episode_nr < 1291;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'father-son-relationship'
AND t.episode_nr >= 4
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 28
AND t.episode_nr < 29;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'anal-sex'
AND t.episode_nr >= 7
AND t.episode_nr < 457;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 2
AND t.episode_nr < 24;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 8
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 6
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 15
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 8
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 10
AND t.episode_nr < 20;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 42;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'tv-mini-series'
AND t.episode_nr >= 10
AND t.episode_nr < 14;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'family-relationships'
AND t.episode_nr >= 6
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 12
AND t.episode_nr < 31;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 29;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 4
AND t.episode_nr < 14;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'sex'
AND t.episode_nr >= 6
AND t.episode_nr < 38;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 4
AND t.episode_nr < 1695;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'family-relationships'
AND t.episode_nr >= 2
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 7
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 5
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ar]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 1
AND t.episode_nr < 6;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 11
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'family-relationships'
AND t.episode_nr >= 1
AND t.episode_nr < 3;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 4
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'bare-breasts'
AND t.episode_nr >= 5
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'violence'
AND t.episode_nr >= 3
AND t.episode_nr < 5;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 9
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 11
AND t.episode_nr < 50;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'surrealism'
AND t.episode_nr >= 9
AND t.episode_nr < 23;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 7
AND t.episode_nr < 42;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 1
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 8
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 14
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 1
AND t.episode_nr < 6;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 15
AND t.episode_nr < 20;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 9
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 9
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 5
AND t.episode_nr < 6;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 5
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 3
AND t.episode_nr < 14;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 1
AND t.episode_nr < 12159;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'revenge'
AND t.episode_nr >= 2
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 6
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 19
AND t.episode_nr < 5383;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[pl]'
AND k.keyword = 'murder'
AND t.episode_nr >= 3
AND t.episode_nr < 6;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 4
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 12
AND t.episode_nr < 10838;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 11
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 5
AND t.episode_nr < 5263;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 8
AND t.episode_nr < 25;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 10
AND t.episode_nr < 42;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 7
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 8
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 2
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 5
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 1
AND t.episode_nr < 42;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 12
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 46;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 1
AND t.episode_nr < 24;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 4
AND t.episode_nr < 15;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 14
AND t.episode_nr < 38;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 16
AND t.episode_nr < 33;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 2
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'non-fiction'
AND t.episode_nr >= 7
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 2
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 40
AND t.episode_nr < 10954;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 7
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 1
AND t.episode_nr < 12;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fi]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 3
AND t.episode_nr < 769;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 7
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 4
AND t.episode_nr < 5;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[mx]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 6
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bastard'
AND t.episode_nr >= 6
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 7
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-breasts'
AND t.episode_nr >= 5
AND t.episode_nr < 17;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'police'
AND t.episode_nr >= 14
AND t.episode_nr < 59;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 6
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'number-in-title'
AND t.episode_nr >= 8
AND t.episode_nr < 36;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 7
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 5
AND t.episode_nr < 11;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 14
AND t.episode_nr < 21;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 11
AND t.episode_nr < 50;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'murder'
AND t.episode_nr >= 5
AND t.episode_nr < 34;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 10
AND t.episode_nr < 260;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'sex'
AND t.episode_nr >= 7
AND t.episode_nr < 28;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'blood'
AND t.episode_nr >= 3
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 3
AND t.episode_nr < 3716;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'murder'
AND t.episode_nr >= 8
AND t.episode_nr < 9;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 7
AND t.episode_nr < 35;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 34;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'love'
AND t.episode_nr >= 3
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'violence'
AND t.episode_nr >= 4
AND t.episode_nr < 12;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 2;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'murder'
AND t.episode_nr >= 2
AND t.episode_nr < 13;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'father-son-relationship'
AND t.episode_nr >= 20
AND t.episode_nr < 3929;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'love'
AND t.episode_nr >= 2
AND t.episode_nr < 18;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'male-nudity'
AND t.episode_nr >= 4
AND t.episode_nr < 23;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'oral-sex'
AND t.episode_nr >= 14
AND t.episode_nr < 4839;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 2
AND t.episode_nr < 16;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 23
AND t.episode_nr < 4135;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'death'
AND t.episode_nr >= 5
AND t.episode_nr < 8;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'male-nudity'
AND t.episode_nr >= 10
AND t.episode_nr < 10056;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 5
AND t.episode_nr < 7;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 18
AND t.episode_nr < 2101;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[it]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 11
AND t.episode_nr < 11000;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 4
AND t.episode_nr < 10;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 4;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 5
AND t.episode_nr < 42;",195,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) SeqScan(cn) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) HashJoin(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci n) NestLoop(t k mk mc cn ci n an) Leading(((((((t (k mk)) mc) cn) ci) n) an)) */
