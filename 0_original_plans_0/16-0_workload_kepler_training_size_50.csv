query,plan_id,plan_content
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'vicar'
AND t.episode_nr >= 0
AND t.episode_nr < 4472;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ar]'
AND k.keyword = 'child-shot-in-the-head'
AND t.episode_nr >= 0
AND t.episode_nr < 7717;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'abnormal-behavior'
AND t.episode_nr >= 2
AND t.episode_nr < 3251;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'death-trap'
AND t.episode_nr >= 1
AND t.episode_nr < 3893;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'origins'
AND t.episode_nr >= 0
AND t.episode_nr < 10101;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'tied-to-chair'
AND t.episode_nr >= 9
AND t.episode_nr < 2447;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'buddhist'
AND t.episode_nr >= 0
AND t.episode_nr < 4642;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'psychiatrist'
AND t.episode_nr >= 4
AND t.episode_nr < 15745;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ph]'
AND k.keyword = 'dog-tag'
AND t.episode_nr >= 0
AND t.episode_nr < 10111;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'religious-confession'
AND t.episode_nr >= 1
AND t.episode_nr < 8159;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'destruction-of-property'
AND t.episode_nr >= 0
AND t.episode_nr < 12480;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'wendell-berry-quotation'
AND t.episode_nr >= 0
AND t.episode_nr < 1414;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[be]'
AND k.keyword = 'dancing'
AND t.episode_nr >= 0
AND t.episode_nr < 498;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'horse-drawn-carriage'
AND t.episode_nr >= 1
AND t.episode_nr < 8035;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'nitroglycerin'
AND t.episode_nr >= 3
AND t.episode_nr < 15465;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'boss'
AND t.episode_nr >= 9
AND t.episode_nr < 12655;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'bloody-knife'
AND t.episode_nr >= 0
AND t.episode_nr < 7809;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'dysentery'
AND t.episode_nr >= 6
AND t.episode_nr < 2135;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'caged-bird'
AND t.episode_nr >= 1
AND t.episode_nr < 4342;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'journey'
AND t.episode_nr >= 0
AND t.episode_nr < 6861;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex-in-office'
AND t.episode_nr >= 5
AND t.episode_nr < 14479;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'reference-to-jean-harlow'
AND t.episode_nr >= 2
AND t.episode_nr < 517;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[se]'
AND k.keyword = 'united-states-navy'
AND t.episode_nr >= 20
AND t.episode_nr < 7572;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'old-lady'
AND t.episode_nr >= 0
AND t.episode_nr < 2305;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'protocol'
AND t.episode_nr >= 1
AND t.episode_nr < 5169;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'prescription-drugs'
AND t.episode_nr >= 8
AND t.episode_nr < 1940;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'american-flag'
AND t.episode_nr >= 18
AND t.episode_nr < 8535;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'detention'
AND t.episode_nr >= 6
AND t.episode_nr < 5026;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[be]'
AND k.keyword = 'date'
AND t.episode_nr >= 0
AND t.episode_nr < 5618;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'crossbow'
AND t.episode_nr >= 6
AND t.episode_nr < 10178;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[no]'
AND k.keyword = 'secretary'
AND t.episode_nr >= 1
AND t.episode_nr < 683;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'anesthesiologist'
AND t.episode_nr >= 0
AND t.episode_nr < 10556;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[se]'
AND k.keyword = 'island'
AND t.episode_nr >= 2
AND t.episode_nr < 11536;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'desktop-zen-garden'
AND t.episode_nr >= 4
AND t.episode_nr < 5163;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[sk]'
AND k.keyword = 'bribery'
AND t.episode_nr >= 2
AND t.episode_nr < 7012;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'heir'
AND t.episode_nr >= 1
AND t.episode_nr < 1054;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'lactation'
AND t.episode_nr >= 2
AND t.episode_nr < 2630;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'aerosol'
AND t.episode_nr >= 2
AND t.episode_nr < 3719;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'reference-to-hitler'
AND t.episode_nr >= 0
AND t.episode_nr < 10067;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'drugs'
AND t.episode_nr >= 4
AND t.episode_nr < 4118;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'towel'
AND t.episode_nr >= 5283
AND t.episode_nr < 14846;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'call-in'
AND t.episode_nr >= 3
AND t.episode_nr < 3488;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'rescue'
AND t.episode_nr >= 12
AND t.episode_nr < 470;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'father-son-relationship'
AND t.episode_nr >= 8303
AND t.episode_nr < 15594;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'episode-starts-with-sex'
AND t.episode_nr >= 5
AND t.episode_nr < 11;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'severed-arm'
AND t.episode_nr >= 2
AND t.episode_nr < 12435;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'the-muppets'
AND t.episode_nr >= 3
AND t.episode_nr < 8805;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'church'
AND t.episode_nr >= 0
AND t.episode_nr < 4770;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'home-video'
AND t.episode_nr >= 15
AND t.episode_nr < 11776;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'disposing-of-a-dead-body'
AND t.episode_nr >= 0
AND t.episode_nr < 1951;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'reference-to-jimmy-hoffa'
AND t.episode_nr >= 5
AND t.episode_nr < 11624;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[es]'
AND k.keyword = 'shimmy'
AND t.episode_nr >= 2
AND t.episode_nr < 9302;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'prom'
AND t.episode_nr >= 11
AND t.episode_nr < 3636;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'medicine-man'
AND t.episode_nr >= 3
AND t.episode_nr < 802;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'fang'
AND t.episode_nr >= 4
AND t.episode_nr < 7349;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'factory-farming'
AND t.episode_nr >= 0
AND t.episode_nr < 178;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sailing-ship'
AND t.episode_nr >= 9
AND t.episode_nr < 11052;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'male-in-bathtub'
AND t.episode_nr >= 14
AND t.episode_nr < 11633;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'driving'
AND t.episode_nr >= 5
AND t.episode_nr < 13194;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'radiation'
AND t.episode_nr >= 0
AND t.episode_nr < 5489;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'killed-off-camera'
AND t.episode_nr >= 10
AND t.episode_nr < 11299;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'homecoming'
AND t.episode_nr >= 5
AND t.episode_nr < 1101;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'purgatory'
AND t.episode_nr >= 9
AND t.episode_nr < 5389;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'cap'
AND t.episode_nr >= 0
AND t.episode_nr < 10514;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'quack-medicine'
AND t.episode_nr >= 4
AND t.episode_nr < 6063;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[it]'
AND k.keyword = 'convulsion'
AND t.episode_nr >= 2
AND t.episode_nr < 475;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'military-cemetery'
AND t.episode_nr >= 0
AND t.episode_nr < 12025;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'attempted-escape'
AND t.episode_nr >= 2
AND t.episode_nr < 2822;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'woman-in-a-bikini'
AND t.episode_nr >= 0
AND t.episode_nr < 4644;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'scuba-diving'
AND t.episode_nr >= 13
AND t.episode_nr < 8395;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'self-mutilation'
AND t.episode_nr >= 1
AND t.episode_nr < 15141;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'elizabeth-i'
AND t.episode_nr >= 3
AND t.episode_nr < 576;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'multiple-homicide'
AND t.episode_nr >= 10
AND t.episode_nr < 12732;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'punishment'
AND t.episode_nr >= 0
AND t.episode_nr < 8528;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'fda'
AND t.episode_nr >= 2
AND t.episode_nr < 15631;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'wheelchair'
AND t.episode_nr >= 0
AND t.episode_nr < 9670;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'announcement'
AND t.episode_nr >= 1
AND t.episode_nr < 6053;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'advice'
AND t.episode_nr >= 2
AND t.episode_nr < 8023;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'tree-branches-for-hands'
AND t.episode_nr >= 2
AND t.episode_nr < 13704;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'lesbian'
AND t.episode_nr >= 7
AND t.episode_nr < 6644;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'world-war-one'
AND t.episode_nr >= 1
AND t.episode_nr < 14833;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'reference-to-richard-earl-lawyer'
AND t.episode_nr >= 8
AND t.episode_nr < 13710;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'public-school'
AND t.episode_nr >= 5
AND t.episode_nr < 10848;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'measles'
AND t.episode_nr >= 4
AND t.episode_nr < 12744;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'cigar-smoking'
AND t.episode_nr >= 9
AND t.episode_nr < 5457;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'clown-mask'
AND t.episode_nr >= 2
AND t.episode_nr < 8969;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'disloyalty'
AND t.episode_nr >= 6
AND t.episode_nr < 9073;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'reference-to-pandora'
AND t.episode_nr >= 2
AND t.episode_nr < 10317;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'puppy'
AND t.episode_nr >= 1
AND t.episode_nr < 575;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sardonic'
AND t.episode_nr >= 1
AND t.episode_nr < 11128;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'smoked-mackerel'
AND t.episode_nr >= 1
AND t.episode_nr < 7441;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'reference-to-richard-iii'
AND t.episode_nr >= 0
AND t.episode_nr < 3304;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'soundproof-room'
AND t.episode_nr >= 5
AND t.episode_nr < 15596;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'feminist'
AND t.episode_nr >= 0
AND t.episode_nr < 5084;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'fist-fight'
AND t.episode_nr >= 0
AND t.episode_nr < 13802;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'neanderthal'
AND t.episode_nr >= 3
AND t.episode_nr < 11400;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[lb]'
AND k.keyword = 'police-officer-arrested'
AND t.episode_nr >= 0
AND t.episode_nr < 2340;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'polygraph-test'
AND t.episode_nr >= 1
AND t.episode_nr < 11928;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'seaside-resort'
AND t.episode_nr >= 4
AND t.episode_nr < 15194;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'snake'
AND t.episode_nr >= 14
AND t.episode_nr < 1121;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'mile-high-club'
AND t.episode_nr >= 1
AND t.episode_nr < 9149;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'people-magazine'
AND t.episode_nr >= 16
AND t.episode_nr < 637;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'dirty-cop'
AND t.episode_nr >= 2
AND t.episode_nr < 12082;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[no]'
AND k.keyword = 'undressing'
AND t.episode_nr >= 5
AND t.episode_nr < 2336;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[be]'
AND k.keyword = 'undressing'
AND t.episode_nr >= 1
AND t.episode_nr < 3710;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'reference-to-star-trek'
AND t.episode_nr >= 0
AND t.episode_nr < 7972;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'con'
AND t.episode_nr >= 4
AND t.episode_nr < 8992;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'bedtime-story'
AND t.episode_nr >= 1
AND t.episode_nr < 12709;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'pistol'
AND t.episode_nr >= 0
AND t.episode_nr < 13474;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'secret-passage'
AND t.episode_nr >= 1
AND t.episode_nr < 10815;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'bear-claw'
AND t.episode_nr >= 5
AND t.episode_nr < 15107;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'cricket-the-insect'
AND t.episode_nr >= 0
AND t.episode_nr < 7456;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'criminal-investigation'
AND t.episode_nr >= 8
AND t.episode_nr < 7354;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'hell'
AND t.episode_nr >= 11
AND t.episode_nr < 10944;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'sclerosis'
AND t.episode_nr >= 2
AND t.episode_nr < 10032;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[be]'
AND k.keyword = 'coffee-shop'
AND t.episode_nr >= 5
AND t.episode_nr < 13635;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'chained'
AND t.episode_nr >= 1
AND t.episode_nr < 3789;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'character-repeating-someone-else''s-dialogue'
AND t.episode_nr >= 2
AND t.episode_nr < 8597;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'ophthalmologist'
AND t.episode_nr >= 0
AND t.episode_nr < 14896;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'loss-of-father'
AND t.episode_nr >= 6
AND t.episode_nr < 4916;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'butcher'
AND t.episode_nr >= 20
AND t.episode_nr < 1581;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'karate-chop'
AND t.episode_nr >= 13
AND t.episode_nr < 8520;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'car-show'
AND t.episode_nr >= 1
AND t.episode_nr < 11006;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ph]'
AND k.keyword = 'nanny'
AND t.episode_nr >= 26
AND t.episode_nr < 6254;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'woman''s-throat-slit'
AND t.episode_nr >= 0
AND t.episode_nr < 11862;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[br]'
AND k.keyword = 'shame'
AND t.episode_nr >= 0
AND t.episode_nr < 6737;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'driving-school'
AND t.episode_nr >= 4
AND t.episode_nr < 5882;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'lighthouse'
AND t.episode_nr >= 0
AND t.episode_nr < 9065;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'lamaze'
AND t.episode_nr >= 15
AND t.episode_nr < 12326;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'michelangelo''s-david'
AND t.episode_nr >= 4
AND t.episode_nr < 11295;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'clearance-sale'
AND t.episode_nr >= 4
AND t.episode_nr < 11054;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'violence'
AND t.episode_nr >= 0
AND t.episode_nr < 9733;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'publisher'
AND t.episode_nr >= 0
AND t.episode_nr < 2318;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'passenger'
AND t.episode_nr >= 0
AND t.episode_nr < 11766;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[cshh]'
AND k.keyword = 'horse'
AND t.episode_nr >= 1
AND t.episode_nr < 2312;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'england'
AND t.episode_nr >= 0
AND t.episode_nr < 6588;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bonsai-tree'
AND t.episode_nr >= 4
AND t.episode_nr < 3808;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'vampire'
AND t.episode_nr >= 0
AND t.episode_nr < 2427;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'slaughter'
AND t.episode_nr >= 4
AND t.episode_nr < 2071;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fi]'
AND k.keyword = 'cigar-smoking'
AND t.episode_nr >= 5
AND t.episode_nr < 11108;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'refracting-telescope'
AND t.episode_nr >= 12
AND t.episode_nr < 2669;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[es]'
AND k.keyword = 'tank'
AND t.episode_nr >= 0
AND t.episode_nr < 10338;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[at]'
AND k.keyword = 'smoke'
AND t.episode_nr >= 1
AND t.episode_nr < 2527;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'tunnel'
AND t.episode_nr >= 1
AND t.episode_nr < 5563;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'under-investigation'
AND t.episode_nr >= 1
AND t.episode_nr < 15201;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'fire'
AND t.episode_nr >= 5
AND t.episode_nr < 78;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'older-man-younger-woman-relationship'
AND t.episode_nr >= 2
AND t.episode_nr < 2484;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'dark-secret'
AND t.episode_nr >= 0
AND t.episode_nr < 13657;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'fire-extinguisher'
AND t.episode_nr >= 7
AND t.episode_nr < 8016;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'awakened-by-alarm-clock'
AND t.episode_nr >= 2
AND t.episode_nr < 11935;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'bioterrorism'
AND t.episode_nr >= 9
AND t.episode_nr < 670;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'spell'
AND t.episode_nr >= 8
AND t.episode_nr < 2234;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'foghorn'
AND t.episode_nr >= 8
AND t.episode_nr < 10465;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'voting-machine'
AND t.episode_nr >= 13
AND t.episode_nr < 4373;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'blood-splatter'
AND t.episode_nr >= 7
AND t.episode_nr < 7776;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'playing-hard-to-get'
AND t.episode_nr >= 7
AND t.episode_nr < 6412;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[cz]'
AND k.keyword = 'broken-plate'
AND t.episode_nr >= 0
AND t.episode_nr < 13386;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'smoking'
AND t.episode_nr >= 0
AND t.episode_nr < 10313;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'tragedy'
AND t.episode_nr >= 0
AND t.episode_nr < 3003;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sunglasses'
AND t.episode_nr >= 3
AND t.episode_nr < 6104;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sphinx'
AND t.episode_nr >= 0
AND t.episode_nr < 702;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'mechanic'
AND t.episode_nr >= 3
AND t.episode_nr < 5817;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'nevada'
AND t.episode_nr >= 1
AND t.episode_nr < 7842;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'reference-to-the-duke-of-wellington'
AND t.episode_nr >= 0
AND t.episode_nr < 12935;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'diner'
AND t.episode_nr >= 15
AND t.episode_nr < 2450;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'outlaw-gang'
AND t.episode_nr >= 10
AND t.episode_nr < 2617;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'dare'
AND t.episode_nr >= 0
AND t.episode_nr < 9673;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'kidnapping'
AND t.episode_nr >= 19
AND t.episode_nr < 549;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'gas'
AND t.episode_nr >= 12
AND t.episode_nr < 13819;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'threat'
AND t.episode_nr >= 5
AND t.episode_nr < 4784;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ph]'
AND k.keyword = 'carnival'
AND t.episode_nr >= 7
AND t.episode_nr < 15234;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'guantanamo-bay'
AND t.episode_nr >= 5
AND t.episode_nr < 11571;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'radio-prank'
AND t.episode_nr >= 7
AND t.episode_nr < 10664;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'family-dinner'
AND t.episode_nr >= 3
AND t.episode_nr < 15612;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'police-boat'
AND t.episode_nr >= 5
AND t.episode_nr < 11470;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'hippocampus'
AND t.episode_nr >= 7
AND t.episode_nr < 13821;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'alien-life-form'
AND t.episode_nr >= 0
AND t.episode_nr < 14321;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'spiral-staircase'
AND t.episode_nr >= 1
AND t.episode_nr < 13622;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'russian-spy'
AND t.episode_nr >= 0
AND t.episode_nr < 8009;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'bait'
AND t.episode_nr >= 3
AND t.episode_nr < 6884;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'implosion'
AND t.episode_nr >= 4
AND t.episode_nr < 10820;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'boy-ranger'
AND t.episode_nr >= 7
AND t.episode_nr < 1910;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'face-scratch'
AND t.episode_nr >= 1
AND t.episode_nr < 6329;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[be]'
AND k.keyword = 'normalcy'
AND t.episode_nr >= 7
AND t.episode_nr < 4294;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'professor'
AND t.episode_nr >= 1
AND t.episode_nr < 6956;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'gynecological-exam'
AND t.episode_nr >= 0
AND t.episode_nr < 12157;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'broken-levee'
AND t.episode_nr >= 0
AND t.episode_nr < 12751;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'florist'
AND t.episode_nr >= 2
AND t.episode_nr < 2264;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'back-from-the-dead'
AND t.episode_nr >= 2
AND t.episode_nr < 3023;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'car-chase'
AND t.episode_nr >= 1
AND t.episode_nr < 4638;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'infidelity'
AND t.episode_nr >= 6
AND t.episode_nr < 4577;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'kicked-in-the-ribs'
AND t.episode_nr >= 14
AND t.episode_nr < 4097;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'turtle'
AND t.episode_nr >= 1
AND t.episode_nr < 5376;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'slipping-on-a-banana-peel'
AND t.episode_nr >= 0
AND t.episode_nr < 10072;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sports-team'
AND t.episode_nr >= 5
AND t.episode_nr < 11780;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'inheritance'
AND t.episode_nr >= 1
AND t.episode_nr < 2043;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'kicked-in-the-leg'
AND t.episode_nr >= 20
AND t.episode_nr < 10272;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'trunk'
AND t.episode_nr >= 3
AND t.episode_nr < 10427;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'long-lost-daughter'
AND t.episode_nr >= 1
AND t.episode_nr < 3602;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'scantily-clad-female'
AND t.episode_nr >= 2
AND t.episode_nr < 5787;",71,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
