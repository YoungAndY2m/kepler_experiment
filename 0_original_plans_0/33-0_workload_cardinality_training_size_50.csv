query,plan_id,plan_content
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'video game', 'video movie', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 2010 AND 2016;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'video movie', 'video movie', 'tv series', 'video game')
AND kt2.kind IN ('movie', 'movie', 'movie', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'follows', 'follows', 'follows')
AND mi_idx2.info < '31'
AND t2.production_year BETWEEN 1991 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'tv movie', 'tv movie', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7.7'
AND t2.production_year BETWEEN 1993 AND 1998;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'tv series', 'movie', 'episode', 'movie')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '35'
AND t2.production_year BETWEEN 1975 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7.4'
AND t2.production_year BETWEEN 1964 AND 1985;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '4.9'
AND t2.production_year BETWEEN 1995 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '4.3'
AND t2.production_year BETWEEN 1999 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'tv series', 'tv series', 'movie', 'video movie')
AND lt.link IN ('follows', 'followed by', 'followed by', 'followed by', 'follows')
AND mi_idx2.info < '7.1'
AND t2.production_year BETWEEN 1984 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'movie', 'movie', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '22'
AND t2.production_year BETWEEN 2007 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 1977 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'movie', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 2007 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 2004 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video movie', 'video game', 'tv series', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '6.2'
AND t2.production_year BETWEEN 1936 AND 1967;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[cshh]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'tv series', 'tv series', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'movie')
AND lt.link IN ('follows', 'followed by', 'follows', 'followed by', 'followed by')
AND mi_idx2.info < '6.4'
AND t2.production_year BETWEEN 1949 AND 2015;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('followed by', 'followed by', 'follows', 'followed by', 'followed by')
AND mi_idx2.info < '6.5'
AND t2.production_year BETWEEN 1970 AND 1982;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[mk]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'video movie', 'tv movie')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5.4'
AND t2.production_year BETWEEN 2008 AND 2013;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 2010 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1937 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv series', 'tv movie', 'tv movie', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '6.8'
AND t2.production_year BETWEEN 2003 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6.1'
AND t2.production_year BETWEEN 1996 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7.2'
AND t2.production_year BETWEEN 2006 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '5.3'
AND t2.production_year BETWEEN 1985 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video movie', 'video movie', 'video game', 'tv series')
AND kt2.kind IN ('movie', 'movie', 'movie', 'episode', 'episode')
AND lt.link IN ('spin off', 'spoofed in', 'spin off', 'remake of', 'spin off from')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1950 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('video game', 'movie', 'tv movie', 'tv movie', 'tv movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 2003 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('video game', 'video game', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1987 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('remade as', 'spin off', 'spoofs', 'alternate language version of', 'remade as')
AND mi_idx2.info < '5.3'
AND t2.production_year BETWEEN 1991 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '6.7'
AND t2.production_year BETWEEN 2008 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[at]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv series', 'movie', 'movie', 'episode', 'video movie')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1971 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('video game', 'tv series', 'tv movie', 'tv series', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1967 AND 1999;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('video game', 'tv series', 'video movie', 'video movie', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('spoofs', 'spin off', 'spin off from', 'spoofed in', 'spin off')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1934 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 1971 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'movie')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.9'
AND t2.production_year BETWEEN 2007 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'video movie', 'tv series', 'tv series')
AND kt2.kind IN ('video game', 'video movie', 'episode', 'movie', 'tv movie')
AND lt.link IN ('follows', 'followed by', 'follows', 'follows', 'follows')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 1975 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'video game', 'video game', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1967 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'tv series', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 2010 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'tv movie', 'tv movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1993 AND 1999;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'video game', 'tv series', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6.4'
AND t2.production_year BETWEEN 1944 AND 2014;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv movie', 'video game', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'movie', 'episode', 'movie', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'follows', 'followed by')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1916 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '5.1'
AND t2.production_year BETWEEN 1950 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video game', 'tv series', 'tv movie', 'video game', 'video game')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1965 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'tv movie', 'movie', 'tv movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1974 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('follows', 'followed by', 'followed by', 'followed by', 'follows')
AND mi_idx2.info < '4.4'
AND t2.production_year BETWEEN 1914 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1978 AND 1981;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'followed by', 'followed by', 'followed by')
AND mi_idx2.info < '6.5'
AND t2.production_year BETWEEN 1974 AND 1992;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 1948 AND 1974;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv movie', 'video movie', 'tv series', 'video movie')
AND kt2.kind IN ('movie', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1888 AND 1997;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video game', 'tv series', 'video game', 'video game', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5.1'
AND t2.production_year BETWEEN 2005 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('follows', 'followed by', 'followed by', 'followed by', 'followed by')
AND mi_idx2.info < '8.3'
AND t2.production_year BETWEEN 2003 AND 2013;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv series', 'episode', 'tv series', 'tv movie', 'tv series')
AND lt.link IN ('follows', 'followed by', 'follows', 'followed by', 'follows')
AND mi_idx2.info < '7.7'
AND t2.production_year BETWEEN 2003 AND 2014;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '3.4'
AND t2.production_year BETWEEN 1988 AND 2004;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 2001 AND 2002;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'video movie', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('tv series', 'movie', 'movie', 'tv movie', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5.2'
AND t2.production_year BETWEEN 1990 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6.6'
AND t2.production_year BETWEEN 2004 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('spin off from', 'alternate language version of', 'edited from', 'spin off', 'spoofs')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1960 AND 1976;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video game', 'tv series', 'tv movie', 'video movie')
AND kt2.kind IN ('episode', 'movie', 'movie', 'episode', 'episode')
AND lt.link IN ('spoofed in', 'spoofs', 'edited from', 'edited from', 'remake of')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 1993 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('edited from', 'remade as', 'edited from', 'remake of', 'remake of')
AND mi_idx2.info < '6.9'
AND t2.production_year BETWEEN 1990 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'tv movie', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('spin off', 'spin off from', 'edited into', 'edited from', 'spin off from')
AND mi_idx2.info < '7.1'
AND t2.production_year BETWEEN 2003 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'video movie', 'tv movie')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '13'
AND t2.production_year BETWEEN 1977 AND 1997;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1951 AND 2003;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video movie', 'video game', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'follows', 'followed by', 'followed by')
AND mi_idx2.info < '41'
AND t2.production_year BETWEEN 1986 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 2006 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8.4'
AND t2.production_year BETWEEN 1912 AND 1997;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1973 AND 1994;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '8.1'
AND t2.production_year BETWEEN 1956 AND 1964;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[tr]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video game', 'video movie', 'tv series', 'video game', 'tv movie')
AND kt2.kind IN ('tv series', 'tv movie', 'video movie', 'movie', 'video movie')
AND lt.link IN ('follows', 'followed by', 'followed by', 'followed by', 'followed by')
AND mi_idx2.info < '8.7'
AND t2.production_year BETWEEN 1972 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'video game', 'video game')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '4.8'
AND t2.production_year BETWEEN 2003 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'followed by', 'followed by', 'followed by')
AND mi_idx2.info < '7.5'
AND t2.production_year BETWEEN 2001 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv series', 'tv series', 'video game', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('spin off', 'spoofs', 'alternate language version of', 'spoofs', 'remade as')
AND mi_idx2.info < '7.4'
AND t2.production_year BETWEEN 1999 AND 2014;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1978 AND 2013;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('alternate language version of', 'spin off from', 'edited from', 'spoofed in', 'alternate language version of')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1994 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '49407'
AND t2.production_year BETWEEN 1988 AND 1995;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'movie', 'episode')
AND lt.link IN ('follows', 'followed by', 'followed by', 'follows', 'followed by')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1999 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('edited from', 'alternate language version of', 'edited from', 'spin off', 'spin off from')
AND mi_idx2.info < '30'
AND t2.production_year BETWEEN 1971 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'tv movie', 'tv movie', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('spin off from', 'edited from', 'edited from', 'alternate language version of', 'alternate language version of')
AND mi_idx2.info < '7.1'
AND t2.production_year BETWEEN 1890 AND 1984;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'video game', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('spin off', 'spoofed in', 'spoofs', 'remade as', 'edited into')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 1974 AND 2015;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv movie', 'tv movie', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'follows', 'follows')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1929 AND 1965;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv series', 'video game', 'tv series', 'tv series')
AND kt2.kind IN ('movie', 'movie', 'movie', 'episode', 'movie')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1951 AND 2002;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv series', 'tv movie', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7.2'
AND t2.production_year BETWEEN 1961 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'movie', 'tv series', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '29'
AND t2.production_year BETWEEN 2000 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'video movie', 'video game')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1971 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'video movie', 'video game', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('spoofed in', 'remake of', 'remade as', 'remade as', 'edited into')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 1978 AND 1998;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1902 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'episode', 'episode', 'movie')
AND lt.link IN ('followed by', 'follows', 'follows', 'followed by', 'follows')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1962 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '3.8'
AND t2.production_year BETWEEN 1992 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video movie', 'video movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1996 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '32'
AND t2.production_year BETWEEN 1995 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[lk]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'video movie', 'video movie', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7.2'
AND t2.production_year BETWEEN 1991 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1966 AND 1993;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1998 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '20'
AND t2.production_year BETWEEN 1927 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv series', 'tv series', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'movie', 'movie', 'movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1971 AND 1977;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'video movie', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1976 AND 2003;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '6.6'
AND t2.production_year BETWEEN 2002 AND 2004;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'followed by', 'followed by')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1958 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1942 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '22'
AND t2.production_year BETWEEN 2005 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'video game', 'video movie', 'tv series', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6.9'
AND t2.production_year BETWEEN 1970 AND 2002;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'followed by', 'follows', 'followed by')
AND mi_idx2.info < '24256'
AND t2.production_year BETWEEN 2004 AND 2014;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1961 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[ie]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'tv movie', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5.5'
AND t2.production_year BETWEEN 1900 AND 2014;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv series', 'tv series', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('follows', 'follows', 'follows', 'follows', 'followed by')
AND mi_idx2.info < '6.6'
AND t2.production_year BETWEEN 1975 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'tv movie', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1993 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'movie', 'movie', 'movie')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '4.2'
AND t2.production_year BETWEEN 1995 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('followed by', 'followed by', 'follows', 'follows', 'followed by')
AND mi_idx2.info < '8.4'
AND t2.production_year BETWEEN 1978 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'movie', 'movie', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1999 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv movie', 'video game', 'tv movie', 'tv movie', 'tv series')
AND kt2.kind IN ('movie', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1950 AND 1999;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv series', 'video movie', 'video movie', 'video game')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'episode')
AND lt.link IN ('edited from', 'remade as', 'spoofed in', 'edited from', 'edited from')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1982 AND 1994;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '6.9'
AND t2.production_year BETWEEN 2006 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1914 AND 1990;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1937 AND 1975;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video movie', 'video game', 'tv movie', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 2005 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'tv movie', 'tv series', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('edited into', 'edited from', 'spoofs', 'remake of', 'spoofs')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1993 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '14'
AND t2.production_year BETWEEN 2004 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'video game', 'tv movie', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '5.3'
AND t2.production_year BETWEEN 1907 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv series', 'episode', 'tv movie', 'episode', 'movie')
AND lt.link IN ('spoofs', 'edited into', 'spin off from', 'spin off', 'edited into')
AND mi_idx2.info < '43'
AND t2.production_year BETWEEN 1935 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv movie', 'tv series', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('movie', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 1999 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv movie', 'tv series', 'movie', 'tv movie', 'tv series')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '5.1'
AND t2.production_year BETWEEN 1986 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('video movie', 'tv movie', 'video game', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('remade as', 'spoofed in', 'alternate language version of', 'spoofs', 'edited into')
AND mi_idx2.info < '1...35....'
AND t2.production_year BETWEEN 1936 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video game', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'follows', 'follows')
AND mi_idx2.info < '6.7'
AND t2.production_year BETWEEN 1990 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video game', 'tv series', 'video movie', 'video game')
AND kt2.kind IN ('episode', 'movie', 'episode', 'movie', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1990 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'followed by', 'followed by')
AND mi_idx2.info < '5.5'
AND t2.production_year BETWEEN 1991 AND 2004;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'tv movie', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1975 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7.9'
AND t2.production_year BETWEEN 1949 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 1942 AND 2014;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'video movie', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '3.4'
AND t2.production_year BETWEEN 1974 AND 1986;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv series', 'video movie', 'tv movie', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('spin off', 'remade as', 'spoofs', 'spin off from', 'edited into')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1962 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video game', 'tv movie', 'video movie', 'tv series', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'movie', 'movie', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '4.9'
AND t2.production_year BETWEEN 1998 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv series', 'tv movie', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'follows', 'followed by', 'follows')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1981 AND 1989;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '6.2'
AND t2.production_year BETWEEN 1952 AND 2004;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'tv movie', 'episode', 'video game', 'video movie')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1990 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video game', 'video movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '11'
AND t2.production_year BETWEEN 2008 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'video movie', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'movie')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1992 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('video movie', 'tv movie', 'video game', 'tv series', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 2005 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('remade as', 'spin off', 'edited from', 'spin off', 'alternate language version of')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1967 AND 1973;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'video movie', 'tv series', 'video game', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('edited from', 'spoofed in', 'remake of', 'edited into', 'spoofed in')
AND mi_idx2.info < '12'
AND t2.production_year BETWEEN 1984 AND 2003;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('video game', 'tv movie', 'movie', 'tv series', 'video game')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '.000011102'
AND t2.production_year BETWEEN 1939 AND 1996;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video game', 'tv series', 'tv movie', 'tv movie')
AND kt2.kind IN ('movie', 'episode', 'movie', 'tv series', 'tv movie')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 1979 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv series', 'tv movie', 'movie', 'tv series', 'tv series')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '25'
AND t2.production_year BETWEEN 1961 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video movie', 'tv movie', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1888 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8.3'
AND t2.production_year BETWEEN 1966 AND 1972;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '15'
AND t2.production_year BETWEEN 1941 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('video movie', 'video movie', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '12443'
AND t2.production_year BETWEEN 2007 AND 2013;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'followed by', 'follows', 'followed by')
AND mi_idx2.info < '4.8'
AND t2.production_year BETWEEN 1908 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1984 AND 2003;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video movie', 'video movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('edited from', 'spin off', 'spin off', 'remade as', 'spin off from')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1972 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('follows', 'followed by', 'followed by', 'follows', 'follows')
AND mi_idx2.info < '12'
AND t2.production_year BETWEEN 1980 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'tv series', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1936 AND 1974;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('movie', 'movie', 'episode', 'movie', 'episode')
AND lt.link IN ('spoofed in', 'edited from', 'edited into', 'spin off from', 'edited into')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 2006 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'tv series', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '2..113...1'
AND t2.production_year BETWEEN 2004 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'follows', 'followed by')
AND mi_idx2.info < '6.0'
AND t2.production_year BETWEEN 1987 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'movie', 'movie', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1977 AND 2019;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('video movie', 'video game', 'video game', 'tv series', 'video game')
AND kt2.kind IN ('movie', 'movie', 'tv series', 'movie', 'movie')
AND lt.link IN ('spoofs', 'remake of', 'spin off', 'edited into', 'edited from')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1969 AND 1990;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv series', 'video movie', 'movie', 'video movie', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '28'
AND t2.production_year BETWEEN 1899 AND 2016;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 2004 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv movie', 'tv series', 'tv movie', 'movie', 'tv movie')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.7'
AND t2.production_year BETWEEN 1916 AND 1963;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1946 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '6.6'
AND t2.production_year BETWEEN 1926 AND 2000;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv movie', 'tv movie', 'video movie', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('alternate language version of', 'spin off', 'spoofs', 'remade as', 'edited into')
AND mi_idx2.info < '5.2'
AND t2.production_year BETWEEN 2004 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fi]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'tv series', 'video game')
AND kt2.kind IN ('movie', 'movie', 'tv movie', 'tv series', 'tv movie')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1986 AND 1988;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '6.7'
AND t2.production_year BETWEEN 1994 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'movie', 'episode')
AND lt.link IN ('follows', 'follows', 'followed by', 'followed by', 'followed by')
AND mi_idx2.info < '537'
AND t2.production_year BETWEEN 1994 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1928 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('follows', 'follows', 'follows', 'followed by', 'followed by')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 1979 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'follows', 'followed by', 'follows')
AND mi_idx2.info < '8.0'
AND t2.production_year BETWEEN 2004 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('video game', 'video movie', 'video game', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'movie', 'episode', 'movie', 'episode')
AND lt.link IN ('follows', 'follows', 'followed by', 'follows', 'followed by')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 2012 AND 2015;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7.7'
AND t2.production_year BETWEEN 1990 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'tv movie', 'tv movie', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '5'
AND t2.production_year BETWEEN 2007 AND 2019;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'tv movie', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1970 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('tv series', 'tv movie', 'movie', 'movie', 'movie')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6.3'
AND t2.production_year BETWEEN 1962 AND 1997;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'followed by', 'follows', 'follows')
AND mi_idx2.info < '4.1'
AND t2.production_year BETWEEN 1972 AND 1997;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'tv movie', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('tv movie', 'movie', 'video game', 'episode', 'video game')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1915 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'video movie', 'video game', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6.1'
AND t2.production_year BETWEEN 2007 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'video movie', 'tv series', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('spin off', 'edited into', 'spoofs', 'spoofed in', 'remake of')
AND mi_idx2.info < '5.8'
AND t2.production_year BETWEEN 2005 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'tv movie', 'tv movie', 'tv series')
AND kt2.kind IN ('video movie', 'tv series', 'tv series', 'movie', 'movie')
AND lt.link IN ('remade as', 'alternate language version of', 'spin off from', 'remake of', 'spoofs')
AND mi_idx2.info < '13267'
AND t2.production_year BETWEEN 1900 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'episode', 'episode', 'movie')
AND lt.link IN ('followed by', 'follows', 'followed by', 'followed by', 'follows')
AND mi_idx2.info < '6.7'
AND t2.production_year BETWEEN 1982 AND 1996;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'tv series', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7.9'
AND t2.production_year BETWEEN 1997 AND 2006;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'tv movie', 'movie', 'video movie', 'movie')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7.0'
AND t2.production_year BETWEEN 2003 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1973 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'episode')
AND lt.link IN ('featured in', 'featured in', 'featured in', 'featured in', 'featured in')
AND mi_idx2.info < '7.9'
AND t2.production_year BETWEEN 2009 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6.5'
AND t2.production_year BETWEEN 2007 AND 2008;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'movie', 'movie', 'movie')
AND lt.link IN ('edited from', 'edited from', 'alternate language version of', 'edited into', 'edited from')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1998 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1968 AND 1997;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'tv movie', 'video movie', 'tv movie', 'tv series')
AND kt2.kind IN ('movie', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('follows', 'follows', 'follows', 'followed by', 'follows')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1954 AND 1992;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video movie', 'video movie', 'tv movie', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1947 AND 2013;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '6'
AND t2.production_year BETWEEN 1971 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv movie', 'video game', 'video game', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('alternate language version of', 'spoofs', 'edited into', 'remade as', 'spoofed in')
AND mi_idx2.info < '6.4'
AND t2.production_year BETWEEN 1975 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'movie', 'episode', 'movie', 'episode')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1996 AND 2012;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[nl]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'movie', 'episode', 'episode')
AND lt.link IN ('edited into', 'spin off from', 'spoofs', 'spoofed in', 'spin off')
AND mi_idx2.info < '5.5'
AND t2.production_year BETWEEN 1991 AND 2011;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '1560'
AND t2.production_year BETWEEN 1977 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('followed by', 'follows', 'follows', 'follows', 'followed by')
AND mi_idx2.info < '6.6'
AND t2.production_year BETWEEN 1994 AND 2009;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('video game', 'tv series', 'tv series', 'tv series', 'movie')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '4.0'
AND t2.production_year BETWEEN 1967 AND 2013;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('video movie', 'video movie', 'tv movie', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '9'
AND t2.production_year BETWEEN 2001 AND 2003;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('movie', 'movie', 'episode', 'movie', 'movie')
AND lt.link IN ('followed by', 'follows', 'follows', 'follows', 'followed by')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1963 AND 2002;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'tv movie', 'tv movie', 'video game')
AND kt2.kind IN ('movie', 'movie', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '6.8'
AND t2.production_year BETWEEN 1937 AND 2007;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video movie', 'video game', 'tv series', 'tv movie', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '18'
AND t2.production_year BETWEEN 2009 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('video game', 'tv series', 'tv movie', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'referenced in', 'referenced in', 'referenced in')
AND mi_idx2.info < '15'
AND t2.production_year BETWEEN 2003 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('video game', 'tv series', 'video game', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'episode')
AND lt.link IN ('version of', 'version of', 'version of', 'version of', 'version of')
AND mi_idx2.info < '8'
AND t2.production_year BETWEEN 1976 AND 1999;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('features', 'features', 'features', 'features', 'features')
AND mi_idx2.info < '4.3'
AND t2.production_year BETWEEN 1978 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND lt.link IN ('followed by', 'follows', 'followed by', 'follows', 'followed by')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1938 AND 2010;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fr]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'movie', 'episode', 'movie')
AND lt.link IN ('references', 'references', 'references', 'references', 'references')
AND mi_idx2.info < '18'
AND t2.production_year BETWEEN 1964 AND 2005;",534,/*+  SeqScan(ml) SeqScan(lt) IndexScan(t2 title_pkey) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt2) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt t2) NestLoop(ml lt t2 mi_idx2) HashJoin(ml lt t2 mi_idx2 it2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1) HashJoin(ml lt t2 mi_idx2 it2 mi_idx1 it1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2) NestLoop(ml lt t2 mi_idx2 it2 mi_idx1 it1 t1 kt2 mc1 cn1 mc2 cn2 kt1) Leading((((((((((((((ml lt) t2) mi_idx2) it2) mi_idx1) it1) t1) kt2) mc1) cn1) mc2) cn2) kt1)) */
