query,plan_id,plan_content
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Bulgaria')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('USA', 'America')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('USA', 'America')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('USA', 'America')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Bulgaria')
AND n.gender = 'm';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('USA', 'America')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",89,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi) NestLoop(cn mc mi it1) NestLoop(cn mc mi it1 ci) NestLoop(cn mc mi it1 ci n) NestLoop(cn mc mi it1 ci n t) NestLoop(cn mc mi it1 ci n t mk) NestLoop(cn mc mi it1 ci n t mk k) NestLoop(cn mc mi it1 ci n t mk k mi_idx) NestLoop(cn mc mi it1 ci n t mk k mi_idx it2) Leading(((((((((((cn mc) mi) it1) ci) n) t) mk) k) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('USA', 'America')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Drama', 'Horror', 'Western', 'Family')
AND n.gender = 'f';",89,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi) NestLoop(cn mc mi it1) NestLoop(cn mc mi it1 ci) NestLoop(cn mc mi it1 ci n) NestLoop(cn mc mi it1 ci n t) NestLoop(cn mc mi it1 ci n t mk) NestLoop(cn mc mi it1 ci n t mk k) NestLoop(cn mc mi it1 ci n t mk k mi_idx) NestLoop(cn mc mi it1 ci n t mk k mi_idx it2) Leading(((((((((((cn mc) mi) it1) ci) n) t) mk) k) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Thriller')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IN ('Drama', 'Horror')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '20th Century Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Germany', 'German')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IN ('USA', 'America')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'f';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
AND n.gender = 'm';",74,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IN ('Germany', 'German', 'USA', 'American')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German')
AND n.gender = 'm';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'f';",33,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.name LIKE 'Lionsgate%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)')
AND cn.name LIKE 'Twentieth Century Fox%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
AND n.gender = 'm';",85,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
