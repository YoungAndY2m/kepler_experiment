query,plan_id,plan_content
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1958%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%Black%')
AND n.gender = 'f'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1988 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2010%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%33%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%Albert%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1935 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(production assistant)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1940 AND 1991;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(executive producer)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%E%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[hu]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1960%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(archive footage)', '(production coordinator)', '(production assistant)', '(supervising producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%presents%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Sheila%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1926 AND 2003;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%2010%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Eva%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(voice: English version)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 1997;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%one%')
AND n.gender = 'm'
AND n.name LIKE '%Raul%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 1950;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(producer)', '(producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%o%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1904 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%1924%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%33%')
AND n.gender = 'f'
AND n.name LIKE '%Marie%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2004 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(executive producer)', '(voice)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1938 AND 1961;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(producer)', '(co-producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%her%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Julia%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2001;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(credit only)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(executive producer)', '(executive creative director)', '(writer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1916%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%E%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1970 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(writer)', '(executive producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%1909%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1997 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(writer)', '(producer)')
AND cn.country_code = '[tr]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%o%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Williams%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%not%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 2006;",30,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexScan(t title_pkey) IndexOnlyScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci t) NestLoop(n an ci t chn) NestLoop(n an ci t chn mc) NestLoop(n an ci t chn mc cn) NestLoop(n an ci t chn mc cn rt) NestLoop(n an ci t chn mc cn rt mi) HashJoin(n an ci t chn mc cn rt mi it) Leading((((((((((n an) ci) t) chn) mc) cn) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(writer)', '(voice)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%c%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'budget'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%s%')
AND n.gender = 'f'
AND n.name LIKE '%Jerry%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1979 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%is%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(production assistant)', '(production assistant)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%only%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%William%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1958 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 1995;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 2004;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%the%')
AND n.gender = 'f'
AND n.name LIKE '%Jim%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1964 AND 1994;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(creator)', '(archive footage)', '(producer)', '(written by)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1955%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%Robert%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2003 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(writer)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Otto%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 1981;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%g%')
AND n.gender = 'f'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1966 AND 1998;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(uncredited)', '(uncredited)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%King%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Val%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 1992;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[hu]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%the%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Wall%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 2002;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Amato%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Aaron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 1992;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%n%')
AND n.gender = 'f'
AND n.name LIKE '%Tom%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2007 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(credit only)', '(voice: English version)', '(voice: English version)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%Philippines%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1972 AND 1999;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production coordinator) (as Ihsanne Khalafaoui)', '(producer)', '(post-production accountant)', '(also archive footage)', '(as John Helms)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%by%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1959 AND 2000;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(voice: English version) (as Christopher R. Sabat)', '(writer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%Hungary%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Rob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%song%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Lorne%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Ron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(voice)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%Phoebe%')
AND n.gender = 'm'
AND n.name LIKE '%Ali%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(writer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1983%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(written by)', '(archive footage)', '(uncredited)', '(creator)')
AND cn.country_code = '[jp]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%train%')
AND n.gender = 'm'
AND n.name LIKE '%Martin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1940 AND 1982;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%Philippines%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Friedman%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer)', '(producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%care%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1964 AND 1993;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(credit only)', '(credit only)', '(credit only)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Staying%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%sworn%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1931 AND 1992;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'budget'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%der%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2010 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(uncredited)', '(executive producer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%Hungary%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Ray%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(executive producer)', '(voice)', '(voice)')
AND cn.country_code = '[jp]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%are%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(executive producer)', '(uncredited)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2004;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1960 AND 2000;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%this%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jerry%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1968 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(producer)', '(producer)', '(script supervisor)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ari%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(production assistant)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1961%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(writer)', '(voice)', '(voice)')
AND cn.country_code = '[nl]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2014;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Jim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1983 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%all%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[br]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%2006%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%Hungary%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(actors director)', '(writer)', '(executive producer)', '(voice)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(producer)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1981%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1999%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Jedi%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%Hungary%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1995 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(production assistant)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%Well%')
AND n.gender = 'm'
AND n.name LIKE '%JoÃ£o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1906 AND 1986;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Chris%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(unspecified crew member)', '(production assistant)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%throwing%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1965 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%1994%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Roger%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2001 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice: Japanese version)', '(head writer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%1935%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%Pete%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(uncredited)', '(uncredited)', '(writer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%original%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jeff%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1960 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%version%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Christopher%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1972 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%as%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1962 AND 2004;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2011%' OR mc.note LIKE '%Production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(producer)', '(uncredited)', '(unspecified crew member)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%original%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Burnett%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(uncredited)', '(executive producer)', '(written by)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Ron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Home%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%s%')
AND n.gender = 'f'
AND n.name LIKE '%George%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1981 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(writer)', '(writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(associate producer)', '(producer)', '(producer)', '(producer)')
AND cn.country_code = '[gr]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Amato%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1932 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(supervising producer)', '(written by)', '(uncredited)', '(voice)', '(production coordinator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%33%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%F%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1968 AND 1999;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Godfrey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1914 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1938 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(writer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%your%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%by%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Thor%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1933 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%all%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(voice: English version)', '(credit only)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[hu]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1960 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1921 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1997 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[ca]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%adventure%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jason%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 1999;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%I%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Frederick%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(script supervisor)', '(voice)', '(creator)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%1939%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')
AND n.gender = 'f'
AND n.name LIKE '%Robert%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1984 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2001%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%from%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Hwang%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1980 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Kevin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1925 AND 2004;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(executive producer)', '(executive producer)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Dorothy%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1966 AND 1978;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(voice)', '(producer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Hungary%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2011%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%imaginary%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2014;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Ramos%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1944%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(additional writing)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[ph]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Caruso%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 1993;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(production assistant)', '(production assistant)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%all%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%fourth%')
AND n.gender = 'm'
AND n.name LIKE '%Jason%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2012 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1989 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(associate producer)', '(uncredited)', '(voice)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Germany%' OR mi.info LIKE '%t%')
AND n.gender = 'f'
AND n.name LIKE '%James%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1985 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%On%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1933 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(producer)', '(writer)', '(voice)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 2003;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%Brazil%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%wrong%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1939 AND 1974;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Tom%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(writer)', '(writer)', '(voice)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Germany%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Harry%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1965%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%will%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Anthony%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1944 AND 2004;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Stanley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1969 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%PFM%')
AND n.gender = 'f'
AND n.name LIKE '%Michael%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1977 AND 1999;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%Black%')
AND n.gender = 'm'
AND n.name LIKE '%Brian%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1921 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jimmy%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(actors director)', '(series producer)', '(writer)', '(stage manager)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Charles%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1919 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2012%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2001%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(associate producer)', '(executive producer)', '(voice)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1966%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Miguel%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1975 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(executive producer)', '(script supervisor)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Tim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1956 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(co-producer)', '(co-producer)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1967 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%ve%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%15%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Frog%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1994 AND 1999;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%When%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Taylor%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1976 AND 1993;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(production assistant)', '(production assistant)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Carlos%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(supervising producer)', '(production coordinator)', '(uncredited)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%co%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%U%')
AND n.gender = 'f'
AND n.name LIKE '%Lee%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1984 AND 1987;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(producer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Peter%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%dwindling%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1951 AND 1961;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(writer)', '(archive footage)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%R%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%Canada%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(co-producer)', '(uncredited)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Conti Condoli)', '(media planner: Sony Music Communications)', '(researcher: WWII)', '(production office coordinator)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%all%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2002;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(writer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%ray%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%being%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Simmons%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1993 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(written by)', '(associate producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ben%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(producer)', '(credit only)', '(executive producer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%Lucinda%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1964 AND 2001;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(credit only)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Young%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(uncredited)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1915%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Joseph%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2001 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(writer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1975%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%John%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1965 AND 2007;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(producer)', '(production assistant)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2007%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(writer)', '(writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Black%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1912 AND 1964;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Castellaneta%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1961 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1944%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1981 AND 1994;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(creator)', '(written by)', '(written by)', '(creator)')
AND cn.country_code = '[hu]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%Laserdisc%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Jay%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(uncredited)', '(writer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%Sweden%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%what%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Baker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%countries%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%De%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1967 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(written by)', '(creator)', '(production assistant)', '(production assistant)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Bowers%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2001;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production coordinator)', '(supervising producer)', '(supervising producer)', '(uncredited)', '(written by)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%2007%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Lisa%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2010%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Roger%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1955 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%RAT%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Lucie%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 1958;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(head writer)', '(executive producer)', '(voice)', '(head writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Steve%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(voice)', '(producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2013%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Donald%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1982 AND 1994;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(executive producer)', '(voice)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Anthony%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Harry%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production coordinator)', '(supervising producer)', '(script supervisor)', '(script supervisor)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1956 AND 1980;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%Mark%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%Eva%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 2000;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%2008%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%C%')
AND n.gender = 'f'
AND n.name LIKE '%Frank%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1991 AND 1999;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(written by)', '(writer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%re%')
AND n.gender = 'm'
AND n.name LIKE '%Smith%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1920 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(supervising producer)', '(written by)', '(uncredited)', '(script supervisor)', '(co-producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%Jonathan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 1974;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%E%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1939 AND 1960;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2003;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(archive footage)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%video%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%are%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Mike%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2002;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(writer)', '(archive footage)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%971%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2006;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 2001;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%scan%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%White%')
AND n.gender = 'm'
AND n.name LIKE '%B%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(production assistant)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1960 AND 1978;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%as%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%be%' OR mi.info LIKE '%Canada%')
AND n.gender = 'm'
AND n.name LIKE '%Jon%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2013;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(credit only)', '(voice: English version)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1982 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(head writer)', '(executive producer)', '(head writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%Williams%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2001;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(creator)', '(written by)', '(co-producer)', '(co-producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2011%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%JosÃ©%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1999 AND 2012;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(production assistant)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%c%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1978 AND 2005;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[jp]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%2010%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%E%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(writer)', '(writer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VoD%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Aaron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 1998;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1972 AND 2009;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(producer)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jeremy%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1938 AND 2004;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ross%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1947 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1908 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(screenplay)', '(executive producer)', '(uncredited)', '(associate producer)', '(2004-)')
AND cn.country_code = '[hu]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Peter%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1912 AND 2008;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(production assistant)', '(creator)', '(production assistant)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Robin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2003;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(credit only)', '(credit only)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Argentina%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1940 AND 2002;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(writer)', '(writer)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1913 AND 2011;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%1982%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Gray%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1930 AND 1979;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%c%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%to%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2010;",18,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) IndexOnlyScan(chn char_name_pkey) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(rt role_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(n an) NestLoop(n an ci) NestLoop(n an ci chn) NestLoop(n an ci chn t) NestLoop(n an ci chn t mi) HashJoin(n an ci chn t mi it) NestLoop(n an ci chn t mi it rt) NestLoop(n an ci chn t mi it rt mc) NestLoop(n an ci chn t mi it rt mc cn) Leading((((((((((n an) ci) chn) t) mi) it) rt) mc) cn)) */
