query,plan_id,plan_content
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE 'O%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%S%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%An%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'm'
AND n.name LIKE 'D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%L%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE 'H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%N%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%F%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'm'
AND n.name LIKE 'L%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE 'S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE '%O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE '%Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE 'K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE 'Q%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'U%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2009 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'm'
AND n.name LIKE 'N%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE '%Tim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE 'P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2008 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'm'
AND n.name LIKE '%Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE 'D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2008 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'm'
AND n.name LIKE 'Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%Yo%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE '%B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%S%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'm'
AND n.name LIKE '%I%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%Bert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'm'
AND n.name LIKE 'V%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE '%Ang%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE 'H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%An%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'S%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'm'
AND n.name LIKE '%O%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%Q%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE 'A%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE 'G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'm'
AND n.name LIKE 'Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE 'U%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%N%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%Tim%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE '%Ang%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'm'
AND n.name LIKE 'F%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%U%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%An%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'm'
AND n.name LIKE 'P%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%Tim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%Q%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'm'
AND n.name LIKE '%F%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%U%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%Bert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE 'U%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE '%B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
