query,plan_id,plan_content
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video movie', 'video movie', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'tv movie', 'tv series', 'movie', 'movie')
AND lt.link IN ('follows', 'edited from', 'featured in', 'edited from', 'spin off')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1903 AND 2001;",319,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) SeqScan(kt2) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 mc1) NestLoop(mi_idx1 ml lt it1 mc1 cn1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2 kt2) Leading(((((((((((((mi_idx1 (ml lt)) it1) mc1) cn1) t1) kt1) mi_idx2) it2) t2) mc2) cn2) kt2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'episode', 'tv movie', 'tv mini series', 'movie')
AND kt2.kind IN ('episode', 'video movie', 'movie', 'movie', 'movie')
AND lt.link IN ('referenced in', 'spin off', 'similar to', 'remade as', 'remake of')
AND mi_idx2.info < '3..0111101'
AND t2.production_year BETWEEN 1996 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv mini series', 'episode', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'tv mini series', 'episode', 'movie', 'video movie')
AND lt.link IN ('follows', 'remade as', 'featured in', 'unknown link', 'unknown link')
AND mi_idx2.info < '631'
AND t2.production_year BETWEEN 1976 AND 2020;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'tv mini series', 'episode', 'tv series')
AND kt2.kind IN ('episode', 'video movie', 'tv movie', 'tv mini series', 'tv movie')
AND lt.link IN ('referenced in', 'references', 'remake of', 'referenced in', 'edited into')
AND mi_idx2.info < '3..0111101'
AND t2.production_year BETWEEN 1945 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[ru]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv mini series', 'video movie', 'video movie')
AND kt2.kind IN ('tv series', 'movie', 'video game', 'video game', 'video movie')
AND lt.link IN ('followed by', 'remade as', 'featured in', 'edited into', 'spoofs')
AND mi_idx2.info < '68'
AND t2.production_year BETWEEN 1995 AND 2008;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hr]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video movie', 'video movie', 'episode', 'tv mini series')
AND kt2.kind IN ('movie', 'episode', 'tv movie', 'tv series', 'tv series')
AND lt.link IN ('referenced in', 'edited from', 'edited into', 'similar to', 'spoofs')
AND mi_idx2.info < '1011110000'
AND t2.production_year BETWEEN 1963 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv mini series', 'movie', 'episode', 'tv series')
AND kt2.kind IN ('movie', 'tv movie', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'features', 'featured in', 'references', 'unknown link')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1932 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'video game', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'tv series', 'movie', 'tv series', 'movie')
AND lt.link IN ('followed by', 'follows', 'spin off', 'features', 'remade as')
AND mi_idx2.info < '650'
AND t2.production_year BETWEEN 1936 AND 2020;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'tv series', 'tv mini series', 'episode')
AND kt2.kind IN ('movie', 'video movie', 'video movie', 'video movie', 'tv movie')
AND lt.link IN ('referenced in', 'spoofs', 'features', 'follows', 'unknown link')
AND mi_idx2.info < '4.0'
AND t2.production_year BETWEEN 1961 AND 2004;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'video game', 'video movie', 'tv mini series')
AND kt2.kind IN ('episode', 'tv mini series', 'video game', 'video movie', 'video movie')
AND lt.link IN ('follows', 'featured in', 'spoofs', 'version of', 'edited from')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1936 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'tv mini series', 'video movie', 'movie')
AND kt2.kind IN ('episode', 'video movie', 'video movie', 'tv series', 'episode')
AND lt.link IN ('follows', 'edited into', 'features', 'follows', 'edited into')
AND mi_idx2.info < '0000122000'
AND t2.production_year BETWEEN 1988 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'tv movie', 'movie', 'episode')
AND kt2.kind IN ('movie', 'movie', 'tv mini series', 'tv movie', 'tv series')
AND lt.link IN ('referenced in', 'remade as', 'remake of', 'follows', 'spin off')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1979 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'tv series', 'video game', 'tv mini series')
AND kt2.kind IN ('episode', 'episode', 'tv movie', 'tv movie', 'episode')
AND lt.link IN ('follows', 'spoofed in', 'edited from', 'similar to', 'featured in')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1927 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'movie', 'movie', 'tv series', 'movie')
AND kt2.kind IN ('episode', 'movie', 'video movie', 'video movie', 'movie')
AND lt.link IN ('followed by', 'unknown link', 'remake of', 'edited from', 'remake of')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1968 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'tv mini series', 'tv series', 'tv movie')
AND kt2.kind IN ('movie', 'tv movie', 'movie', 'episode', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'followed by', 'remade as', 'remade as')
AND mi_idx2.info < '0001211000'
AND t2.production_year BETWEEN 1951 AND 2007;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'movie', 'tv movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'tv movie', 'tv mini series', 'video game', 'tv movie')
AND lt.link IN ('features', 'followed by', 'references', 'unknown link', 'featured in')
AND mi_idx2.info < '6.4'
AND t2.production_year BETWEEN 1945 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'video movie', 'tv movie', 'tv mini series')
AND kt2.kind IN ('episode', 'tv series', 'video game', 'movie', 'episode')
AND lt.link IN ('follows', 'remade as', 'version of', 'spin off', 'similar to')
AND mi_idx2.info < '0001221000'
AND t2.production_year BETWEEN 1966 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv mini series', 'movie', 'episode', 'episode')
AND kt2.kind IN ('movie', 'tv movie', 'video game', 'video game', 'episode')
AND lt.link IN ('referenced in', 'similar to', 'spoofs', 'spoofs', 'spoofed in')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1939 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv movie', 'episode', 'video movie', 'video game')
AND kt2.kind IN ('episode', 'tv movie', 'episode', 'video game', 'tv mini series')
AND lt.link IN ('followed by', 'follows', 'featured in', 'spoofed in', 'edited from')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1927 AND 2006;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv movie', 'video game', 'tv movie', 'movie')
AND kt2.kind IN ('tv series', 'movie', 'tv series', 'movie', 'movie')
AND lt.link IN ('references', 'version of', 'featured in', 'unknown link', 'remake of')
AND mi_idx2.info < '7.7'
AND t2.production_year BETWEEN 1908 AND 1977;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv movie', 'video movie', 'tv movie', 'episode')
AND kt2.kind IN ('episode', 'tv movie', 'video movie', 'movie', 'tv mini series')
AND lt.link IN ('follows', 'referenced in', 'version of', 'spoofs', 'version of')
AND mi_idx2.info < '0000122000'
AND t2.production_year BETWEEN 1973 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'movie', 'tv series', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'tv movie', 'video movie', 'video movie', 'video game')
AND lt.link IN ('followed by', 'features', 'referenced in', 'follows', 'features')
AND mi_idx2.info < '631'
AND t2.production_year BETWEEN 1952 AND 1999;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video movie', 'movie', 'tv mini series', 'tv series')
AND kt2.kind IN ('episode', 'video movie', 'tv movie', 'video movie', 'tv mini series')
AND lt.link IN ('followed by', 'remade as', 'remade as', 'spin off', 'features')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1964 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv mini series', 'video movie', 'tv movie', 'episode')
AND kt2.kind IN ('tv series', 'tv mini series', 'video game', 'video game', 'episode')
AND lt.link IN ('references', 'features', 'remade as', 'featured in', 'spoofs')
AND mi_idx2.info < '934'
AND t2.production_year BETWEEN 1931 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video game', 'tv movie', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'tv mini series', 'tv movie', 'tv movie', 'tv series')
AND lt.link IN ('referenced in', 'edited from', 'spin off from', 'version of', 'references')
AND mi_idx2.info < '3..0111101'
AND t2.production_year BETWEEN 1894 AND 1999;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'tv movie', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'tv mini series', 'tv series', 'episode', 'movie')
AND lt.link IN ('follows', 'spin off', 'edited from', 'referenced in', 'unknown link')
AND mi_idx2.info < '0000222100'
AND t2.production_year BETWEEN 1976 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'movie', 'tv mini series', 'tv mini series')
AND kt2.kind IN ('episode', 'tv movie', 'movie', 'movie', 'video movie')
AND lt.link IN ('featured in', 'spin off', 'remade as', 'spin off from', 'spin off from')
AND mi_idx2.info < '...1..421.'
AND t2.production_year BETWEEN 1925 AND 1993;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'movie', 'tv movie', 'tv mini series', 'movie')
AND kt2.kind IN ('movie', 'episode', 'video game', 'video movie', 'video game')
AND lt.link IN ('followed by', 'featured in', 'remade as', 'unknown link', 'followed by')
AND mi_idx2.info < '0000012101'
AND t2.production_year BETWEEN 1914 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv movie', 'video movie', 'tv mini series', 'episode')
AND kt2.kind IN ('tv series', 'episode', 'video game', 'tv mini series', 'episode')
AND lt.link IN ('references', 'spoofed in', 'unknown link', 'edited into', 'similar to')
AND mi_idx2.info < '598'
AND t2.production_year BETWEEN 1893 AND 1990;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'video movie', 'episode', 'video movie', 'tv series')
AND kt2.kind IN ('episode', 'video game', 'tv series', 'video game', 'tv movie')
AND lt.link IN ('followed by', 'references', 'similar to', 'followed by', 'edited from')
AND mi_idx2.info < '664'
AND t2.production_year BETWEEN 1964 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('movie', 'tv mini series', 'tv series', 'movie', 'tv movie')
AND lt.link IN ('referenced in', 'referenced in', 'references', 'references', 'spin off')
AND mi_idx2.info < '0001111000'
AND t2.production_year BETWEEN 1994 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'movie', 'tv movie', 'episode', 'episode')
AND kt2.kind IN ('episode', 'video movie', 'episode', 'video movie', 'tv movie')
AND lt.link IN ('referenced in', 'references', 'follows', 'references', 'referenced in')
AND mi_idx2.info < '20'
AND t2.production_year BETWEEN 1958 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'movie', 'tv movie', 'video game')
AND kt2.kind IN ('episode', 'video movie', 'episode', 'tv movie', 'tv series')
AND lt.link IN ('followed by', 'follows', 'spoofs', 'followed by', 'edited from')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1891 AND 2005;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video game', 'tv movie', 'video movie', 'episode')
AND kt2.kind IN ('episode', 'episode', 'tv mini series', 'video game', 'tv movie')
AND lt.link IN ('followed by', 'spoofs', 'spoofed in', 'spoofs', 'references')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1933 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'video movie', 'video movie', 'tv mini series')
AND kt2.kind IN ('episode', 'video movie', 'tv movie', 'video movie', 'video movie')
AND lt.link IN ('followed by', 'spoofed in', 'spin off', 'featured in', 'edited from')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1962 AND 2020;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[no]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'tv mini series', 'tv mini series', 'tv mini series')
AND kt2.kind IN ('episode', 'video game', 'episode', 'tv series', 'tv mini series')
AND lt.link IN ('follows', 'features', 'spoofs', 'featured in', 'version of')
AND mi_idx2.info < '754'
AND t2.production_year BETWEEN 1896 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'video movie', 'tv movie', 'video movie')
AND kt2.kind IN ('episode', 'tv series', 'tv movie', 'tv mini series', 'tv mini series')
AND lt.link IN ('featured in', 'follows', 'features', 'version of', 'remake of')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1933 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'movie', 'episode')
AND kt2.kind IN ('episode', 'tv movie', 'movie', 'movie', 'tv series')
AND lt.link IN ('referenced in', 'spoofs', 'spoofs', 'remade as', 'spoofed in')
AND mi_idx2.info < '....031111'
AND t2.production_year BETWEEN 1998 AND 2012;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'movie', 'tv mini series', 'episode')
AND kt2.kind IN ('episode', 'video game', 'video game', 'movie', 'video game')
AND lt.link IN ('follows', 'similar to', 'unknown link', 'similar to', 'edited into')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1901 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'movie', 'movie', 'tv mini series', 'tv series')
AND kt2.kind IN ('movie', 'video game', 'video movie', 'episode', 'tv movie')
AND lt.link IN ('referenced in', 'spoofs', 'features', 'spoofs', 'spin off')
AND mi_idx2.info < '262'
AND t2.production_year BETWEEN 1961 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'episode', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'tv series', 'video game', 'tv movie', 'tv movie')
AND lt.link IN ('followed by', 'followed by', 'features', 'spin off', 'spoofs')
AND mi_idx2.info < '0000232000'
AND t2.production_year BETWEEN 1939 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv movie', 'tv movie', 'tv series', 'tv mini series')
AND kt2.kind IN ('movie', 'tv series', 'video game', 'tv mini series', 'video movie')
AND lt.link IN ('spoofs', 'remake of', 'followed by', 'featured in', 'spin off from')
AND mi_idx2.info < '6.8'
AND t2.production_year BETWEEN 1921 AND 2009;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[it]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv mini series', 'movie', 'tv series', 'tv mini series')
AND kt2.kind IN ('movie', 'tv movie', 'tv mini series', 'video movie', 'video game')
AND lt.link IN ('featured in', 'unknown link', 'version of', 'spoofs', 'spoofed in')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1888 AND 2013;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'movie', 'video game', 'movie')
AND kt2.kind IN ('episode', 'tv mini series', 'tv series', 'movie', 'episode')
AND lt.link IN ('follows', 'spin off', 'spin off from', 'unknown link', 'spin off from')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1923 AND 2010;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'movie', 'video game', 'tv series', 'tv mini series')
AND kt2.kind IN ('episode', 'movie', 'video movie', 'video game', 'tv series')
AND lt.link IN ('referenced in', 'spoofed in', 'spoofed in', 'edited into', 'spoofed in')
AND mi_idx2.info < '7.1'
AND t2.production_year BETWEEN 1993 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'episode', 'tv series', 'tv movie')
AND kt2.kind IN ('episode', 'tv movie', 'episode', 'tv mini series', 'episode')
AND lt.link IN ('referenced in', 'references', 'referenced in', 'follows', 'spoofs')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1965 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv series', 'tv series', 'movie', 'video game')
AND kt2.kind IN ('episode', 'video game', 'episode', 'episode', 'tv series')
AND lt.link IN ('follows', 'similar to', 'unknown link', 'spin off', 'version of')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1977 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'movie', 'episode', 'video movie')
AND kt2.kind IN ('movie', 'video movie', 'episode', 'video movie', 'video game')
AND lt.link IN ('followed by', 'edited into', 'featured in', 'featured in', 'followed by')
AND mi_idx2.info < '6.6'
AND t2.production_year BETWEEN 1968 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'video movie', 'tv movie', 'video movie', 'tv movie')
AND kt2.kind IN ('tv series', 'tv series', 'movie', 'video game', 'video game')
AND lt.link IN ('references', 'featured in', 'featured in', 'remake of', 'edited into')
AND mi_idx2.info < '934'
AND t2.production_year BETWEEN 2003 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv series', 'tv movie', 'movie', 'episode')
AND kt2.kind IN ('episode', 'tv series', 'tv series', 'episode', 'tv mini series')
AND lt.link IN ('follows', 'spoofed in', 'similar to', 'remake of', 'featured in')
AND mi_idx2.info < '650'
AND t2.production_year BETWEEN 1976 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[nl]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv movie', 'tv mini series', 'episode', 'tv movie')
AND kt2.kind IN ('movie', 'episode', 'tv series', 'video game', 'movie')
AND lt.link IN ('spin off from', 'features', 'followed by', 'similar to', 'referenced in')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1956 AND 1998;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'tv series', 'movie', 'video movie')
AND kt2.kind IN ('movie', 'video movie', 'video game', 'video movie', 'tv mini series')
AND lt.link IN ('referenced in', 'spin off from', 'unknown link', 'spin off', 'remade as')
AND mi_idx2.info < '37661'
AND t2.production_year BETWEEN 1898 AND 2000;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'movie', 'movie', 'tv series', 'movie')
AND kt2.kind IN ('episode', 'episode', 'tv movie', 'video game', 'tv series')
AND lt.link IN ('followed by', 'spin off from', 'followed by', 'followed by', 'references')
AND mi_idx2.info < '702'
AND t2.production_year BETWEEN 1990 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'episode', 'tv series', 'video game', 'tv mini series')
AND kt2.kind IN ('movie', 'tv mini series', 'tv movie', 'video movie', 'tv series')
AND lt.link IN ('referenced in', 'featured in', 'referenced in', 'follows', 'spin off from')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1946 AND 1992;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv series', 'video game', 'tv series', 'tv mini series')
AND kt2.kind IN ('episode', 'episode', 'tv movie', 'video movie', 'tv mini series')
AND lt.link IN ('follows', 'followed by', 'featured in', 'remade as', 'remake of')
AND mi_idx2.info < '693'
AND t2.production_year BETWEEN 1895 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'episode', 'movie', 'movie')
AND kt2.kind IN ('movie', 'tv movie', 'video movie', 'tv series', 'tv movie')
AND lt.link IN ('referenced in', 'spoofs', 'edited from', 'referenced in', 'version of')
AND mi_idx2.info < '6.8'
AND t2.production_year BETWEEN 1898 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'episode', 'episode')
AND kt2.kind IN ('episode', 'tv mini series', 'tv series', 'tv mini series', 'tv series')
AND lt.link IN ('referenced in', 'spin off from', 'spoofed in', 'followed by', 'version of')
AND mi_idx2.info < '0...1.2311'
AND t2.production_year BETWEEN 1956 AND 1996;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video movie', 'video movie', 'video movie', 'tv movie')
AND kt2.kind IN ('movie', 'tv mini series', 'tv mini series', 'episode', 'tv mini series')
AND lt.link IN ('referenced in', 'unknown link', 'features', 'spoofed in', 'remake of')
AND mi_idx2.info < '0000012211'
AND t2.production_year BETWEEN 1922 AND 2003;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv movie', 'tv mini series', 'tv movie')
AND kt2.kind IN ('movie', 'video movie', 'episode', 'video movie', 'tv movie')
AND lt.link IN ('referenced in', 'featured in', 'unknown link', 'features', 'edited from')
AND mi_idx2.info < '0000012211'
AND t2.production_year BETWEEN 1946 AND 2000;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv series', 'movie', 'video movie', 'episode')
AND kt2.kind IN ('episode', 'tv series', 'movie', 'video movie', 'video movie')
AND lt.link IN ('followed by', 'spoofed in', 'follows', 'followed by', 'spin off from')
AND mi_idx2.info < '664'
AND t2.production_year BETWEEN 1923 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video game', 'movie', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'video movie', 'video game', 'video movie')
AND lt.link IN ('referenced in', 'spin off', 'featured in', 'spin off from', 'featured in')
AND mi_idx2.info < '20'
AND t2.production_year BETWEEN 1992 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'movie', 'video movie', 'video game', 'tv series')
AND kt2.kind IN ('tv series', 'movie', 'movie', 'tv movie', 'tv series')
AND lt.link IN ('references', 'referenced in', 'spoofed in', 'spin off', 'followed by')
AND mi_idx2.info < '7.7'
AND t2.production_year BETWEEN 1889 AND 2013;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv movie', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('movie', 'tv movie', 'video movie', 'movie', 'video game')
AND lt.link IN ('referenced in', 'remake of', 'edited from', 'spin off from', 'referenced in')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1986 AND 2010;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'video game', 'video game', 'episode')
AND kt2.kind IN ('episode', 'tv series', 'tv movie', 'movie', 'tv movie')
AND lt.link IN ('features', 'featured in', 'follows', 'spin off', 'remade as')
AND mi_idx2.info < '17'
AND t2.production_year BETWEEN 1957 AND 2007;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'episode', 'video movie', 'episode', 'tv movie')
AND kt2.kind IN ('movie', 'video movie', 'video game', 'movie', 'episode')
AND lt.link IN ('referenced in', 'edited into', 'version of', 'featured in', 'edited from')
AND mi_idx2.info < '80433'
AND t2.production_year BETWEEN 1993 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'episode', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'tv mini series', 'video game', 'episode', 'episode')
AND lt.link IN ('referenced in', 'followed by', 'spoofs', 'similar to', 'spin off')
AND mi_idx2.info < '3..0111101'
AND t2.production_year BETWEEN 1899 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'movie', 'tv series', 'episode', 'tv movie')
AND kt2.kind IN ('episode', 'tv mini series', 'tv series', 'movie', 'tv mini series')
AND lt.link IN ('referenced in', 'referenced in', 'featured in', 'edited into', 'similar to')
AND mi_idx2.info < '475'
AND t2.production_year BETWEEN 1969 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video movie', 'tv movie', 'tv movie', 'video movie')
AND kt2.kind IN ('episode', 'movie', 'video game', 'video game', 'video game')
AND lt.link IN ('followed by', 'spin off from', 'featured in', 'spin off', 'unknown link')
AND mi_idx2.info < '0000222100'
AND t2.production_year BETWEEN 1958 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'episode', 'video game', 'tv mini series', 'movie')
AND kt2.kind IN ('movie', 'movie', 'video game', 'episode', 'video movie')
AND lt.link IN ('referenced in', 'followed by', 'edited into', 'spin off', 'featured in')
AND mi_idx2.info < '0000012211'
AND t2.production_year BETWEEN 1905 AND 2019;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'movie', 'episode', 'movie', 'video game')
AND kt2.kind IN ('movie', 'episode', 'video movie', 'video movie', 'movie')
AND lt.link IN ('referenced in', 'featured in', 'version of', 'referenced in', 'spoofed in')
AND mi_idx2.info < '0001111000'
AND t2.production_year BETWEEN 1880 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'movie', 'movie', 'video movie')
AND kt2.kind IN ('episode', 'tv mini series', 'video game', 'tv movie', 'tv mini series')
AND lt.link IN ('referenced in', 'spoofed in', 'similar to', 'followed by', 'remake of')
AND mi_idx2.info < '4.6'
AND t2.production_year BETWEEN 1976 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'episode', 'video movie', 'episode')
AND kt2.kind IN ('movie', 'tv series', 'video movie', 'tv movie', 'tv mini series')
AND lt.link IN ('referenced in', 'follows', 'unknown link', 'unknown link', 'similar to')
AND mi_idx2.info < '80433'
AND t2.production_year BETWEEN 1977 AND 2003;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'movie', 'video game', 'episode', 'episode')
AND kt2.kind IN ('episode', 'video game', 'episode', 'tv series', 'movie')
AND lt.link IN ('followed by', 'version of', 'spin off from', 'remade as', 'spin off from')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1893 AND 1999;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'movie', 'movie', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'video game', 'tv series', 'movie')
AND lt.link IN ('referenced in', 'spoofs', 'spin off', 'follows', 'remake of')
AND mi_idx2.info < '4.6'
AND t2.production_year BETWEEN 1922 AND 2000;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv mini series', 'video movie', 'episode', 'episode')
AND kt2.kind IN ('episode', 'video game', 'video movie', 'tv mini series', 'video game')
AND lt.link IN ('follows', 'spin off from', 'follows', 'spoofs', 'follows')
AND mi_idx2.info < '664'
AND t2.production_year BETWEEN 1899 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'video game', 'video movie', 'tv mini series')
AND kt2.kind IN ('episode', 'tv movie', 'video movie', 'video movie', 'video game')
AND lt.link IN ('follows', 'featured in', 'edited from', 'version of', 'references')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1879 AND 2005;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'movie', 'episode', 'video movie')
AND kt2.kind IN ('episode', 'video game', 'video game', 'tv movie', 'tv series')
AND lt.link IN ('referenced in', 'referenced in', 'features', 'referenced in', 'spoofed in')
AND mi_idx2.info < '20'
AND t2.production_year BETWEEN 1988 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[it]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'episode', 'tv mini series', 'episode', 'tv series')
AND kt2.kind IN ('movie', 'tv movie', 'tv series', 'video game', 'tv movie')
AND lt.link IN ('referenced in', 'similar to', 'edited into', 'references', 'version of')
AND mi_idx2.info < '3541'
AND t2.production_year BETWEEN 1981 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'episode', 'video game', 'episode')
AND kt2.kind IN ('episode', 'video movie', 'movie', 'tv mini series', 'episode')
AND lt.link IN ('followed by', 'follows', 'referenced in', 'edited from', 'spoofed in')
AND mi_idx2.info < '0000232000'
AND t2.production_year BETWEEN 1977 AND 2007;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'top 250 rank'
AND kt1.kind IN ('episode', 'episode', 'video movie', 'video game', 'video game')
AND kt2.kind IN ('movie', 'video movie', 'video game', 'tv movie', 'tv movie')
AND lt.link IN ('spoofs', 'remade as', 'spoofed in', 'remade as', 'follows')
AND mi_idx2.info < '2'
AND t2.production_year BETWEEN 1954 AND 1994;",319,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) SeqScan(kt2) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 mc1) NestLoop(mi_idx1 ml lt it1 mc1 cn1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2 kt2) Leading(((((((((((((mi_idx1 (ml lt)) it1) mc1) cn1) t1) kt1) mi_idx2) it2) t2) mc2) cn2) kt2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv movie', 'video movie', 'movie', 'video movie')
AND kt2.kind IN ('movie', 'movie', 'video movie', 'movie', 'video game')
AND lt.link IN ('references', 'featured in', 'spoofs', 'spin off', 'featured in')
AND mi_idx2.info < '688738'
AND t2.production_year BETWEEN 1917 AND 2000;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video game', 'video game', 'tv series', 'episode')
AND kt2.kind IN ('episode', 'movie', 'tv mini series', 'tv mini series', 'tv mini series')
AND lt.link IN ('follows', 'remade as', 'referenced in', 'references', 'featured in')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1986 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video game', 'tv mini series', 'tv movie', 'episode')
AND kt2.kind IN ('episode', 'video game', 'episode', 'tv series', 'tv series')
AND lt.link IN ('followed by', 'spoofed in', 'followed by', 'spin off', 'features')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1953 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video game', 'video movie', 'tv series', 'movie')
AND kt2.kind IN ('episode', 'video movie', 'episode', 'video movie', 'video game')
AND lt.link IN ('follows', 'follows', 'remake of', 'follows', 'remade as')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1919 AND 2007;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'tv movie', 'episode', 'episode')
AND kt2.kind IN ('episode', 'video game', 'tv movie', 'tv series', 'episode')
AND lt.link IN ('follows', 'references', 'spin off from', 'followed by', 'unknown link')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1939 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video game', 'movie', 'tv movie', 'movie')
AND kt2.kind IN ('episode', 'tv series', 'video movie', 'video game', 'tv series')
AND lt.link IN ('follows', 'edited into', 'references', 'referenced in', 'spoofs')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1899 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv mini series', 'episode', 'video movie', 'tv mini series')
AND kt2.kind IN ('movie', 'tv mini series', 'episode', 'episode', 'episode')
AND lt.link IN ('referenced in', 'spoofs', 'spoofs', 'references', 'edited into')
AND mi_idx2.info < '34358'
AND t2.production_year BETWEEN 1903 AND 2005;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video game', 'video game', 'tv movie', 'movie')
AND kt2.kind IN ('movie', 'tv mini series', 'tv movie', 'video game', 'video game')
AND lt.link IN ('followed by', 'spin off from', 'spin off', 'spin off', 'edited from')
AND mi_idx2.info < '0000012101'
AND t2.production_year BETWEEN 1900 AND 1998;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'episode', 'tv mini series')
AND kt2.kind IN ('episode', 'video game', 'movie', 'tv series', 'video movie')
AND lt.link IN ('referenced in', 'references', 'remade as', 'features', 'edited from')
AND mi_idx2.info < '475'
AND t2.production_year BETWEEN 1916 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'video movie', 'video movie', 'movie')
AND kt2.kind IN ('movie', 'video game', 'tv series', 'movie', 'episode')
AND lt.link IN ('referenced in', 'references', 'edited from', 'featured in', 'features')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1960 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video movie', 'movie', 'video movie', 'video movie')
AND kt2.kind IN ('episode', 'tv series', 'video movie', 'movie', 'video movie')
AND lt.link IN ('followed by', 'spoofed in', 'similar to', 'edited into', 'edited from')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1880 AND 2007;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'tv mini series', 'video movie', 'episode')
AND kt2.kind IN ('movie', 'tv series', 'video movie', 'episode', 'episode')
AND lt.link IN ('referenced in', 'edited from', 'spin off', 'followed by', 'similar to')
AND mi_idx2.info < '80433'
AND t2.production_year BETWEEN 1919 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fi]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video game', 'tv mini series', 'tv series', 'tv movie')
AND kt2.kind IN ('movie', 'video movie', 'movie', 'episode', 'movie')
AND lt.link IN ('referenced in', 'features', 'version of', 'spin off from', 'spoofs')
AND mi_idx2.info < '0000121100'
AND t2.production_year BETWEEN 1910 AND 2003;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv series', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'video game', 'episode', 'video game', 'tv series')
AND lt.link IN ('referenced in', 'spin off', 'followed by', 'similar to', 'features')
AND mi_idx2.info < '0.00002211'
AND t2.production_year BETWEEN 1904 AND 2005;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'tv movie', 'video game', 'video game')
AND kt2.kind IN ('movie', 'movie', 'tv mini series', 'tv movie', 'tv movie')
AND lt.link IN ('referenced in', 'remade as', 'follows', 'spoofed in', 'unknown link')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1930 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'episode', 'video movie', 'video movie')
AND kt2.kind IN ('movie', 'movie', 'movie', 'video game', 'movie')
AND lt.link IN ('referenced in', 'spoofed in', 'spin off from', 'followed by', 'version of')
AND mi_idx2.info < '86384'
AND t2.production_year BETWEEN 1934 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv movie', 'tv movie', 'tv movie', 'video game')
AND kt2.kind IN ('tv series', 'video movie', 'tv series', 'video game', 'video game')
AND lt.link IN ('references', 'similar to', 'features', 'references', 'features')
AND mi_idx2.info < '598'
AND t2.production_year BETWEEN 1907 AND 2013;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video game', 'video movie', 'tv series', 'tv movie')
AND kt2.kind IN ('episode', 'tv movie', 'tv movie', 'video movie', 'movie')
AND lt.link IN ('follows', 'unknown link', 'references', 'edited into', 'edited into')
AND mi_idx2.info < '0000222100'
AND t2.production_year BETWEEN 1894 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'episode', 'tv movie', 'tv series')
AND kt2.kind IN ('episode', 'tv movie', 'tv movie', 'episode', 'episode')
AND lt.link IN ('featured in', 'referenced in', 'version of', 'features', 'followed by')
AND mi_idx2.info < '6.9'
AND t2.production_year BETWEEN 1947 AND 2008;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'movie', 'episode', 'video movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'movie', 'tv series')
AND lt.link IN ('featured in', 'similar to', 'references', 'referenced in', 'similar to')
AND mi_idx2.info < '7'
AND t2.production_year BETWEEN 1919 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv movie', 'tv movie', 'tv mini series', 'video game')
AND kt2.kind IN ('episode', 'video game', 'episode', 'episode', 'tv movie')
AND lt.link IN ('follows', 'edited from', 'follows', 'spin off', 'featured in')
AND mi_idx2.info < '5.9'
AND t2.production_year BETWEEN 1907 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'tv series', 'video movie', 'tv mini series')
AND kt2.kind IN ('episode', 'video game', 'tv series', 'tv movie', 'tv mini series')
AND lt.link IN ('referenced in', 'features', 'references', 'followed by', 'remade as')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1971 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv movie', 'video game', 'movie', 'episode')
AND kt2.kind IN ('episode', 'tv series', 'episode', 'episode', 'movie')
AND lt.link IN ('followed by', 'spin off', 'edited into', 'edited into', 'version of')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1940 AND 2003;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'tv movie', 'tv series', 'episode')
AND kt2.kind IN ('episode', 'video game', 'movie', 'video game', 'tv series')
AND lt.link IN ('referenced in', 'remade as', 'remake of', 'edited into', 'edited from')
AND mi_idx2.info < '7.1'
AND t2.production_year BETWEEN 1880 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[nl]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'episode', 'video game', 'tv mini series', 'video game')
AND kt2.kind IN ('movie', 'tv movie', 'video game', 'tv series', 'tv movie')
AND lt.link IN ('spin off from', 'spin off', 'follows', 'references', 'spin off from')
AND mi_idx2.info < '79'
AND t2.production_year BETWEEN 1939 AND 1998;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'tv movie', 'tv mini series', 'tv series')
AND kt2.kind IN ('movie', 'tv movie', 'video movie', 'movie', 'tv series')
AND lt.link IN ('referenced in', 'featured in', 'referenced in', 'spoofed in', 'referenced in')
AND mi_idx2.info < '4.0'
AND t2.production_year BETWEEN 1922 AND 2008;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv series', 'episode', 'video movie', 'video game')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'tv series')
AND lt.link IN ('follows', 'similar to', 'featured in', 'spin off from', 'features')
AND mi_idx2.info < '754'
AND t2.production_year BETWEEN 1923 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'movie', 'tv movie', 'tv series', 'tv movie')
AND kt2.kind IN ('episode', 'tv movie', 'episode', 'tv movie', 'video game')
AND lt.link IN ('featured in', 'remake of', 'remake of', 'remade as', 'unknown link')
AND mi_idx2.info < '...1..421.'
AND t2.production_year BETWEEN 1904 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'movie', 'tv series', 'episode', 'video game')
AND kt2.kind IN ('episode', 'video movie', 'video game', 'tv mini series', 'movie')
AND lt.link IN ('featured in', 'references', 'followed by', 'follows', 'featured in')
AND mi_idx2.info < '1.1..4...2'
AND t2.production_year BETWEEN 1989 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv movie', 'tv series', 'video movie', 'video movie')
AND kt2.kind IN ('episode', 'video game', 'episode', 'tv series', 'tv movie')
AND lt.link IN ('followed by', 'similar to', 'spoofs', 'followed by', 'spin off from')
AND mi_idx2.info < '702'
AND t2.production_year BETWEEN 1900 AND 2009;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'video movie', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'tv movie', 'tv series', 'movie')
AND lt.link IN ('followed by', 'remade as', 'spoofed in', 'unknown link', 'remake of')
AND mi_idx2.info < '631'
AND t2.production_year BETWEEN 1991 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'video movie', 'movie', 'video game')
AND kt2.kind IN ('tv series', 'movie', 'tv series', 'movie', 'episode')
AND lt.link IN ('references', 'spoofs', 'referenced in', 'version of', 'features')
AND mi_idx2.info < '0000000124'
AND t2.production_year BETWEEN 1961 AND 1976;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'episode', 'tv mini series', 'tv series', 'tv series')
AND kt2.kind IN ('episode', 'video game', 'tv movie', 'episode', 'tv movie')
AND lt.link IN ('referenced in', 'edited from', 'unknown link', 'spoofed in', 'similar to')
AND mi_idx2.info < '20'
AND t2.production_year BETWEEN 1919 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv series', 'video game', 'tv series', 'episode')
AND kt2.kind IN ('episode', 'episode', 'tv series', 'video movie', 'video movie')
AND lt.link IN ('followed by', 'spin off', 'spin off from', 'features', 'spin off from')
AND mi_idx2.info < '0000222100'
AND t2.production_year BETWEEN 1922 AND 2005;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv mini series', 'tv movie', 'episode')
AND kt2.kind IN ('movie', 'video game', 'tv movie', 'video movie', 'video movie')
AND lt.link IN ('referenced in', 'edited from', 'spin off from', 'followed by', 'referenced in')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1972 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'episode', 'episode', 'video game')
AND kt2.kind IN ('tv series', 'video movie', 'tv mini series', 'tv movie', 'video game')
AND lt.link IN ('references', 'spin off', 'followed by', 'spin off', 'follows')
AND mi_idx2.info < '0000000213'
AND t2.production_year BETWEEN 1931 AND 2015;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video game', 'tv movie', 'movie', 'video game')
AND kt2.kind IN ('tv series', 'video game', 'episode', 'video movie', 'tv mini series')
AND lt.link IN ('remade as', 'follows', 'remake of', 'features', 'follows')
AND mi_idx2.info < '0000001114'
AND t2.production_year BETWEEN 1959 AND 2009;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'movie', 'tv movie', 'movie', 'movie')
AND kt2.kind IN ('episode', 'tv series', 'tv series', 'video movie', 'video movie')
AND lt.link IN ('referenced in', 'remade as', 'edited into', 'follows', 'remade as')
AND mi_idx2.info < '4.6'
AND t2.production_year BETWEEN 1972 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'video movie', 'movie', 'video movie')
AND kt2.kind IN ('movie', 'video movie', 'movie', 'video game', 'video game')
AND lt.link IN ('referenced in', 'spoofs', 'edited into', 'references', 'edited into')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1889 AND 2007;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'movie', 'tv mini series', 'tv mini series', 'episode')
AND kt2.kind IN ('episode', 'tv mini series', 'movie', 'tv series', 'tv series')
AND lt.link IN ('follows', 'edited from', 'references', 'remake of', 'spoofs')
AND mi_idx2.info < '650'
AND t2.production_year BETWEEN 1949 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv movie', 'episode', 'video movie', 'tv mini series')
AND kt2.kind IN ('movie', 'tv movie', 'tv series', 'movie', 'video game')
AND lt.link IN ('referenced in', 'spoofs', 'remade as', 'spin off from', 'spin off from')
AND mi_idx2.info < '2100000001'
AND t2.production_year BETWEEN 1914 AND 1998;",319,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) SeqScan(kt2) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 mc1) NestLoop(mi_idx1 ml lt it1 mc1 cn1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2 kt2) Leading(((((((((((((mi_idx1 (ml lt)) it1) mc1) cn1) t1) kt1) mi_idx2) it2) t2) mc2) cn2) kt2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'movie', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'episode', 'video movie', 'episode')
AND lt.link IN ('referenced in', 'spin off', 'features', 'spin off', 'version of')
AND mi_idx2.info < '0...1.2311'
AND t2.production_year BETWEEN 1972 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'video movie', 'episode', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'video game', 'tv series', 'video movie')
AND lt.link IN ('followed by', 'edited into', 'references', 'spoofs', 'remade as')
AND mi_idx2.info < '0000122000'
AND t2.production_year BETWEEN 1965 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video movie', 'tv series', 'tv movie', 'video game')
AND kt2.kind IN ('episode', 'movie', 'video movie', 'tv series', 'tv series')
AND lt.link IN ('referenced in', 'references', 'similar to', 'similar to', 'unknown link')
AND mi_idx2.info < '3..0111101'
AND t2.production_year BETWEEN 1959 AND 2005;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'video game', 'tv mini series', 'movie', 'tv series')
AND kt2.kind IN ('episode', 'tv movie', 'tv movie', 'video movie', 'episode')
AND lt.link IN ('followed by', 'spoofs', 'references', 'spoofs', 'spoofs')
AND mi_idx2.info < '507'
AND t2.production_year BETWEEN 1980 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'episode', 'video game', 'episode', 'video game')
AND kt2.kind IN ('episode', 'tv mini series', 'tv mini series', 'video movie', 'video game')
AND lt.link IN ('referenced in', 'remake of', 'spin off from', 'references', 'remake of')
AND mi_idx2.info < '17'
AND t2.production_year BETWEEN 1957 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'top 250 rank'
AND kt1.kind IN ('episode', 'video movie', 'movie', 'tv movie', 'episode')
AND kt2.kind IN ('movie', 'tv mini series', 'video game', 'tv series', 'tv mini series')
AND lt.link IN ('references', 'features', 'spoofs', 'edited from', 'similar to')
AND mi_idx2.info < '16'
AND t2.production_year BETWEEN 1920 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv movie', 'episode', 'tv mini series', 'tv mini series')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'tv mini series')
AND lt.link IN ('follows', 'edited from', 'remake of', 'references', 'similar to')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1976 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'top 250 rank'
AND kt1.kind IN ('episode', 'tv movie', 'tv series', 'video game', 'episode')
AND kt2.kind IN ('movie', 'episode', 'tv mini series', 'tv movie', 'episode')
AND lt.link IN ('references', 'references', 'similar to', 'spin off', 'referenced in')
AND mi_idx2.info < '16'
AND t2.production_year BETWEEN 1919 AND 2000;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'movie', 'episode', 'video movie')
AND kt2.kind IN ('movie', 'movie', 'episode', 'movie', 'tv movie')
AND lt.link IN ('referenced in', 'similar to', 'spin off from', 'featured in', 'remade as')
AND mi_idx2.info < '4.9'
AND t2.production_year BETWEEN 1926 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv movie', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'tv mini series', 'tv movie', 'tv movie', 'tv mini series')
AND lt.link IN ('follows', 'similar to', 'spin off from', 'features', 'remade as')
AND mi_idx2.info < '1020'
AND t2.production_year BETWEEN 1950 AND 2008;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv movie', 'video game', 'video movie', 'episode')
AND kt2.kind IN ('episode', 'video game', 'movie', 'movie', 'tv mini series')
AND lt.link IN ('followed by', 'edited into', 'remake of', 'followed by', 'unknown link')
AND mi_idx2.info < '664'
AND t2.production_year BETWEEN 1986 AND 2017;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'video game', 'tv movie', 'tv movie', 'movie')
AND kt2.kind IN ('episode', 'movie', 'movie', 'tv movie', 'video game')
AND lt.link IN ('follows', 'referenced in', 'spoofs', 'spin off from', 'spin off from')
AND mi_idx2.info < '693'
AND t2.production_year BETWEEN 1928 AND 2020;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'top 250 rank'
AND kt1.kind IN ('episode', 'tv mini series', 'tv mini series', 'tv mini series', 'video movie')
AND kt2.kind IN ('movie', 'movie', 'tv series', 'movie', 'video movie')
AND lt.link IN ('references', 'references', 'follows', 'references', 'spin off from')
AND mi_idx2.info < '2'
AND t2.production_year BETWEEN 1902 AND 1984;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video game', 'episode', 'tv mini series', 'tv mini series')
AND kt2.kind IN ('episode', 'movie', 'episode', 'episode', 'movie')
AND lt.link IN ('featured in', 'features', 'spoofed in', 'version of', 'version of')
AND mi_idx2.info < '6.5'
AND t2.production_year BETWEEN 2007 AND 2017;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video game', 'tv movie', 'episode', 'video game')
AND kt2.kind IN ('episode', 'tv movie', 'tv series', 'tv series', 'tv series')
AND lt.link IN ('follows', 'unknown link', 'spoofs', 'featured in', 'follows')
AND mi_idx2.info < '5.5'
AND t2.production_year BETWEEN 1981 AND 2011;",319,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) SeqScan(kt2) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 mc1) NestLoop(mi_idx1 ml lt it1 mc1 cn1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2 kt2) Leading(((((((((((((mi_idx1 (ml lt)) it1) mc1) cn1) t1) kt1) mi_idx2) it2) t2) mc2) cn2) kt2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv movie', 'tv series', 'video game', 'tv mini series')
AND kt2.kind IN ('episode', 'tv mini series', 'video game', 'tv series', 'video game')
AND lt.link IN ('referenced in', 'spoofs', 'edited into', 'featured in', 'remade as')
AND mi_idx2.info < '30'
AND t2.production_year BETWEEN 1964 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv movie', 'tv mini series', 'tv series', 'episode')
AND kt2.kind IN ('episode', 'episode', 'tv mini series', 'video movie', 'tv movie')
AND lt.link IN ('followed by', 'edited into', 'spoofed in', 'spoofed in', 'spoofed in')
AND mi_idx2.info < '6.0'
AND t2.production_year BETWEEN 1958 AND 2005;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'movie', 'tv series', 'tv mini series', 'episode')
AND kt2.kind IN ('tv series', 'episode', 'tv movie', 'video movie', 'movie')
AND lt.link IN ('references', 'spoofed in', 'edited from', 'spin off', 'referenced in')
AND mi_idx2.info < '0000000124'
AND t2.production_year BETWEEN 1954 AND 1997;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv series', 'movie', 'video game', 'video game')
AND kt2.kind IN ('movie', 'episode', 'video movie', 'episode', 'episode')
AND lt.link IN ('referenced in', 'followed by', 'featured in', 'followed by', 'referenced in')
AND mi_idx2.info < '6.1'
AND t2.production_year BETWEEN 1980 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv movie', 'tv movie', 'tv mini series', 'episode')
AND kt2.kind IN ('tv series', 'video game', 'video movie', 'tv series', 'tv series')
AND lt.link IN ('references', 'followed by', 'similar to', 'edited into', 'unknown link')
AND mi_idx2.info < '7.4'
AND t2.production_year BETWEEN 1921 AND 2020;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'movie', 'video game', 'tv movie', 'movie')
AND kt2.kind IN ('episode', 'video game', 'video movie', 'episode', 'tv mini series')
AND lt.link IN ('followed by', 'follows', 'referenced in', 'remade as', 'remake of')
AND mi_idx2.info < '5.6'
AND t2.production_year BETWEEN 1903 AND 1999;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv movie', 'video game', 'tv mini series', 'video movie')
AND kt2.kind IN ('episode', 'tv series', 'movie', 'episode', 'episode')
AND lt.link IN ('followed by', 'followed by', 'remake of', 'featured in', 'spoofs')
AND mi_idx2.info < '0000222100'
AND t2.production_year BETWEEN 1983 AND 2004;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'movie', 'tv mini series', 'tv series')
AND kt2.kind IN ('episode', 'video movie', 'video movie', 'episode', 'movie')
AND lt.link IN ('followed by', 'edited from', 'remade as', 'remake of', 'spoofs')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1915 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'tv series', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'tv movie', 'tv movie', 'movie', 'tv mini series')
AND lt.link IN ('followed by', 'similar to', 'referenced in', 'remake of', 'spoofs')
AND mi_idx2.info < '0000122000'
AND t2.production_year BETWEEN 1921 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'episode', 'video game', 'movie', 'video game')
AND kt2.kind IN ('episode', 'movie', 'tv series', 'tv movie', 'video game')
AND lt.link IN ('referenced in', 'features', 'similar to', 'edited from', 'references')
AND mi_idx2.info < '00..011221'
AND t2.production_year BETWEEN 1963 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'video movie', 'episode', 'tv movie')
AND kt2.kind IN ('episode', 'video game', 'episode', 'video game', 'video movie')
AND lt.link IN ('features', 'references', 'featured in', 'edited into', 'edited into')
AND mi_idx2.info < '17'
AND t2.production_year BETWEEN 1983 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video movie', 'video movie', 'tv mini series', 'episode')
AND kt2.kind IN ('episode', 'video game', 'tv mini series', 'movie', 'video movie')
AND lt.link IN ('referenced in', 'features', 'spin off', 'spoofs', 'spoofed in')
AND mi_idx2.info < '0.00002211'
AND t2.production_year BETWEEN 1981 AND 2020;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[jp]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'tv series', 'tv series', 'tv series')
AND kt2.kind IN ('episode', 'episode', 'video movie', 'video game', 'movie')
AND lt.link IN ('referenced in', 'spin off', 'similar to', 'spin off', 'referenced in')
AND mi_idx2.info < '4.6'
AND t2.production_year BETWEEN 1959 AND 2009;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'episode', 'video movie', 'video game')
AND kt2.kind IN ('movie', 'video movie', 'tv series', 'episode', 'tv series')
AND lt.link IN ('followed by', 'features', 'version of', 'unknown link', 'spoofs')
AND mi_idx2.info < '32693'
AND t2.production_year BETWEEN 1976 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv series', 'movie', 'video game')
AND kt2.kind IN ('movie', 'episode', 'video game', 'tv series', 'tv mini series')
AND lt.link IN ('referenced in', 'unknown link', 'references', 'follows', 'unknown link')
AND mi_idx2.info < '0000012211'
AND t2.production_year BETWEEN 1934 AND 2000;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv series', 'episode', 'tv series', 'video movie')
AND kt2.kind IN ('episode', 'video movie', 'video movie', 'tv series', 'tv mini series')
AND lt.link IN ('followed by', 'spin off', 'featured in', 'spin off', 'references')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1896 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv series', 'tv series', 'video game', 'tv mini series')
AND kt2.kind IN ('movie', 'video game', 'tv series', 'episode', 'video movie')
AND lt.link IN ('referenced in', 'features', 'spoofed in', 'featured in', 'remake of')
AND mi_idx2.info < '37661'
AND t2.production_year BETWEEN 1897 AND 1991;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'movie', 'episode', 'video game', 'movie')
AND kt2.kind IN ('episode', 'video game', 'tv series', 'movie', 'episode')
AND lt.link IN ('follows', 'unknown link', 'similar to', 'similar to', 'references')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1905 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'tv movie', 'video game', 'episode')
AND kt2.kind IN ('episode', 'episode', 'video game', 'episode', 'video game')
AND lt.link IN ('referenced in', 'unknown link', 'references', 'edited into', 'spin off from')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1943 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'tv series', 'video game', 'tv movie')
AND kt2.kind IN ('episode', 'episode', 'tv series', 'tv movie', 'tv mini series')
AND lt.link IN ('referenced in', 'edited into', 'follows', 'followed by', 'referenced in')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1977 AND 1998;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'video movie', 'episode', 'episode')
AND kt2.kind IN ('episode', 'video movie', 'tv mini series', 'episode', 'video game')
AND lt.link IN ('follows', 'spin off', 'remade as', 'follows', 'spoofs')
AND mi_idx2.info < '6.0'
AND t2.production_year BETWEEN 1889 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'movie', 'video game', 'video game')
AND kt2.kind IN ('episode', 'tv series', 'movie', 'episode', 'episode')
AND lt.link IN ('referenced in', 'follows', 'followed by', 'spoofed in', 'follows')
AND mi_idx2.info < '36'
AND t2.production_year BETWEEN 1906 AND 2009;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'tv mini series', 'video movie', 'tv mini series')
AND kt2.kind IN ('episode', 'video movie', 'tv series', 'tv series', 'movie')
AND lt.link IN ('follows', 'follows', 'referenced in', 'similar to', 'version of')
AND mi_idx2.info < '0001221000'
AND t2.production_year BETWEEN 1922 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'episode', 'tv series', 'movie', 'tv series')
AND kt2.kind IN ('movie', 'video game', 'video movie', 'tv series', 'video game')
AND lt.link IN ('referenced in', 'spoofed in', 'featured in', 'edited from', 'spin off from')
AND mi_idx2.info < '6.8'
AND t2.production_year BETWEEN 1953 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'episode', 'tv mini series', 'episode', 'tv mini series')
AND kt2.kind IN ('episode', 'tv movie', 'tv movie', 'episode', 'video movie')
AND lt.link IN ('followed by', 'followed by', 'spin off from', 'follows', 'referenced in')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1891 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv series', 'video movie', 'tv movie', 'tv series')
AND kt2.kind IN ('tv series', 'tv series', 'movie', 'tv series', 'video movie')
AND lt.link IN ('references', 'edited into', 'spin off', 'similar to', 'referenced in')
AND mi_idx2.info < '0000000213'
AND t2.production_year BETWEEN 1987 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'movie', 'episode', 'video game')
AND kt2.kind IN ('episode', 'episode', 'video movie', 'video movie', 'episode')
AND lt.link IN ('referenced in', 'spoofed in', 'spoofs', 'follows', 'spin off from')
AND mi_idx2.info < '....031111'
AND t2.production_year BETWEEN 1897 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'episode', 'episode', 'video movie', 'video game')
AND kt2.kind IN ('episode', 'video movie', 'movie', 'tv series', 'episode')
AND lt.link IN ('follows', 'spoofs', 'follows', 'version of', 'remade as')
AND mi_idx2.info < '664'
AND t2.production_year BETWEEN 1890 AND 2003;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv movie', 'tv series', 'video movie')
AND kt2.kind IN ('movie', 'tv series', 'video movie', 'tv mini series', 'tv series')
AND lt.link IN ('referenced in', 'spin off from', 'follows', 'followed by', 'version of')
AND mi_idx2.info < '80433'
AND t2.production_year BETWEEN 1930 AND 2020;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'video movie', 'video game', 'tv mini series')
AND kt2.kind IN ('episode', 'video movie', 'video movie', 'tv mini series', 'tv movie')
AND lt.link IN ('followed by', 'follows', 'spin off', 'unknown link', 'version of')
AND mi_idx2.info < '0000122000'
AND t2.production_year BETWEEN 1981 AND 2016;",319,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) SeqScan(kt2) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 mc1) NestLoop(mi_idx1 ml lt it1 mc1 cn1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2) NestLoop(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2) HashJoin(mi_idx1 ml lt it1 mc1 cn1 t1 kt1 mi_idx2 it2 t2 mc2 cn2 kt2) Leading(((((((((((((mi_idx1 (ml lt)) it1) mc1) cn1) t1) kt1) mi_idx2) it2) t2) mc2) cn2) kt2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'movie', 'tv mini series', 'movie', 'video movie')
AND kt2.kind IN ('episode', 'video movie', 'episode', 'tv movie', 'tv mini series')
AND lt.link IN ('follows', 'edited from', 'referenced in', 'followed by', 'version of')
AND mi_idx2.info < '631'
AND t2.production_year BETWEEN 1958 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv mini series', 'tv movie', 'episode', 'tv mini series')
AND kt2.kind IN ('movie', 'video movie', 'episode', 'movie', 'episode')
AND lt.link IN ('followed by', 'spoofs', 'spin off', 'similar to', 'references')
AND mi_idx2.info < '32693'
AND t2.production_year BETWEEN 1919 AND 2015;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'episode', 'tv movie', 'tv mini series', 'movie')
AND kt2.kind IN ('episode', 'tv mini series', 'video movie', 'tv movie', 'tv movie')
AND lt.link IN ('features', 'spin off from', 'remade as', 'featured in', 'unknown link')
AND mi_idx2.info < '1...011202'
AND t2.production_year BETWEEN 1942 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv mini series', 'video game', 'movie', 'movie')
AND kt2.kind IN ('episode', 'tv movie', 'video movie', 'episode', 'video game')
AND lt.link IN ('referenced in', 'edited from', 'referenced in', 'spin off from', 'references')
AND mi_idx2.info < '3..0111101'
AND t2.production_year BETWEEN 1940 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'movie', 'tv mini series', 'tv series', 'tv mini series')
AND kt2.kind IN ('episode', 'movie', 'video game', 'tv movie', 'tv movie')
AND lt.link IN ('referenced in', 'spin off from', 'edited into', 'unknown link', 'remade as')
AND mi_idx2.info < '30'
AND t2.production_year BETWEEN 1974 AND 2001;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'movie', 'video movie', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'tv mini series', 'movie')
AND lt.link IN ('referenced in', 'features', 'version of', 'unknown link', 'remake of')
AND mi_idx2.info < '4.6'
AND t2.production_year BETWEEN 1943 AND 2002;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fi]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'video movie', 'episode', 'video game', 'tv series')
AND kt2.kind IN ('episode', 'video game', 'video game', 'video movie', 'tv mini series')
AND lt.link IN ('follows', 'spin off from', 'spoofs', 'spin off', 'spoofed in')
AND mi_idx2.info < '0000132000'
AND t2.production_year BETWEEN 1990 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[nl]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'episode', 'video movie', 'video game', 'tv series')
AND kt2.kind IN ('movie', 'tv mini series', 'video game', 'tv series', 'episode')
AND lt.link IN ('spin off from', 'remake of', 'edited from', 'spoofed in', 'spoofs')
AND mi_idx2.info < '79'
AND t2.production_year BETWEEN 1979 AND 2004;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fi]'
AND it1.info = 'rating'
AND it2.info = 'top 250 rank'
AND kt1.kind IN ('episode', 'video movie', 'episode', 'video movie', 'movie')
AND kt2.kind IN ('movie', 'video game', 'tv mini series', 'tv movie', 'tv series')
AND lt.link IN ('references', 'remake of', 'spin off from', 'referenced in', 'edited into')
AND mi_idx2.info < '4'
AND t2.production_year BETWEEN 1929 AND 2008;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv mini series', 'episode', 'video game', 'video movie')
AND kt2.kind IN ('episode', 'video game', 'movie', 'tv mini series', 'video game')
AND lt.link IN ('followed by', 'spoofs', 'spoofs', 'unknown link', 'similar to')
AND mi_idx2.info < '566'
AND t2.production_year BETWEEN 1903 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'video game', 'movie', 'tv series')
AND kt2.kind IN ('episode', 'tv series', 'video game', 'movie', 'movie')
AND lt.link IN ('followed by', 'edited from', 'follows', 'edited from', 'edited from')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1900 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv series', 'video movie', 'movie', 'episode')
AND kt2.kind IN ('episode', 'tv movie', 'tv movie', 'tv series', 'movie')
AND lt.link IN ('followed by', 'edited from', 'features', 'follows', 'version of')
AND mi_idx2.info < '702'
AND t2.production_year BETWEEN 1923 AND 2020;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv mini series', 'episode', 'episode', 'episode')
AND kt2.kind IN ('episode', 'episode', 'episode', 'tv mini series', 'tv movie')
AND lt.link IN ('followed by', 'spin off from', 'featured in', 'references', 'similar to')
AND mi_idx2.info < '650'
AND t2.production_year BETWEEN 1896 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'movie', 'tv mini series', 'tv mini series', 'episode')
AND kt2.kind IN ('episode', 'movie', 'tv mini series', 'tv mini series', 'episode')
AND lt.link IN ('followed by', 'spoofed in', 'edited from', 'followed by', 'featured in')
AND mi_idx2.info < '0000232000'
AND t2.production_year BETWEEN 1960 AND 2011;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('episode', 'tv mini series', 'video game', 'episode', 'episode')
AND kt2.kind IN ('episode', 'tv mini series', 'video movie', 'video game', 'tv series')
AND lt.link IN ('follows', 'remake of', 'spoofed in', 'references', 'edited from')
AND mi_idx2.info < '0000122100'
AND t2.production_year BETWEEN 1988 AND 2006;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'movie', 'tv series', 'video movie', 'tv series')
AND kt2.kind IN ('movie', 'tv series', 'video movie', 'tv mini series', 'tv series')
AND lt.link IN ('referenced in', 'follows', 'referenced in', 'spoofs', 'follows')
AND mi_idx2.info < '80433'
AND t2.production_year BETWEEN 1968 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'movie', 'tv movie', 'tv movie', 'video movie')
AND kt2.kind IN ('movie', 'episode', 'movie', 'tv series', 'tv movie')
AND lt.link IN ('referenced in', 'featured in', 'follows', 'remake of', 'remake of')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1935 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[co]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv mini series', 'episode', 'video movie', 'tv series')
AND kt2.kind IN ('movie', 'movie', 'video movie', 'tv series', 'tv mini series')
AND lt.link IN ('referenced in', 'unknown link', 'edited into', 'spoofed in', 'featured in')
AND mi_idx2.info < '5.0'
AND t2.production_year BETWEEN 1899 AND 2019;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[nl]'
AND it1.info = 'votes'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv movie', 'episode', 'episode', 'movie')
AND kt2.kind IN ('movie', 'tv series', 'movie', 'video movie', 'movie')
AND lt.link IN ('spin off from', 'spoofs', 'spin off from', 'spin off', 'followed by')
AND mi_idx2.info < '00.1041001'
AND t2.production_year BETWEEN 1919 AND 1993;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[gb]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video movie', 'movie', 'tv movie', 'tv mini series')
AND kt2.kind IN ('tv series', 'movie', 'tv mini series', 'video movie', 'video game')
AND lt.link IN ('references', 'referenced in', 'referenced in', 'followed by', 'remake of')
AND mi_idx2.info < '7.4'
AND t2.production_year BETWEEN 1980 AND 2016;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fi]'
AND it1.info = 'votes distribution'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'video movie', 'video game', 'video movie', 'tv series')
AND kt2.kind IN ('movie', 'tv mini series', 'tv movie', 'tv movie', 'movie')
AND lt.link IN ('referenced in', 'spoofs', 'edited into', 'follows', 'version of')
AND mi_idx2.info < '514'
AND t2.production_year BETWEEN 1957 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[se]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video game', 'tv series', 'movie', 'episode')
AND kt2.kind IN ('episode', 'tv series', 'tv movie', 'video movie', 'video movie')
AND lt.link IN ('follows', 'similar to', 'edited from', 'edited from', 'follows')
AND mi_idx2.info < '6.0'
AND t2.production_year BETWEEN 1993 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[fi]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'video game', 'video movie', 'tv mini series', 'tv mini series')
AND kt2.kind IN ('tv movie', 'tv mini series', 'movie', 'video movie', 'video game')
AND lt.link IN ('referenced in', 'spoofs', 'edited from', 'version of', 'spoofs')
AND mi_idx2.info < '2.....2222'
AND t2.production_year BETWEEN 1991 AND 2012;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[de]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'video movie', 'tv movie', 'movie', 'video movie')
AND kt2.kind IN ('episode', 'video game', 'video game', 'tv movie', 'tv series')
AND lt.link IN ('followed by', 'edited into', 'featured in', 'referenced in', 'features')
AND mi_idx2.info < '6.0'
AND t2.production_year BETWEEN 1926 AND 2008;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('episode', 'tv mini series', 'movie', 'tv movie', 'tv mini series')
AND kt2.kind IN ('episode', 'tv mini series', 'video movie', 'tv movie', 'video movie')
AND lt.link IN ('followed by', 'spoofed in', 'remake of', 'followed by', 'spin off')
AND mi_idx2.info < '631'
AND t2.production_year BETWEEN 1944 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'rating'
AND it2.info = 'votes distribution'
AND kt1.kind IN ('tv series', 'tv series', 'tv mini series', 'episode', 'episode')
AND kt2.kind IN ('movie', 'video game', 'tv series', 'video movie', 'tv series')
AND lt.link IN ('referenced in', 'version of', 'referenced in', 'references', 'edited into')
AND mi_idx2.info < '0001111000'
AND t2.production_year BETWEEN 1943 AND 2010;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'movie', 'tv series', 'video game')
AND kt2.kind IN ('episode', 'tv mini series', 'video movie', 'episode', 'video game')
AND lt.link IN ('referenced in', 'featured in', 'followed by', 'features', 'edited into')
AND mi_idx2.info < '7.6'
AND t2.production_year BETWEEN 1971 AND 2017;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'movie', 'episode', 'video game')
AND kt2.kind IN ('movie', 'video game', 'tv mini series', 'episode', 'tv series')
AND lt.link IN ('referenced in', 'version of', 'spin off from', 'remake of', 'edited into')
AND mi_idx2.info < '7.8'
AND t2.production_year BETWEEN 1987 AND 2012;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[dk]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('episode', 'tv mini series', 'episode', 'tv series', 'tv movie')
AND kt2.kind IN ('episode', 'movie', 'episode', 'tv mini series', 'video game')
AND lt.link IN ('followed by', 'version of', 'edited into', 'spoofs', 'edited from')
AND mi_idx2.info < '5.7'
AND t2.production_year BETWEEN 1977 AND 2011;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'rating'
AND it2.info = 'votes'
AND kt1.kind IN ('tv series', 'tv mini series', 'video game', 'tv movie', 'episode')
AND kt2.kind IN ('movie', 'tv series', 'movie', 'video game', 'tv mini series')
AND lt.link IN ('referenced in', 'remade as', 'remade as', 'similar to', 'version of')
AND mi_idx2.info < '138389'
AND t2.production_year BETWEEN 1911 AND 2013;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[hu]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video movie', 'video movie', 'tv mini series', 'video game')
AND kt2.kind IN ('episode', 'video movie', 'movie', 'tv series', 'video movie')
AND lt.link IN ('referenced in', 'edited from', 'follows', 'remake of', 'remade as')
AND mi_idx2.info < '4.6'
AND t2.production_year BETWEEN 1953 AND 2014;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes distribution'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'tv mini series', 'video game', 'video game', 'video movie')
AND kt2.kind IN ('movie', 'tv movie', 'tv mini series', 'video game', 'episode')
AND lt.link IN ('referenced in', 'referenced in', 'version of', 'follows', 'remade as')
AND mi_idx2.info < '4.9'
AND t2.production_year BETWEEN 1917 AND 2013;",388,/*+  SeqScan(it1) SeqScan(it2) SeqScan(ml) SeqScan(lt) IndexScan(mi_idx2 movie_id_movie_info_idx) IndexScan(t2 title_pkey) SeqScan(kt2) IndexScan(mi_idx1 movie_id_movie_info_idx) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(t1 title_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) IndexScan(kt1 kind_type_pkey) HashJoin(ml lt) NestLoop(ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2) NestLoop(it2 ml lt mi_idx2 t2) HashJoin(it2 ml lt mi_idx2 t2 kt2) NestLoop(it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2) NestLoop(it1 it2 ml lt mi_idx2 t2 kt2 mi_idx1 mc1 cn1 t1 mc2 cn2 kt1) Leading((((((((it1 ((((it2 ((ml lt) mi_idx2)) t2) kt2) mi_idx1)) mc1) cn1) t1) mc2) cn2) kt1)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'rating'
AND kt1.kind IN ('tv series', 'video game', 'video game', 'tv mini series', 'movie')
AND kt2.kind IN ('movie', 'tv movie', 'tv mini series', 'video game', 'tv mini series')
AND lt.link IN ('referenced in', 'remade as', 'remake of', 'unknown link', 'remade as')
AND mi_idx2.info < '7.3'
AND t2.production_year BETWEEN 1922 AND 1993;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
"SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
 FROM company_name AS cn1,
 company_name AS cn2,
 info_type AS it1,
 info_type AS it2,
 kind_type AS kt1,
 kind_type AS kt2,
 link_type AS lt,
 movie_companies AS mc1,
 movie_companies AS mc2,
 movie_info_idx AS mi_idx1,
 movie_info_idx AS mi_idx2,
 movie_link AS ml,
 title AS t1,
 title AS t2
 WHERE lt.id = ml.link_type_id 
AND t1.id = ml.movie_id 
AND t2.id = ml.linked_movie_id 
AND it1.id = mi_idx1.info_type_id 
AND t1.id = mi_idx1.movie_id
AND kt1.id = t1.kind_id
AND cn1.id = mc1.company_id
AND t1.id = mc1.movie_id
AND ml.movie_id = mi_idx1.movie_id
AND ml.movie_id = mc1.movie_id
AND mi_idx1.movie_id = mc1.movie_id
AND it2.id = mi_idx2.info_type_id
AND t2.id = mi_idx2.movie_id
AND kt2.id = t2.kind_id
AND cn2.id = mc2.company_id
AND t2.id = mc2.movie_id
AND ml.linked_movie_id = mi_idx2.movie_id
AND ml.linked_movie_id = mc2.movie_id
AND mi_idx2.movie_id = mc2.movie_id
AND cn1.country_code = '[us]'
AND it1.info = 'votes'
AND it2.info = 'top 250 rank'
AND kt1.kind IN ('episode', 'video game', 'movie', 'episode', 'movie')
AND kt2.kind IN ('movie', 'video movie', 'tv series', 'movie', 'movie')
AND lt.link IN ('references', 'edited into', 'spoofed in', 'spoofs', 'edited from')
AND mi_idx2.info < '16'
AND t2.production_year BETWEEN 1953 AND 2006;",341,/*+  IndexScan(mi_idx1 movie_id_movie_info_idx) SeqScan(ml) SeqScan(lt) SeqScan(it1) IndexScan(t1 title_pkey) SeqScan(kt1) IndexScan(mi_idx2 movie_id_movie_info_idx) SeqScan(it2) IndexScan(t2 title_pkey) IndexScan(kt2 kind_type_pkey) IndexScan(mc1 movie_id_movie_companies) IndexScan(cn1 company_name_pkey) IndexScan(mc2 movie_id_movie_companies) IndexScan(cn2 company_name_pkey) HashJoin(ml lt) MergeJoin(mi_idx1 ml lt) HashJoin(mi_idx1 ml lt it1) NestLoop(mi_idx1 ml lt it1 t1) HashJoin(mi_idx1 ml lt it1 t1 kt1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2) HashJoin(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2) NestLoop(mi_idx1 ml lt it1 t1 kt1 mi_idx2 it2 t2 kt2 mc1 cn1 mc2 cn2) Leading(((((((((((((mi_idx1 (ml lt)) it1) t1) kt1) mi_idx2) it2) t2) kt2) mc1) cn1) mc2) cn2)) */
