query,plan_id,plan_content
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('one-word-title', 'nudity', 'sequel', 'oral-sex', 'male-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mystical%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year > 1994;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(producer)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year > 2002;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Eva%'
AND rt.role = 'actor'
AND t.production_year > 1960;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(executive producer)', '(producer)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('male-nudity', 'death', 'father-daughter-relationship', 'surrealism', 'surrealism')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(creator)', '(co-executive producer)', '(voice)', '(co-producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('bare-breasts', 'friendship', 'number-in-title', 'anal-sex', 'death')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%15%')
AND n.gender = 'm'
AND n.name LIKE '%John%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('blood', 'anal-sex', 'revenge', 'friendship', 'bare-breasts')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Charlie%'
AND rt.role = 'actor'
AND t.production_year > 1951;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(associate producer)', '(written by)', '(producer)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%PFM%')
AND n.gender = 'f'
AND n.name LIKE '%Ho%'
AND rt.role = 'actress'
AND t.production_year > 2011;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(uncredited)', '(writer)', '(producer)', '(supervising producer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Maria%'
AND rt.role = 'actress'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(production assistant)', '(uncredited)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%year%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Scott%'
AND rt.role = 'actor'
AND t.production_year > 2009;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[ee]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%William%'
AND rt.role = 'actor'
AND t.production_year > 1960;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%were%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year > 1990;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(producer)', '(production assistant)', '(producer)', '(producer)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%USA%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Bo%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(writer)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%currently%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year > 2002;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(archive footage)', '(writer)', '(archive footage)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Kilborn%'
AND rt.role = 'actor'
AND t.production_year > 1933;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND k.keyword IN ('father-daughter-relationship', 'death', 'sequel', 'nudity', 'based-on-play')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%the%')
AND n.gender = 'm'
AND n.name LIKE '%Ãlvaro%'
AND rt.role = 'actor'
AND t.production_year > 1891;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice: English version)', '(as Ramse Mostoller)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%PCS%')
AND n.gender = 'f'
AND n.name LIKE '%Ho%'
AND rt.role = 'actress'
AND t.production_year > 1981;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(voice)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Shearer%'
AND rt.role = 'actor'
AND t.production_year > 1954;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%on%')
AND n.gender = 'f'
AND n.name LIKE '%Roger%'
AND rt.role = 'actress'
AND t.production_year > 2002;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(production assistant)', '(voice)', '(writer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Martin%'
AND rt.role = 'actor'
AND t.production_year > 2000;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('father-son-relationship', 'number-in-title', 'father-daughter-relationship', 'nudity', 'nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%Cyr%'
AND rt.role = 'actress'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'budget'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%33%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 2000;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(producer)', '(uncredited)', '(uncredited)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Ron%'
AND rt.role = 'actor'
AND t.production_year > 1998;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%must%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year > 1983;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(executive producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('bare-breasts', 'one-word-title', 'dog', 'love', 'friendship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Weaver%'
AND rt.role = 'actor'
AND t.production_year > 1982;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 2011;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('one-word-title', 'anal-sex', 'oral-sex', 'sequel', 'father-son-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%John%'
AND rt.role = 'actor'
AND t.production_year > 1973;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%he%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 1966;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(writer)', '(uncredited)', '(voice)', '(production assistant)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Morton%'
AND rt.role = 'actor'
AND t.production_year > 1961;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('number-in-title', 'death', 'male-nudity', 'love', 'revenge')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%rescued%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%William%'
AND rt.role = 'actor'
AND t.production_year > 1917;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(producer)', '(producer)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year > 1981;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(executive producer)', '(script supervisor)', '(production coordinator)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year > 1904;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(extras wrangler) (uncredited)', '(additional material)', '(as Yvonne)', '(production assistant)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%Brown%'
AND rt.role = 'actress'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(voice)', '(producer)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%delinquent%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year > 2002;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(production assistant)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Bell%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(supervising producer)', '(voice)', '(script supervisor)', '(script supervisor)', '(production assistant)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year > 2008;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year > 1999;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[is]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%inside%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('father-daughter-relationship', 'one-word-title', 'police', 'blood', 'death')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(script producer)', '(executive producer)', '(voice)', '(writer)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Stephen%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(written by)', '(written by)', '(co-producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%talking%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%O%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(archive footage)', '(producer)', '(archive footage)', '(written by)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Herschel%'
AND rt.role = 'actor'
AND t.production_year > 1962;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice: English version)', '(production assistant)', '(creator)', '(creator)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('blood', 'nudity', 'father-son-relationship', 'father-son-relationship', 'bare-chested-male')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%New%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jordan%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year > 1968;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year > 1980;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(supervising producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%1%')
AND n.gender = 'f'
AND n.name LIKE '%Mann%'
AND rt.role = 'actress'
AND t.production_year > 1943;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Trey%'
AND rt.role = 'actor'
AND t.production_year > 2006;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(writer)', '(archive footage)', '(writer)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%qv%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Lo%'
AND rt.role = 'actor'
AND t.production_year > 1986;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year > 1959;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%being%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 1972;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('death', 'male-nudity', 'nudity', 'number-in-title', 'father-son-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(animal coordinator)', '(voice)', '(writer)', '(writer)', '(adprom manager)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Danny%'
AND rt.role = 'actor'
AND t.production_year > 1985;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice: English version)', '(credit only)', '(credit only)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%be%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 1933;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year > 2000;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%i%')
AND n.gender = 'f'
AND n.name LIKE '%Jon%'
AND rt.role = 'actress'
AND t.production_year > 1996;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%James%'
AND rt.role = 'actor'
AND t.production_year > 1938;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Howard%'
AND rt.role = 'actor'
AND t.production_year > 1988;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 1997;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(credit only)', '(credit only)', '(voice: English version)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('father-son-relationship', 'husband-wife-relationship', 'number-in-title', 'dog', 'blood')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[es]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%his%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%M%'
AND rt.role = 'actor'
AND t.production_year > 2010;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(Centre-midfield 1981-94)', '(episode)', '(as Die HimmelsstÃ¼rmer)', '(associate producer)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%But%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%L%'
AND rt.role = 'actor'
AND t.production_year > 1972;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('back-rent', 'explosive-mine', 'learning-speech', 'endless-summer', 'suicidal-guy')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%M%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year > 1985;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%Black%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year > 1989;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(producer)', '(stand-in: Sean Young)', '(as Marina Anderson-Carradine)', '(concept)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('dog', 'anal-sex', 'father-son-relationship', 'one-word-title', 'family-relationships')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%33%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Jones%'
AND rt.role = 'actress'
AND t.production_year > 1970;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(script supervisor)', '(supervising producer)', '(uncredited)', '(written by)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('dog', 'father-daughter-relationship', 'revenge', 'blood', 'husband-wife-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%English%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year > 1995;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(as MÂª Teresa Neila)', '(production assistant)', '(executive producer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Woo%'
AND rt.role = 'actor'
AND t.production_year > 1945;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(executive producer)', '(writer)', '(animal coordinator)', '(actors director)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-play', 'husband-wife-relationship', 'bare-breasts', 'bare-breasts', 'dog')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year > 2010;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%construction%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Richardson%'
AND rt.role = 'actor'
AND t.production_year > 1968;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(writer)', '(writer)', '(archive footage)')
AND cn.country_code = '[gb]'
AND it.info = 'genres'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%F%'
AND rt.role = 'actor'
AND t.production_year > 1993;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 2003;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 1997;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Kevin%'
AND rt.role = 'actor'
AND t.production_year > 1984;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(producer)', '(executive producer)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Richard%'
AND rt.role = 'actor'
AND t.production_year > 1998;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(supervising producer)', '(executive producer)', '(written by)', '(credit only)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2000;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'countries'
AND k.keyword IN ('violence', 'father-son-relationship', 'bare-chested-male', 'friendship', 'friendship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%Brown%'
AND rt.role = 'actor'
AND t.production_year > 1952;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%that%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(supervising producer)', '(creator)', '(uncredited)', '(co-executive producer)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Nunn%'
AND rt.role = 'actor'
AND t.production_year > 2006;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('violence', 'non-fiction', 'friendship', 'father-daughter-relationship', 'non-fiction')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year > 1990;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Leonard%'
AND rt.role = 'actor'
AND t.production_year > 2009;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Andrey%'
AND rt.role = 'actor'
AND t.production_year > 1984;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(executive producer)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('tribal-taboo', 'hero', 'nude-picture', 'televised-execution', 'waxing')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year > 2006;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%F%'
AND rt.role = 'actor'
AND t.production_year > 1990;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(voice)', '(executive producer)', '(executive producer)', '(producer)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%K%')
AND n.gender = 'm'
AND n.name LIKE '%Brown%'
AND rt.role = 'actor'
AND t.production_year > 1922;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 1975;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(animal coordinator)', '(voice)', '(executive producer)', '(producer)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%stay%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 2009;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Shawn%'
AND rt.role = 'actor'
AND t.production_year > 1974;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(story)', '(assistant to line producer)', '(uncredited)', '(as Vincenzo Jannacci)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('oral-sex', 'father-son-relationship', 'love', 'sequel', 'revenge')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%Bob%'
AND rt.role = 'actress'
AND t.production_year > 1973;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('surrealism', 'husband-wife-relationship', 'bare-chested-male', 'husband-wife-relationship', 'police')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(uncredited)', '(associate producer)', '(archive footage)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 2011;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(voice)', '(credit only)', '(written by)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('husband-wife-relationship', 'anal-sex', 'death', 'husband-wife-relationship', 'male-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%of%')
AND n.gender = 'f'
AND n.name LIKE '%Frank%'
AND rt.role = 'actress'
AND t.production_year > 1994;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'genres'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%recorded%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%the%')
AND n.gender = 'm'
AND n.name LIKE '%Smith%'
AND rt.role = 'actor'
AND t.production_year > 1986;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%that%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year > 1957;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year > 1949;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('dog', 'dog', 'father-son-relationship', 'violence', 'tv-mini-series')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Redgrave%'
AND rt.role = 'actor'
AND t.production_year > 1930;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(series deviser)', '(executive producer)', '(voice: Japanese version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%u%')
AND n.gender = 'f'
AND n.name LIKE '%Paul%'
AND rt.role = 'actress'
AND t.production_year > 1986;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(voice)', '(executive producer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('number-in-title', 'father-son-relationship', 'bare-breasts', 'tv-mini-series', 'non-fiction')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%when%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year > 1988;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(written by)', '(script supervisor)', '(co-producer)', '(script supervisor)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(writer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Young%'
AND rt.role = 'actor'
AND t.production_year > 1964;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(creator)', '(uncredited)', '(co-executive producer)', '(production coordinator)', '(creator)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Barker%'
AND rt.role = 'actor'
AND t.production_year > 1976;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('number-in-title', 'bare-chested-male', 'based-on-play', 'bare-chested-male', 'father-son-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Digital%')
AND n.gender = 'm'
AND n.name LIKE '%Al%'
AND rt.role = 'actor'
AND t.production_year > 1969;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Approved%')
AND n.gender = 'f'
AND n.name LIKE '%Erica%'
AND rt.role = 'actress'
AND t.production_year > 1962;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year > 1996;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('tv-mini-series', 'nudity', 'husband-wife-relationship', 'sequel', 'husband-wife-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%RAT%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year > 1970;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)', '(voice)', '(voice)', '(producer)')
AND cn.country_code = '[gb]'
AND it.info = 'countries'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%coat%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(writer)', '(producer)', '(voice)')
AND cn.country_code = '[gb]'
AND it.info = 'countries'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Dick%'
AND rt.role = 'actor'
AND t.production_year > 2000;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(producer)', '(producer)', '(voice)', '(archive footage)')
AND cn.country_code = '[gb]'
AND it.info = 'genres'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%by%')
AND n.gender = 'f'
AND n.name LIKE '%Rose%'
AND rt.role = 'actress'
AND t.production_year > 1972;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production coordinator)', '(creator)', '(production assistant)', '(co-executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%Portugal%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year > 1941;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('dog', 'police', 'love', 'tv-mini-series', 'tv-mini-series')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%OFM%')
AND n.gender = 'f'
AND n.name LIKE '%Richard%'
AND rt.role = 'actress'
AND t.production_year > 1999;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')
AND n.gender = 'f'
AND n.name LIKE '%Silverman%'
AND rt.role = 'actress'
AND t.production_year > 1993;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jose%'
AND rt.role = 'actor'
AND t.production_year > 1997;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(production assistant)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year > 1998;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(voice)', '(writer)', '(production associate)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%anything%')
AND n.gender = 'm'
AND n.name LIKE '%der%'
AND rt.role = 'actor'
AND t.production_year > 2008;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(series director) (1995)', '(animal wrangler)', '(archive footage)', '(book)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Sweet%'
AND rt.role = 'actor'
AND t.production_year > 1968;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%d%')
AND n.gender = 'm'
AND n.name LIKE '%Jon%'
AND rt.role = 'actor'
AND t.production_year > 1992;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%Digard%'
AND rt.role = 'actress'
AND t.production_year > 1939;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(novel)', '(voice) (as Judy)', '(credit only)', '(archive footage)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Alexa%'
AND rt.role = 'actor'
AND t.production_year > 2003;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year > 2002;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(actors director)')
AND cn.country_code = '[lt]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 1937;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('oral-sex', 'friendship', 'death', 'love', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Adam%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('sequel', 'based-on-play', 'male-nudity', 'death', 'love')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year > 1948;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year > 1983;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Francisco%'
AND rt.role = 'actor'
AND t.production_year > 1993;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(creator)', '(writer)', '(producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%My%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Jean%'
AND rt.role = 'actor'
AND t.production_year > 2000;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year > 2011;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year > 1929;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%M%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 1960;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(executive producer)', '(writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 1999;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%Maria%'
AND rt.role = 'actress'
AND t.production_year > 1961;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year > 1950;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Will%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Thomas%'
AND rt.role = 'actor'
AND t.production_year > 1991;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(production coordinator)', '(production coordinator)', '(production coordinator)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%Rose%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(co-executive producer)', '(production coordinator)', '(co-executive producer)', '(voice)', '(script supervisor)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('father-son-relationship', 'violence', 'bare-breasts', 'friendship', 'husband-wife-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%her%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 1972;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(executive producer)', '(supervising producer)', '(script supervisor)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('murder', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year > 1988;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('father-son-relationship', 'tv-mini-series', 'number-in-title', 'nudity', 'anal-sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('blood', 'oral-sex', 'bare-chested-male', 'nudity', 'revenge')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PCS%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%GÃ³mez%'
AND rt.role = 'actor'
AND t.production_year > 1962;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(writer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[gb]'
AND it.info = 'genres'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 1996;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Amato%'
AND rt.role = 'actor'
AND t.production_year > 1941;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[ca]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year > 1894;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(producer)', '(producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%unit%' OR mi.info LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%Roger%'
AND rt.role = 'actress'
AND t.production_year > 1916;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year > 1893;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(writer)', '(archive footage)', '(writer)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('bare-breasts', 'anal-sex', 'surrealism', 'bare-chested-male', 'bare-breasts')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Friedman%'
AND rt.role = 'actor'
AND t.production_year > 1956;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 1974;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'genres'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year > 1922;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year > 2011;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(2011)', '(1980-)', '(as Kestie Morsaai)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%PFM%')
AND n.gender = 'm'
AND n.name LIKE '%Peterson%'
AND rt.role = 'actor'
AND t.production_year > 1987;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Lee%'
AND rt.role = 'actor'
AND t.production_year > 1953;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Jeff%'
AND rt.role = 'actor'
AND t.production_year > 1958;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('tv-mini-series', 'sequel', 'male-nudity', 'number-in-title', 'male-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year > 2012;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(assistant to producer)', '(book)', '(voice: English version) (uncredited)', '(location manager)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('love', 'non-fiction', 'non-fiction', 'tv-mini-series', 'revenge')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%flights%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Tom%'
AND rt.role = 'actor'
AND t.production_year > 2008;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%SÃ¡%'
AND rt.role = 'actor'
AND t.production_year > 1987;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(credit only)', '(credit only)', '(credit only)', '(voice: English version)', '(voice: English version)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('death', 'friendship', 'dog', 'revenge', 'based-on-play')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%M%')
AND n.gender = 'f'
AND n.name LIKE '%Jay%'
AND rt.role = 'actress'
AND t.production_year > 1980;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 1972;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(writer)', '(writer)', '(writer)', '(archive footage)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year > 1959;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%S%'
AND rt.role = 'actor'
AND t.production_year > 1919;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(production assistant)', '(voice)')
AND cn.country_code = '[pt]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%RAT%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 1993;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('friendship', 'dog', 'police', 'one-word-title', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Wayne%'
AND rt.role = 'actor'
AND t.production_year > 1991;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('non-fiction', 'family-relationships', 'death', 'based-on-play', 'friendship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%Brown%'
AND rt.role = 'actor'
AND t.production_year > 1952;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('revenge', 'tv-mini-series', 'death', 'father-son-relationship', 'police')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jason%'
AND rt.role = 'actor'
AND t.production_year > 1904;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(producer)', '(credit only)', '(producer)', '(written by)')
AND cn.country_code = '[gb]'
AND it.info = 'countries'
AND k.keyword IN ('father-daughter-relationship', 'nudity', 'oral-sex', 'friendship', 'dog')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Fred%'
AND rt.role = 'actor'
AND t.production_year > 1933;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(voice)', '(writer)', '(writer)', '(producer)')
AND cn.country_code = '[gb]'
AND it.info = 'countries'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%c%')
AND n.gender = 'f'
AND n.name LIKE '%Mary%'
AND rt.role = 'actress'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(writer)', '(writer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Friedman%'
AND rt.role = 'actor'
AND t.production_year > 1986;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[be]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 1963;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 1944;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(production assistant)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Mark%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 1986;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(voice)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%Jonathan%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(producer)', '(uncredited)', '(associate producer)', '(written by)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('anal-sex', 'male-nudity', 'death', 'blood', 'oral-sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%Weaver%'
AND rt.role = 'actor'
AND t.production_year > 2003;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(voice)', '(production assistant)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%the%')
AND n.gender = 'm'
AND n.name LIKE '%Godfrey%'
AND rt.role = 'actor'
AND t.production_year > 1949;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Chris%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 2001;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(uncredited)', '(production coordinator)', '(voice)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%MacFarlane%'
AND rt.role = 'actress'
AND t.production_year > 1968;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Apollo%')
AND n.gender = 'm'
AND n.name LIKE '%Jon%'
AND rt.role = 'actor'
AND t.production_year > 2004;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('bare-breasts', 'husband-wife-relationship', 'violence', 'number-in-title', 'number-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%White%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 1977;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Crawford%'
AND rt.role = 'actor'
AND t.production_year > 1976;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Lt%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year > 1964;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(writer)', '(writer)', '(production assistant)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Amato%'
AND rt.role = 'actor'
AND t.production_year > 2003;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Barry%'
AND rt.role = 'actor'
AND t.production_year > 1983;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year > 2002;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(writer)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('sequel', 'anal-sex', 'oral-sex', 'dog', 'family-relationships')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%the%' OR mi.info LIKE '%They%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(writer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Black%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year > 2005;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%s%')
AND n.gender = 'f'
AND n.name LIKE '%Baker%'
AND rt.role = 'actress'
AND t.production_year > 1982;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(co-executive producer)', '(uncredited)', '(co-producer)', '(production coordinator)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('husband-wife-relationship', 'sequel', 'blood', 'family-relationships', 'one-word-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%is%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year > 1927;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice: Japanese version)', '(voice)', '(producer) (as Fred DeCordova)', '(talent coordinator)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%with%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year > 1990;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(production assistant)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%M%')
AND n.gender = 'f'
AND n.name LIKE '%Bobby%'
AND rt.role = 'actress'
AND t.production_year > 1966;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(executive producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(written by)', '(associate producer)', '(voice)', '(associate producer)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 2007;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(set production assistant)', '(uncredited)', '(archive footage) (as Jennifer Griffin)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year > 2006;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year > 1999;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Fiona MacGillivray)', '(assistant location manager) (uncredited)', '(producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('hotel-room-516', 'tornado-touchdown', 'strict-teacher', 'voice-identification-match', 'minute-silence')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Brown%'
AND rt.role = 'actor'
AND t.production_year > 1975;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Professor Ian Poll)', '(uncredited)', '(also archive footage)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 1995;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(animal coordinator)', '(voice)', '(voice)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%Sweden%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year > 1927;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('male-nudity', 'death', 'based-on-play', 'bare-breasts', 'based-on-play')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Jordan%'
AND rt.role = 'actor'
AND t.production_year > 1983;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(supervising producer)', '(archive footage)', '(production coordinator)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Young%'
AND rt.role = 'actor'
AND t.production_year > 2006;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('violence', 'violence', 'male-nudity', 'friendship', 'number-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%M%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 1953;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%House%')
AND n.gender = 'm'
AND n.name LIKE '%Shaun%'
AND rt.role = 'actor'
AND t.production_year > 2010;",170,/*+  SeqScan(mc) SeqScan(cn) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) HashJoin(mc cn) NestLoop(k mk) HashJoin(mc cn k mk) NestLoop(mc cn k mk t) NestLoop(mc cn k mk t ci) NestLoop(mc cn k mk t ci chn) HashJoin(mc cn k mk t ci chn rt) NestLoop(mc cn k mk t ci chn rt n) NestLoop(mc cn k mk t ci chn rt n mi) NestLoop(mc cn k mk t ci chn rt n mi it) NestLoop(mc cn k mk t ci chn rt n mi it an) Leading(((((((((((mc cn) (k mk)) t) ci) chn) rt) n) mi) it) an)) */
