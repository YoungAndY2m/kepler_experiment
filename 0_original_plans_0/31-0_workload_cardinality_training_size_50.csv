query,plan_id,plan_content
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%A%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-play', 'husband-wife-relationship', 'tv-mini-series', 'surrealism', 'one-word-title')
AND mi.info IN ('Comedy', 'Comedy', 'Silent', 'PCS:Spherical', 'UK')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Goldwyn%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Silent', 'PCS:Spherical', 'Documentary', 'Comedy', 'Documentary')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)', '(production assistant)', '(executive producer)', '(production assistant)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Drama', 'Drama', 'PFM:35 mm', 'Black and White', 'Mono')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Comedy', 'Silent', 'Silent', 'UK', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(co-producer)', '(associate producer)', '(voice: English version)', '(co-producer)')
AND cn.name LIKE '%Home%'
AND it1.info = 'countries'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IN ('USA', 'USA', 'English', 'English', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(creator)', '(supervising producer)', '(creator)', '(archive footage)', '(co-executive producer)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PFM:35 mm', 'PFM:35 mm', 'USA', 'Comedy', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(voice)', '(writer)', '(writer)', '(writer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('violence', 'death', 'nudity', 'nudity', 'friendship')
AND mi.info IN ('Color', 'Color', 'Color', 'USA', 'Color')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('father-daughter-relationship', 'love', 'police', 'bare-chested-male', 'bare-breasts')
AND mi.info IN ('RAT:1.33 : 1', 'Mono', 'PFM:35 mm', 'Drama', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(animal trainer)', '(story)', '(as Hammer)', '(production aide)', '(unit runner)')
AND cn.name LIKE '%Zweites%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('UK', 'PCS:Spherical', 'Comedy', 'PCS:Spherical', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('PFM:35 mm', 'Mono', 'Drama', 'OFM:35 mm', 'OFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.name LIKE '%Pictures%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IN ('Mono', 'Mono', 'Drama', 'Drama', 'Mono')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('bare-chested-male', 'male-nudity', 'dog', 'father-son-relationship', 'father-son-relationship')
AND mi.info IN ('Color', 'OFM:35 mm', 'USA', 'English', 'English')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Corporation%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IN ('Documentary', 'Silent', 'UK', 'PCS:Spherical', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%System%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IN ('USA', 'Drama', 'Comedy', 'OFM:35 mm', 'Comedy')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('friendship', 'dog', 'father-son-relationship', 'husband-wife-relationship', 'male-nudity')
AND mi.info IN ('PCS:Spherical', 'Silent', 'Documentary', 'Comedy', 'PCS:Spherical')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('nudity', 'male-nudity', 'blood', 'anal-sex', 'bare-breasts')
AND mi.info IN ('Color', 'English', 'English', 'Color', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%TV%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Mono', 'Mono', 'Drama', 'Drama', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND cn.name LIKE '%Pictures%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-play', 'bare-breasts', 'male-nudity', 'number-in-title', 'police')
AND mi.info IN ('UK', 'Comedy', 'UK', 'Comedy', 'Documentary')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('Black and White', 'Drama', 'Mono', 'Black and White', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(story)', '(archive footage)', '(associate producer)', '(credit only)', '(co-executive producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%National%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('Drama', 'Drama', 'Mono', 'Drama', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Comedy', 'PCS:Spherical', 'Comedy', 'Silent', 'Documentary')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(uncredited)', '(executive producer)', '(producer)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IN ('USA', 'Color', 'Sweden:15', 'Romance', 'Sweden:15')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Productions%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('oral-sex', 'bare-breasts', 'surrealism', 'death', 'nudity')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Corporation%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Silent', 'PCS:Spherical', 'Documentary', 'UK', 'UK')
AND n.gender = 'f';",78,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PCS:Spherical', 'Silent', 'PCS:Spherical', 'UK', 'Documentary')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(uncredited)', '(associate producer)', '(uncredited)', '(associate producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info IN ('English', 'USA', 'USA', 'English', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Documentary', 'Comedy', 'Documentary', 'UK', 'Documentary')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(production assistant)', '(executive producer)', '(executive producer)', '(producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%PathÃ©%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Thriller', 'Crime', 'Sweden:15', 'Thriller', 'NTSC')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-play', 'surrealism', 'nudity', 'based-on-play', 'friendship')
AND mi.info IN ('OFM:35 mm', '-', 'OFM:35 mm', 'Drama', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('father-son-relationship', 'blood', 'surrealism', 'blood', 'father-daughter-relationship')
AND mi.info IN ('Color', 'Color', 'Color', 'Color', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(writer)', '(associate producer)', '(associate producer)', '(writer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('PCS:Spherical', 'RAT:1.33 : 1', 'UK', 'UK', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('number-in-title', 'father-daughter-relationship', 'husband-wife-relationship', 'bare-chested-male', 'surrealism')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(voice)', '(voice)', '(producer)', '(producer)')
AND cn.name LIKE '%General%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IN ('Documentary', 'UK', 'Comedy', 'UK', 'Comedy')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(production assistant)', '(producer)', '(production assistant)', '(producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('number-in-title', 'dog', 'dog', 'surrealism', 'based-on-play')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%American%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('number-in-title', 'revenge', 'bare-breasts', 'sequel', 'tv-mini-series')
AND mi.info IN ('Short', 'Documentary', 'Black and White', 'Black and White', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(co-executive producer)', '(producer)', '(written by)', '(executive producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'English', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('-', 'Drama', 'Drama', '-', '-')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Home%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('OFM:35 mm', 'OFM:35 mm', 'USA', 'OFM:35 mm', 'PFM:35 mm')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('UK', 'UK', 'UK', 'RAT:1.33 : 1', 'Stereo')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%CBS%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IN ('Comedy', 'Black and White', 'PCS:Spherical', 'PCS:Spherical', 'Comedy')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(voice)', '(voice)', '(voice)', '(writer)')
AND cn.name LIKE '%Columbia%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('death', 'dog', 'based-on-play', 'male-nudity', 'bare-chested-male')
AND mi.info IN ('Drama', 'Drama', 'OFM:35 mm', 'Drama', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('UK', 'RAT:2.35 : 1', 'Action', 'UK:15', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Paramount%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('Silent', 'Silent', 'Comedy', 'Documentary', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('father-daughter-relationship', 'blood', 'family-relationships', 'death', 'nudity')
AND mi.info IN ('Mono', 'Mono', 'Comedy', 'Drama', 'Mono')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%National%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('English', 'English', 'English', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Mono', 'OFM:35 mm', 'PFM:35 mm', 'OFM:35 mm', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Documentary', 'UK', 'Documentary', 'PCS:Spherical', 'Comedy')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IN ('USA', 'USA', 'PFM:35 mm', 'USA', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(publicity: WNET)', '(location manager) (as Temple Williams III)', '(as Jaime Antonio Puig BalaÃ±a)', '(co-producer) (as Drew Alan Waldman)', '(archival footage: segment ""Etna"")')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IN ('USA', 'Color', 'Color', 'USA', 'Color')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(production assistant)', '(production assistant)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Pictures%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('revenge', 'based-on-play', 'family-relationships', 'friendship', 'tv-mini-series')
AND mi.info IN ('PCS:Spherical', 'UK', 'Short', 'UK', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%MGM%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('anal-sex', 'husband-wife-relationship', 'dog', 'surrealism', 'father-son-relationship')
AND mi.info IN ('Black and White', 'RAT:1.33 : 1', 'Drama', 'PFM:35 mm', 'OFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IN ('Comedy', 'PCS:Spherical', 'PCS:Spherical', 'PCS:Spherical', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Bros%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IN ('English', 'USA', 'English', 'English', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(script supervisor)', '(co-producer)', '(co-producer)', '(associate producer)')
AND cn.name LIKE '%Universal%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Short', 'RAT:1.33 : 1', 'Stereo', 'Stereo', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('anal-sex', 'violence', 'tv-mini-series', 'oral-sex', 'friendship')
AND mi.info IN ('Black and White', 'Comedy', 'Black and White', 'PCS:Spherical', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Universal%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('father-daughter-relationship', 'surrealism', 'nudity', 'family-relationships', 'dog')
AND mi.info IN ('English', 'Short', 'English', 'English', 'Color')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Color', 'Color', 'USA', 'Color', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('male-nudity', 'dog', 'non-fiction', 'bare-chested-male', 'oral-sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%British%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Silent', 'Documentary', 'Silent', 'UK', 'Dolby Digital')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%General%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IN ('Documentary', 'UK', 'Documentary', 'UK', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%British%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('OFM:35 mm', 'PFM:35 mm', 'USA', 'PFM:35 mm', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%PathÃ©%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('UK', 'PCS:Spherical', 'PCS:Spherical', 'Silent', 'Comedy')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Pictures%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Short', 'PCS:Spherical', 'Black and White', 'PCS:Spherical', 'English')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%MGM%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('English', 'English', 'USA', 'USA', 'English')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Home%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Comedy', 'PCS:Spherical', 'PCS:Spherical', 'Comedy', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%PathÃ©%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('Drama', 'Drama', 'Black and White', 'RAT:1.33 : 1', 'OFM:35 mm')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Home%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('USA', 'Mono', 'USA', 'PFM:35 mm', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(script supervisor)', '(co-producer)', '(co-producer)', '(production coordinator)', '(written by)')
AND cn.name LIKE '%Corporation%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IN ('Stereo', 'Short', 'PCS:Spherical', 'RAT:1.33 : 1', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IN ('Turkey:21 April 2000', '$1,162,182 (USA) (6 June 1999) (2,085 screens)', 'Family', 'Cayetana: Two suns cannot shine in the same sky.', 'RUR 14,905,835 (Russia) (11 December 2011) (318 screens)')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('saying-i-love-you', 'betrothal', 'holiday-home', 'japanese-music', 'reference-to-langston-hughes')
AND mi.info IN ('Drama', 'Mono', 'RAT:1.33 : 1', 'Drama', 'OFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(voice)', '(producer)', '(voice)', '(uncredited)')
AND cn.name LIKE '%American%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('bare-chested-male', 'family-relationships', 'dog', 'friendship', 'nudity')
AND mi.info IN ('Comedy', 'Comedy', 'Documentary', 'Documentary', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%British%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('OFM:35 mm', 'OFM:35 mm', 'OFM:35 mm', 'Drama', 'OFM:35 mm')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(co-producer)', '(co-executive producer)', '(voice: English version)', '(co-executive producer)', '(co-executive producer)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Color', 'USA', 'Color', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(co-producer)', '(producer)', '(production coordinator)', '(uncredited)', '(producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Drama', 'OFM:35 mm', '-', 'OFM:35 mm', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(producer)', '(producer)', '(uncredited)')
AND cn.name LIKE '%American%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Documentary', 'RAT:1.85 : 1', 'Dolby Digital', 'Documentary', 'Silent')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Board%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('Color', 'PCS:Spherical', 'Black and White', 'PCS:Spherical', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(written by)', '(co-producer)', '(production coordinator)', '(co-producer)', '(associate producer)')
AND cn.name LIKE '%YLE%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IN ('UK', 'Silent', 'PCS:Spherical', 'Documentary', 'Comedy')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(production assistant)', '(uncredited)', '(producer)', '(production assistant)')
AND cn.name LIKE '%System%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'non-fiction', 'dog', 'dog', 'father-daughter-relationship')
AND mi.info IN ('PCS:Spherical', '-', '-', 'RAT:1.33 : 1', 'Short')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND cn.name LIKE '%British%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PCS:Spherical', 'PCS:Spherical', 'Documentary', 'UK', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(production assistant)', '(executive producer)', '(executive producer)', '(producer)')
AND cn.name LIKE '%Universal%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('pet-dogs', 'ragtime', 'washington-quarter', 'ford-coupe', 'locked-in')
AND mi.info IN ('Black and White', 'Color', 'English', 'Drama', 'Color')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(script supervisor)', '(archive footage)', '(production assistant)', '(associate producer)', '(producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Comedy', 'PCS:Spherical', 'Documentary', 'Documentary', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(producer)', '(producer)')
AND cn.name LIKE '%ABS%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('revenge', 'friendship', 'family-relationships', 'love', 'bare-chested-male')
AND mi.info IN ('English', 'OFM:35 mm', 'USA', 'PFM:35 mm', 'RAT:1.33 : 1')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(director of photography)', '(utility technician)', '(uncredited)', '(stand-in: Madison Pettis)', '(accounting clerk: Halifax) (as Harry {Hy} Lindsay)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('RAT:1.33 : 1', 'PCS:Spherical', 'UK', 'Documentary', 'RAT:1.33 : 1')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%National%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Mono', 'Mono', 'Black and White', 'Drama', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('revenge', 'family-relationships', 'nudity', 'non-fiction', 'bare-chested-male')
AND mi.info IN ('UK', 'Comedy', 'PCS:Spherical', 'Silent', 'Documentary')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('revenge', 'blood', 'blood', 'surrealism', 'male-nudity')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(supervising producer)', '(co-executive producer)', '(screenplay)', '(co-executive producer)', '(location manager)')
AND cn.name LIKE '%National%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('bare-chested-male', 'police', 'tv-mini-series', 'husband-wife-relationship', 'husband-wife-relationship')
AND mi.info IN ('Drama', 'Black and White', 'Drama', 'Black and White', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('reference-to-the-sound-of-music-the-stage-musical', 'flatbed-editor', 'multiple-mix-up', 'reference-to-medusa', 'federal-wiretapping')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(creator)', '(archive footage)', '(uncredited)', '(production assistant)', '(archive footage)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IN ('OFM:35 mm', 'RAT:1.33 : 1', 'Drama', 'Mono', 'PFM:35 mm')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(co-producer)', '(executive producer)', '(archive footage)', '(writer)', '(executive producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('love', 'husband-wife-relationship', 'police', 'number-in-title', 'friendship')
AND mi.info IN ('Documentary', 'Comedy', 'UK', 'Comedy', 'Silent')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info IN ('Comedy', 'Documentary', 'Comedy', 'Silent', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Columbia%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IN ('PCS:Spherical', 'UK', 'Documentary', 'Comedy', 'Comedy')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%CBS%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('RAT:1.85 : 1', 'Silent', 'Documentary', 'RAT:1.85 : 1', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Drama', 'Mono', 'Mono', 'Drama', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Columbia%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('toy-train-set', 'dundee-scotland', 'cannon', 'twist-off-cap', 'lawn-sprinkler')
AND mi.info IN ('Color', 'Color', 'Color', 'UK', 'Stereo')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(creator)', '(location manager)', '(script supervisor)', '(archive footage)', '(screenplay)')
AND cn.name LIKE '%Pictures%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('blood-donation-center', 'broadcast-journalism', 'hoodoo', 'trumpet-player', 'reference-to-jeb-stuart')
AND mi.info IN ('UK', 'Comedy', 'PCS:Spherical', 'UK', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Universal%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('surrealism', 'death', 'surrealism', 'blood', 'non-fiction')
AND mi.info IN ('Stereo', 'UK', 'PCS:Spherical', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(credit only)', '(associate producer)', '(co-producer)', '(archive footage)', '(executive producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IN ('Documentary', 'Documentary', 'UK', 'UK', 'PCS:Spherical')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production coordinator)', '(associate producer)', '(production coordinator)', '(co-producer)', '(written by)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%CBS%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Silent', 'Documentary', 'Documentary', 'UK', 'Documentary')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%System%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IN ('Short', 'UK', 'UK', 'RAT:1.33 : 1', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",61,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi_idx) HashJoin(k mk mi_idx it2) NestLoop(k mk mi_idx it2 mi) NestLoop(k mk mi_idx it2 mi it1) NestLoop(k mk mi_idx it2 mi it1 ci) NestLoop(k mk mi_idx it2 mi it1 ci n) NestLoop(k mk mi_idx it2 mi it1 ci n t) NestLoop(k mk mi_idx it2 mi it1 ci n t mc) NestLoop(k mk mi_idx it2 mi it1 ci n t mc cn) Leading(((((((((((k mk) mi_idx) it2) mi) it1) ci) n) t) mc) cn)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(writer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%American%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%PathÃ©%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('English', 'Drama', 'English', 'RAT:1.33 : 1', 'Mono')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('USA', 'USA', 'English', 'English', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IN ('PCS:Spherical', 'UK', 'PCS:Spherical', 'PCS:Spherical', 'Documentary')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('bare-chested-male', 'oral-sex', 'non-fiction', 'surrealism', 'tv-mini-series')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Network%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('Comedy', 'Black and White', 'PCS:Spherical', 'PCS:Spherical', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(production coordinator)', '(associate producer)', '(production coordinator)', '(written by)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND mi.info IN ('Color', 'Color', 'USA', 'USA', 'Color')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%The%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('cardiac-arrest', 'rewire', 'accused-of-cheating', 'hidden-gold', 'robben-island-south-africa')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%General%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND mi.info IN ('USA', 'English', 'RAT:1.33 : 1', 'English', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Color', 'Color', 'USA', 'Color', 'Color')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(co-executive producer)', '(associate producer)', '(co-producer)', '(writer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('Stereo', 'Dolby Digital', 'Silent', 'RAT:1.85 : 1', 'Documentary')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PCS:Spherical', 'Silent', 'PCS:Spherical', 'UK', 'Documentary')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(writer)')
AND cn.name LIKE '%Paramount%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IN ('UK', 'Stereo', 'Black and White', 'PCS:Spherical', 'Black and White')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(archive footage)', '(archive footage)')
AND cn.name LIKE '%CBS%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PFM:35 mm', 'Black and White', 'Drama', 'OFM:35 mm', 'OFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Silent', 'UK', 'Silent', 'Comedy', 'Documentary')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(executive producer)', '(producer)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(producer)', '(voice)', '(uncredited)')
AND cn.name LIKE '%CBS%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IN ('Comedy', 'Comedy', 'UK', 'UK', 'UK')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('RAT:1.85 : 1', 'RAT:1.85 : 1', 'RAT:1.85 : 1', 'Stereo', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)', '(uncredited)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(uncredited)', '(production assistant)', '(voice)', '(uncredited)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('one-word-title', 'violence', 'friendship', 'revenge', 'based-on-play')
AND mi.info IN ('Black and White', 'Black and White', 'Drama', 'Drama', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IN ('Short', 'Documentary', 'RAT:1.33 : 1', 'Short', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(voice)', '(executive producer)', '(producer)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND mi.info IN ('Black and White', 'UK', 'Documentary', 'Documentary', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(producer)', '(production assistant)')
AND cn.name LIKE '%Fox%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'independent-film')
AND mi.info IN ('Short', 'PCS:Spherical', 'PCS:Spherical', 'Short', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(production assistant)', '(producer)', '(production assistant)', '(writer)')
AND cn.name LIKE '%General%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('violence', 'friendship', 'nudity', 'bare-breasts', 'revenge')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Silent', 'PCS:Spherical', 'Comedy', 'Comedy', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(voice)', '(production assistant)', '(writer)', '(uncredited)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sequel', 'revenge', 'revenge', 'sequel', 'friendship')
AND mi.info IN ('RAT:1.85 : 1', 'Dolby Digital', 'UK', 'Documentary', 'UK')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%CBS%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Drama', 'Drama', 'Drama', '-', 'OFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%American%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IN ('-', 'Short', 'Short', 'Comedy', 'Short')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IN ('USA', 'USA', 'Drama', 'USA', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PCS:Spherical', 'Short', 'Short', '-', 'Short')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%20th%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IN ('Comedy', 'PCS:Spherical', 'Comedy', 'PCS:Spherical', 'Documentary')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%National%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('PCS:Spherical', 'UK', 'PCS:Spherical', 'Comedy', 'Silent')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(production coordinator)', '(script supervisor)', '(co-producer)', '(written by)')
AND cn.name LIKE '%Sony%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('UK', 'Stereo', 'Dolby Digital', 'Documentary', 'RAT:1.85 : 1')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%ABC%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Black and White', 'UK', 'Documentary', 'Stereo', 'PCS:Spherical')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('PCS:Spherical', 'Documentary', 'Comedy', 'Comedy', 'UK')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(uncredited)', '(writer)', '(writer)')
AND cn.name LIKE '%Grande%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'Drama', 'English', 'Drama', 'Comedy')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production coordinator)', '(producer)', '(producer)', '(production coordinator)', '(co-producer)')
AND cn.name LIKE '%Corporation%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IN ('Drama', 'PFM:35 mm', 'Mono', 'Drama', 'RAT:1.33 : 1')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('-', 'OFM:35 mm', 'Drama', 'Drama', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('OFM:35 mm', 'Color', 'Color', 'English', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(uncredited)', '(producer)', '(producer)', '(writer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Black and White', 'Comedy', 'Black and White', 'PCS:Spherical', 'PCS:Spherical')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Home%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('murder', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IN ('Documentary', 'Documentary', 'Comedy', 'UK', 'Silent')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(production assistant)', '(voice)', '(voice)')
AND cn.name LIKE '%Entertainment%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(co-executive producer)', '(script supervisor)', '(director of photography)', '(director of photography)', '(screenplay)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Corporation%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('surrealism', 'love', 'nudity', 'non-fiction', 'male-nudity')
AND mi.info IN ('-', 'Drama', 'OFM:35 mm', '-', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.name LIKE '%Granada%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Black and White', 'PCS:Spherical', 'Comedy', 'PCS:Spherical', 'Black and White')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%Corporation%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('slob', 'replaying-action', 'circle-of-fire', 'gospel', 'dying-hair')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(producer)', '(uncredited)', '(producer)', '(producer)')
AND cn.name LIKE '%US%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('dog', 'revenge', 'blood', 'police', 'father-daughter-relationship')
AND mi.info IN ('Comedy', 'Documentary', 'Silent', 'UK', 'Silent')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production coordinator)', '(co-producer)', '(production coordinator)', '(archive footage)', '(creator)')
AND cn.name LIKE '%National%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('friendship', 'male-nudity', 'father-daughter-relationship', 'revenge', 'bare-breasts')
AND mi.info IN ('Mono', 'USA', 'USA', 'PFM:35 mm', 'OFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Black and White', 'Black and White', 'Black and White', 'Black and White', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(writer)', '(writer)')
AND cn.name LIKE '%The%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info IN ('Mono', 'Drama', 'Mono', 'Mono', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%American%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IN ('Short', 'Short', 'Short', 'Short', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(producer)', '(production assistant)', '(producer)', '(production assistant)')
AND cn.name LIKE '%BBC%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IN ('Film', 'Film', 'USA:Approved', 'Thriller', 'Crime')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Productions%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Drama', '-', '-', 'Drama', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('USA', 'English', 'USA', 'USA', 'Drama')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Film%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('UK', 'UK', 'RAT:1.33 : 1', 'Black and White', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(supervising producer)', '(director of photography)', '(screenplay)', '(archive footage)', '(script supervisor)')
AND cn.name LIKE '%Columbia%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('revenge', 'non-fiction', 'husband-wife-relationship', 'blood', 'love')
AND mi.info IN ('Comedy', 'PCS:Spherical', 'Comedy', 'Comedy', 'Comedy')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.name LIKE '%National%'
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Video%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('revenge', 'oral-sex', 'father-son-relationship', 'revenge', 'anal-sex')
AND mi.info IN ('USA', 'Comedy', 'USA', 'Color', 'Comedy')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(producer)', '(executive producer)', '(producer)', '(executive producer)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('Mono', 'Comedy', 'Mono', 'Comedy', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(executive producer)', '(producer)', '(executive producer)', '(production assistant)')
AND cn.name LIKE '%Columbia%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('men''s-restroom', 'reading-brail', 'woman-in-uniform', 'debut-novel', 'makeup-table')
AND mi.info IN ('RAT:1.33 : 1', 'RAT:1.33 : 1', 'Comedy', '-', 'Short')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(writer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND cn.name LIKE '%Video%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IN ('-', 'OFM:35 mm', '-', 'Drama', '-')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.name LIKE '%American%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(associate producer)', '(archive footage)', '(executive producer)', '(voice)', '(co-executive producer)')
AND cn.name LIKE '%Film%'
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('violence', 'love', 'love', 'oral-sex', 'friendship')
AND mi.info IN ('OFM:35 mm', 'Black and White', 'Drama', 'RAT:1.33 : 1', 'RAT:1.33 : 1')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.name LIKE '%Inc%'
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('bare-breasts', 'violence', 'family-relationships', 'blood', 'dog')
AND mi.info IN ('Drama', 'Black and White', 'Black and White', 'Black and White', 'Drama')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('Black and White', 'Drama', 'Mono', 'RAT:1.33 : 1', 'RAT:1.33 : 1')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%National%'
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('blood', 'bare-breasts', 'sequel', 'anal-sex', 'one-word-title')
AND mi.info IN ('OFM:35 mm', 'Color', 'Comedy', 'USA', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.name LIKE '%NBC%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('bare-chested-male', 'dog', 'death', 'violence', 'dog')
AND mi.info IN ('OFM:35 mm', 'USA', 'Mono', 'OFM:35 mm', 'PFM:35 mm')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('midlands', 'on-borrowed-time', 'newspaper-terror', 'getting-stoned', 'prison-training')
AND mi.info IN ('USA', 'USA', 'Comedy', 'PFM:35 mm', 'USA')
AND n.gender = 'm';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.name LIKE '%Company%'
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IN ('USA', 'USA', 'USA', 'USA', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(creator)', '(archive footage)', '(creator)', '(written by)', '(archive footage)')
AND cn.name LIKE '%Warner%'
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND mi.info IN ('Dolby Surround', 'USA:R', 'CLV', 'CLV', 'UK')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci,
    company_name AS cn,
    info_type AS it1,
    info_type AS it2,
    keyword AS k,
    movie_companies AS mc,
    movie_info AS mi,
    movie_info_idx AS mi_idx,
    movie_keyword AS mk,
    name AS n,
    title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND t.id = mc.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND ci.movie_id = mc.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi.movie_id = mc.movie_id
AND mi_idx.movie_id = mk.movie_id
AND mi_idx.movie_id = mc.movie_id
AND mk.movie_id = mc.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ci.note IN ('(production assistant)', '(producer)', '(producer)', '(producer)', '(uncredited)')
AND cn.name LIKE '%Broadcasting%'
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IN ('USA', 'USA', 'USA', 'English', 'USA')
AND n.gender = 'f';",110,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi movie_id_movie_info) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(it1 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi_idx) HashJoin(cn mc mi_idx it2) NestLoop(cn mc mi_idx it2 mk) NestLoop(cn mc mi_idx it2 mk k) NestLoop(cn mc mi_idx it2 mk k mi) NestLoop(cn mc mi_idx it2 mk k mi ci) NestLoop(cn mc mi_idx it2 mk k mi ci n) NestLoop(cn mc mi_idx it2 mk k mi ci n t) NestLoop(cn mc mi_idx it2 mk k mi ci n t it1) Leading(((((((((((cn mc) mi_idx) it2) mk) k) mi) ci) n) t) it1)) */
