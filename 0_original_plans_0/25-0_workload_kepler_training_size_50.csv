query,plan_id,plan_content
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(accounting clerk)', '(Torajiro''s sister)', '(as Pappu Polister)', '(as Yuko Ozeki)', '(Ganga''s bhabhi)')
AND it1.info = 'trivia'
AND it2.info = 'rating'
AND k.keyword IN ('explosion', 'self-publishing', 'history-makers', 'ant-hill', 'code-of-silence')
AND mi.info = 'The script was first written by ''Vincent Ngo'' (qv) in 1996 and it languished for close to 10 years. Later, the script was picked up and rewritten by ''Vince Gilligan'' (qv), to be directed by ''Jonathan Mostow'' (qv) for a 2007 release. Gilligan wrote the second draft when Sony picked up the script in early 2005.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as Jak)', '(as Tsutomu Teruki)', '(as Sofi Onore)', '(as Polly LePort)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('returning-character-killed-off', '9-11', 'tv-contest', 'genomic-imprinting', 'blocked-chimney')
AND mi.info = 'Colombia:27 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as Becky Saunders)', '(as Zophia Myaw)', '(as Craig Young)', '(as Andres Salmon)')
AND it1.info = 'trivia'
AND it2.info = 'votes'
AND k.keyword IN ('hippie', 'airplane-collision', 'tomb', 'sexual-predator', 'father-hates-son')
AND mi.info = 'Monty''s Rolls-Royce is a 1953 Silver Wraith Sedanca de Ville customised by Hooper coachbuilders for oil magnate Nubar Gulbenkian, who owned a variety of gaudily customised Rolls-Royces.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Cousin Jody)', '(segment ""pilot"")', '(technical intern)', '(as Matt Barrett)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'arkansas-delta', 'blood-on-bread', 'coral-sea', 'financial-advice')
AND mi.info = 'PCS:Spherical'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jack Randall)', '(as Zoe Mugford)', '(as Victor Parra)', '(as Matthew Radico)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('necklace', 'slack', 'sacco-and-vanzetti', 'pcw', 'wrapped-in-carpet')
AND mi.info = 'CONT: During the chase after the trade heist, Bane separates from his henchman and passes Batman on his left side; Batman turns to see him to his right side.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Dr. Kim Rossmo)', '(as Scott Putesky)', '(as Siddharth)', '(as Urs Villinger)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('national-guard', 'fishing-business', 'sturmabtellung', 'child''s-shoes', 'fear-of-lesbianism')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Ken Cope)', '(as Mikey Davis)', '(as J.A. Marcus)', '(Bougie nÂ°30)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('shaving', 'band-of-outcasts', 'skokie-illinois', 'last-show-in-series', 'blowhard')
AND mi.info = 'Canada:G'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(stand-in: Mr. Hoskins)', '(as Colleen Brenan)', '(as Max Boyer)', '(Another Burglar)', '(as Tracy Does It)')
AND it1.info = 'locations'
AND it2.info = 'votes distribution'
AND k.keyword IN ('cooking', 'hookworm', 'response', 'american-gothic', 'shirt-size')
AND mi.info = 'Dagenham, Essex, England, UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(cycling segment)', '(as Reben Moreno)', '(1971-1995)', '(as Lou Isreal)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('stock-exchange', 'bar-of-soap', 'gift-sword', 'prejudiced-father', 'stolen-cash')
AND mi.info = 'USA:16 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Ãdam MartÃ­n)', '(Dubai)', '(as Ann O''Neal)', '(segment ""Kruske"")')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sniper-rifle', 'french-instructor', 'sefarad', 'far-future', 'partly-subtitled')
AND mi.info = 'Hong Kong:IIA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as CaboSanRoque)', '(as David Lucas)', '(LUAR leader)', '(local guide: Cuba)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('tragic-villain', 'self-gratification', 'doughnut-ball', 'floatation', 'midnight-chimes')
AND mi.info = 'RAT:1.44 : 1'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(German commentary)', '(master armorer)', '(as Derick Dee)', '(as Rodrigo Ricio)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('shaving', 'cutting-tree', 'musical-act', 'food-critic', 'reference-to-plato')
AND mi.info = 'Thomas Wayne: Bruce, why do we fall?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(Jane''s father)', '(age 36-48)', '(yuppie)', '(as F. Taccetti)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('bare-chested-male', 'bedridden-father', 'bands', 'bicentennial', 'dane')
AND mi.info = 'Belgium:2011'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Star Townshend)', '(as Felice)', '(as A. Raskin)', '(as Kink Boy UK)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('secret-door', 'nissan', 'first-millennium', 'dextrocardia', 'standing-on-hands')
AND mi.info = 'John Daggett: What. The hell. Is going on?::Bane: Our plan is proceeding as expected.::John Daggett: Oh really? Do *I* look like I''m running Wayne Enterprises right now? Your hit, on the stock exchange, it didn''t work, my friend! And now you have my construction crews going around the city at 24 hours a day! How exactly is that supposed to help my company absorb Wayne''s?::Bane: [to Stryver] Leave us!::John Daggett: No! You stay here, I''m in charge!::Bane: [puts his hand on Daggett''s shoulder] Do you *feel* in charge?::[Stryver leaves]::John Daggett: I paid you a small fortune.::Bane: And this gives you *power* over me?::John Daggett: What is this?::Bane: Your money and infrastructure have been important... ''til now!::John Daggett: What are you?::Bane: I''m Gotham''s reckoning. Here to end the borrowed time you''ve all been living on!::John Daggett: You''re pure evil!::Bane: I''m *necessary* evil!::[breaks Daggett''s neck; Stryver flinches]'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Laumonier)', '(as DJ Polymorphic)', '(as Loles GarcÃ­a)', '(as Thuraya Masri)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'tape-player', 'snowed-in', 'forced-alliance', 'channel-tunnel')
AND mi.info = 'SYNC: When they take over the stock exchange, the bad guys enter the place shooting. It is noticeable that their machine guns are not shooting and yet we hear the noise and we see the ricochet of the bullets against the monitors in the ceiling.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(co-producer)', '(as Konica)', '(as Ester)', '(as Lacy Stewart)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('snow', 'rear-window', 'oversight', 'chemical-vat', 'second-angel')
AND mi.info = '[Two traders are getting their shoes shined]::Trader #2: You can''t short the stock because Bruce Wayne goes to a party.::Trader #1: Wayne coming back is change. Change is either good or bad. I pick bad.::Trader #2: On what basis?::Trader #1: I flipped a coin. [They leave, at which point the man shining their shoes reaches into his gym bag and pulls out a submachine gun]'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jo Dyce)', '(as Vic Kjellin)', '(as Bandit Haze)', '(as Jacq Wallage)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('white-tuxedo', 'stuffed-toy-shark', 'auto-theft-ring', 'lying-in-the-street', 'writing-a-novel')
AND mi.info = 'OFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(episode MÃ¥lbrott)', '(as Rex Hale)', '(as Tricia Mara)', '(as Kari Mattson)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('secret-door', 'pub-crawl', 'monster-of-florence', 'room', 'car-fender')
AND mi.info = 'Canada:14A'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Curt Vesperman)', '(as Alex Brake)', '(as Arcade Fire)', '(as Tony Holland)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('gang-member', 'cappuccino', 'superciliousness', 'solomon-islands', 'candy-kiss')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Lisa Ryall)', '(as Mitch Davies)', '(as Joe Baar)', '(as Soldan)', '(as Johnny Philips)')
AND it1.info = 'LD group genre'
AND it2.info = 'votes'
AND k.keyword IN ('photos', 'stuffing-turkey', 'hairstyling', 'learning-to-cook', 'black-lace-panties')
AND mi.info = 'Thriller'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(presenter)', '(as Titos Wandis)', '(as Cristi Black)', '(1st runner up)', '(as Lj. Gener)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('roast', 'valentine''s-card', 'posing-for-portrait', 'over-pressure', 'origin-of-hero')
AND mi.info = 'Iceland:L'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(help technician)', '(The Straight Boy)', '(as Ian Babilee)', '(as Kadigia Bove)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('orphan', 'night-doctor', 'vierzon-france', 'stars-at-home', 'western-airlines')
AND mi.info = 'Alfred: [about Selina Kyle] You two should exchange notes over coffee.::Bruce Wayne: So now you''re trying to set me up with a jewel thief?::Alfred: At this point, I''d set you up with a chimpanzee if it''d brought you back to the world!::Bruce Wayne: There''s nothing out there for me.::Alfred: And that''s the problem. You hung up your cape and your cowl, but you didn''t move on, you never went to find a life, to find someone...::Bruce Wayne: Alfred... I did find someone.::Alfred: I know, and you lost her. But that''s all part of living, sir. But you''re not living. You''re just waiting, hoping for things to go bad again.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as M. Vertinskaya)', '(as Mifuyu HÃ®ragi)', '(as Marlene Kos)', '(Her Classmate)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('warlord', 'selenium', 'recruiting-poster', 'cheaters', 'cya')
AND mi.info = 'USA:16 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(catholic adviser)', '(as Vera Friedberg)', '(as G.A. Semmler)', '(as Deseree)')
AND it1.info = 'LD certification'
AND it2.info = 'rating'
AND k.keyword IN ('destroying-property', 'body-blow', 'senator-mccarthy', 'handshake-goodby', 'jehovah''s-witness')
AND mi.info = 'R'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(as Rajesh Asthana)', '(as Valerie RÃ¡cz)', '(as Anjolie)', '(date producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('cigarette-smoking', 'church-elders', 'homemade-bomb', 'zeytuni-beirut', 'one-man-hamlet')
AND mi.info = 'Italy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Toni Hallaran)', '(as Lev Grossman)', '(as Tamara Jackson)', '(as Buddy Windrush)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('combat', 'set-designer', 'in-flight-magazine', 'sajuaro-cactus', 'invisible-children')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(as Jaap)', '(novel) (2000)', '(as Josie Xu)', '(as Dave Michener)')
AND it1.info = 'certificates'
AND it2.info = 'votes'
AND k.keyword IN ('gay', 'tahitian-costume', 'zero-gravity-sex', 'change-blindness', 'systems-analyst')
AND mi.info = 'UK:X'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant: New York) (as Dwayne A. Smith)', '(as Qu Ying)', '(as Carolyn Sand)', '(conception: video)', '(as Fuga)')
AND it1.info = 'LD disc size'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'spinal-surgery', 'unholy-resurrection', 'vatican-observatory', 'glasgow-scotland')
AND mi.info = '12'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as JÃºlio Verme)', '(as R.A. Walsh)', '(as Jay M. Boryea)', '(as C.J. Williams)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'guadalajara', 'sex-with-coworker', 'sightings', 'watch')
AND mi.info = 'RAT:1.37 : 1'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Andreas Haller)', '(as Anna Lauren)', '(as Katya Golubeva)', '(as Oscar Haffmans)')
AND it1.info = 'sound mix'
AND it2.info = 'votes distribution'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'scaring-dogs', 'aspiring-lawyer', 'song-dedication', 'art-forum-magazine')
AND mi.info = 'Mono'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(co-producer) (as Bill Brown)', '(as Yu.Vorobyov)', '(as Lionel Haft)', '(as Pavel Patriki)', '(as T. Meena)')
AND it1.info = 'trivia'
AND it2.info = 'rating'
AND k.keyword IN ('admiral', 'year-1565', 'eating-intestines', 'vampire-parents', 'confinement')
AND mi.info = 'The cast had camel-riding lessons during which they would have to ride the camel at full gallop for 90 minutes alongside a moving train.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(test: Experis)', '(as Mr. Bob)', '(via Skype)', '(as A. Boyajian)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'yucca-tree', 'imaginary-country', 'south-london', 'human-rights')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Lucinda)', '(as Katy Fisher)', '(as Vince Capone)', '(as Alex Jenkins)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('shaving', 'demetra', 'mutual-suspicion', 'south-jersey', 'monrovia')
AND mi.info = 'Georgia:26 July 2012'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Keisuke Ãtori)', '(as Ivan Katic)', '(as Gandhi)', '(as Gregg Lucas)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('necklace', 'skindiving', 'former-actor', 'morten', 'carioca')
AND mi.info = 'South Korea:15'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Kevin Graves)', '(as Allen Marlowe)', '(as Carrie Wallace)', '(as Jose VivÃ³)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('secret-door', 'mosaik', 'synarchy', 'curaÃ§ao', 'disabilities')
AND mi.info = 'Indonesia:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(as Jillian Yoccum)', '(as James Shaw)', '(as Jan Eckermann)', '(as Ewan Rochelle)')
AND it1.info = 'LD color information'
AND it2.info = 'rating'
AND k.keyword IN ('bare-breasts', 'chinese-refugee', 'special-care', 'bulimia', 'one-man-band')
AND mi.info = 'Color'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(pilot: London)', '(ADR loop group)', '(as Crystal Down)', '(episodes 8-10)')
AND it1.info = 'trivia'
AND it2.info = 'rating'
AND k.keyword IN ('escape-attempt', 'goth-girl', 'lamasery', 'victimology', 'teleconferencing')
AND mi.info = '''Billy Hayes (I)'' (qv) visited the Maltese filming locations during principal photography exactly two years to the date he had escaped. Hayes said: ""It was so true to life that I started to sweat. It was obvious to me that everyone concerned wanted to make a film that says something - and there''s a lot to be said . . . Hopefully, we can shake people up, and move them to do something for all those others who are still locked up in stinking hell-holes around the world"".'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Ken Terrill)', '(as Qin Ping)', '(as Mohamedali)', '(segment ""Privat"")')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('dead-man', 'remake-of-series', 'paper-bag', 'face-cut-off', 'addiction-group')
AND mi.info = 'Thriller'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(as Sarah Sit)', '(as Inma de Santy)', '(as Damien Wayans)', '(as Michael Duncan)')
AND it1.info = 'LD analog left'
AND it2.info = 'votes distribution'
AND k.keyword IN ('freeze-frame', 'mama-sunshine', 'village-elder', 'wild-hunt', 'selling-one''s-blood')
AND mi.info = 'Mono'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(signing)', '(as Carmen Jay)', '(action sequences)', '(as Engelbert)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('sawed-off-shotgun', 'manhood', 'plea-for-protection', 'playing-i-spy', 'pupilless-eyes')
AND mi.info = 'Netherlands:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as Elena Moddalo)', '(2003-2004)', '(as Rolf Lefeuvre)', '(as Emma Caesari)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('stabbed-in-the-chest', 'clara-cluck', 'man-in-gorilla-suit', 'erotic-cake', 'paint-rock-texas')
AND mi.info = 'Finland:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Shadab Khan)', '(as Steve Blonder)', '(as Daniel Clough)', '(segment 6)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('death-of-mother', 'ancient-korea', 'super-earth', 'living-in-fear', 'cerebral-cortex')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as A. Kravchenko)', '(as Mr. Potent)', '(as Kay Elhardt)', '(as Ans v.d. Molen)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sawed-off-shotgun', 'male-nudity', 'ming-dynasty', 'last-minite-escape', 'foibles-of-marriage')
AND mi.info = 'CAM:Panavision Panaflex Millennium XL2, Panavision C-, E-Series and Super High Speed Lenses'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as Gerard Acao)', '(as Venceslao Vich)', '(story designer)', '(as Assorti)')
AND it1.info = 'budget'
AND it2.info = 'rating'
AND k.keyword IN ('ritual', 'whining-woman', 'mini-submarine', 'holed-up-in-shack', 'based-on-dream')
AND mi.info = '$3,000,000'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Natalie Raper)', '(GeneviÃ¨ve)', '(as Bert Cayayan)', '(super looping)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('combat', 'escape-in-a-boat', 'gym-shorts', 'mechanical-cat', 'evil-god')
AND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (uncredited)', '(as Marcus Redmond)', '(1957-????)', '(as Yuz Merza)', '(as Marco Riaskoff)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('amateur-radio', 'safety-belt', 'lactose-intolerance', 'private-army', 'ukelele-player')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Zack Ryan)', '(as Lars Block)', '(as Chun-yu Ng)', '(as Mark Winter)')
AND it1.info = 'certificates'
AND it2.info = 'votes'
AND k.keyword IN ('swat', 'androgynous-male', 'psalm', 'e-meter', 'girls''-bathroom')
AND mi.info = 'Brazil:12'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Alfredo Murfe)', '(as Pal Makray)', '(as Ambika Travis)', '(as Sepp Nermuth)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('swat', 'prison-ministry', 'chinese-slur', 'eating-evidence', 'feeding-tube')
AND mi.info = 'LAB:Technicolor, Hollywood (CA), USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as JÃ¼rgen TÃ¶gel)', '(as Clara Greet)', '(La serveuse)', '(as Jenifer)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('police-station', 'buckboard-driver', 'achilles-tendon-cut', 'commentator', 'west-hollywood')
AND mi.info = 'Serbia:26 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Milton Ingley)', '(as Geoffe George)', '(as Laura Lavarnie)', '(as D. Simone)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('secret-door', 'prague', 'pleading-guilty', 'whistling-sound', 'huckster')
AND mi.info = 'Hooded Man #2: Have we started the fire?::Bane: Yes. The fire rises.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Alex) (as Aika)', '(as Nino Batista)', '(as Viktor SchefÃ©)', '(as Monique Perry)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('sniper-rifle', 'blood-sample', 'big-wooden-spoon', 'move', 'cultural-change')
AND mi.info = 'John Blake: When I spotted you, I was looking for a friend of mine, Bruce Wayne. Did they kill him?::Selina Kyle: I''m not sure.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(Natasina majka)', '(play ""Totentanz"")', '(as V. Mikhailov)', '(show-window)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('stock-exchange', 'slipping-on-blood', 'organelle', 'income-tax-evasion', 'indigo-children')
AND mi.info = 'Bolivia:26 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant production coordinator)', '(as Matthew Jared)', '(as Nadereh)', '(medical examiner)', '(as Brooke Hoyt)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('fight', 'agouti', 'fishing-lure', 'tv-head', 'plastic-utensil')
AND mi.info = 'Germany'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alesa B. Gantz)', '(as Jamar)', '(as Birthe Newmann)', '(as Clotilde De)', '(as Ward Williams)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('church', 'tool-kit', 'order-of-execution', 'chopsticks-the-song', 'corregio-madonna')
AND mi.info = 'Hungary:21 June 2010'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as Flavie Ducores)', '(as Sabrena Dawn)', '(as Sue Lentini)', '(as Kay Foster)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('fight', 'dances-with-wolves', 'scrap-yard', 'film-maudit', 'chicory')
AND mi.info = 'Withnail: [fondling the money Monty has given them to buy wellingtons] I think a drink, don''t you?::Marwood: What about the wellingtons?::Withnail: Oh, bollocks to the wellingtons. We''ll tell him they had a farmers conference and had a run on them.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(in-game music)', '(as Jerry Okuneff)', '(as Chris Bunworth)', '(story ""Barkhany"")')
AND it1.info = 'LD catalog number'
AND it2.info = 'rating'
AND k.keyword IN ('boyfriend-girlfriend-relationship', 'public-execution', 'futurism', 'mini-dv', 'dying-daughter')
AND mi.info = 'VLD 3275'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(in ''Funny Girl'')', '(as Mery)', '(as Jan & RenÃ©)', '(as Dave Castillo)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('pistol-whip', 'lecture-hall', 'arrival', 'photo-montage', 'foot-on-crotch')
AND mi.info = 'Israel:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(as Leonhard Mader)', '(as Anne Yee)', '(rival gangleader)', '(as Eduardo Tilve)')
AND it1.info = 'LD disc format'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-distorted-reality', 'love-thwarted', 'rotary-club', 'uranium-238', 'shared-grave')
AND mi.info = 'CLV'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Bo Wideberg)', '(as Bill Reilly)', '(as Peikoff)', '(as Bart Gunn)')
AND it1.info = 'plot'
AND it2.info = 'votes'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'brandon-california', 'letter-to-god', 'shop-teacher', 'nigerian-music')
AND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy protÃ©gÃ© from his television show and billed above the title and first billed in the cast as Laurie (""I-like-the-wide-open-spaces"") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in ""McLintock."" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his ""Screen Snapshots"" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(stand-in: Japan)', '(as Jean Tatum)', '(as Yvan Heylen)', '(Miss March 1986)')
AND it1.info = 'LD video standard'
AND it2.info = 'votes distribution'
AND k.keyword IN ('boyfriend-girlfriend-relationship', 'bergdorf-goodman''s', 'archaeopteryx', 'sucking-on-ear', 'spider''s-milk')
AND mi.info = 'NTSC'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Jefferson Airplane)', '(as Dr. Vera Rubin)', '(Keyboardist)', '(as M. Doro)', '(as Lajos D.)')
AND it1.info = 'gross'
AND it2.info = 'votes distribution'
AND k.keyword IN ('end-of-an-era', 'armenian-terrorism', 'little-black-dress', 'schools', 'model-agent')
AND mi.info = '$119,759 (USA) (3 September 2000)'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as JP Hubbell)', '(as Jessica Paul)', '(Eddie)', '(as Joan La Duca)')
AND it1.info = 'certificates'
AND it2.info = 'votes'
AND k.keyword IN ('title-at-the-end', 'oklahoma-city', 'toy-van', 'make-it-rain', 'karantina-massacre')
AND mi.info = 'Sweden:15'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Frank Apitz)', '(as Michael Nyilas)', '(as Elizabeth Drew)', '(as Red Schwartz)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('police-officer-killed', 'inability-to-drive', 'embracing-future', 'afro', 'stuffed-pheasant')
AND mi.info = 'John Blake: [to Bruce Wayne] I don''t know why you took the fall for Dent''s murder, but I''m still a believer in the Batman.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (uncredited)', '(as Carol Walker)', '(as Hanna Hunter)', '(as Sammy Lee)', '(as Vladka ErbovÃ¡)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('amateur-radio', 'trick-or-treat', 'chorus-girl', 'police-massacre', 'weekend-pass')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Bartek Kita)', '(cook) (uncredited)', '(as Cecily Wiggins)', '(as Aletha Orr)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('secret-door', 'serpent', 'school-bus-safety', 'arbeitslager', 'comedy-of-errors')
AND mi.info = 'FAKE: During the stadium scene in Gotham City, at one point a logo reading ""UPMC"" (University of Pittsburgh Medical Center) is clearly visible next to Bane''s head.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Alan Deloin)', '(as Rupert Seidl)', '(as Tony Wong)', '(as Berek Kati)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('necklace', 'cattle-mustering', 'landscape-art', 'naive-boy', 'road-closed')
AND mi.info = 'Malaysia:19 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Paul Smith)', '(as Thanos Loukas)', '(as Sanders)', '(road manager)', '(as Gitti & Erika)')
AND it1.info = 'trivia'
AND it2.info = 'votes'
AND k.keyword IN ('cruelty', 'opthalmologist', 'topical-humor', 'direct-cinema', '60-a.d.')
AND mi.info = 'In 2004, screen-writer ''Oliver Stone (I)'' (qv) apologized for the portrayal of Turkey, Turkish prisons and the Turkish people in the movie.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Mary B. Keller)', '(Dadiji)', '(as Joe Thompson)', '(adr)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sawed-off-shotgun', 'nofx', 'anonymous-charity', 'rigged-casino', 'platinum-island')
AND mi.info = 'Hong Kong:IIA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Jee Yun Lee)', '(as Nicky Barrat)', '(as German Rojas)', '(senior armorer)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('orphan', 'framed-butterfly', 'cast-iron', 'foley-alabama', 'dojang')
AND mi.info = 'CONT: When Catwoman shoots the cars blocking the tunnel, she beforehand puts on her glasses. In the next shot, she doesn''t have her glasses on, just the mask.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(as Vlada i Bajka)', '(as Sam Delilo)', '(gorilla)', '(as Joseph Conlon)')
AND it1.info = 'LD category'
AND it2.info = 'votes'
AND k.keyword IN ('woman-with-glasses', 'lightwave', 'back-stairway', 'biting-crotch', 'market-populism')
AND mi.info = 'Movie'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Dave Savage)', '(as Charo Lopez)', '(retail sales)', '(as Joe Virgel)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('orphan', 'unrealistic', 'clipboard', 'bicycle-chain', 'awaiting-a-messiah')
AND mi.info = 'OFM:65 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Tom Larson)', '(as Hans Sturm)', '(as Tan En-mei)', '(medical equipment)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('grandmother', 'moaning-gown', 'live-in-girlfriend', 'revenge-on-bully', 'atomic-bomb-victim')
AND mi.info = 'Julien: Cursed be he who puts an obstacle in the path of a blind man.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as K@rl Pfeifer)', '(as Mary Ryan)', '(artist producer)', '(as Ben Padero)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('orphan', 'manhattan-ice-tea', 'carbon', 'hearing-impairment', '8-perspectives')
AND mi.info = 'FAIR: In ""Batman Begins"" Lucius Fox says about the Batsuit: ""This sucker will stop a knife."" In ""The Dark Knight Rises"", Batman gets stabbed. However, in ""The Dark Knight"", Fox gives Batman a new suit that makes him more agile but also ""more vulnerable to knives and gunfire"". If Batman kept his old suit, it''s likely that the knife would''ve been less effective.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as NaOnka Mixon)', '(as Vic Bandera)', '(as Zita Bernstein)', '(as Steve Turner)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('honor', 'hit-with-a-crowbar', 'quebec-nationalism', 'purple-ribbon', 'barbecue-pit')
AND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Xavi Figuerola)', '(as I.Yazvinskaya)', '(Potential Victim)', '(as William Hicks)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('police-officer-killed', 'sex-tourism', 'mechanical-heart', 'asp', 'central-africa')
AND mi.info = 'Norway:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(EFP/JIB operator)', '(as Graicy O''Hara)', '(contract officer)', '(as Ivo GÃ¼bel)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('police-officer-killed', 'year-10991', 'zlotys', 'stick-fighting', 'american-nazi-party')
AND mi.info = 'Australia:19 July 2012'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(director of photography)', '(as Rob Kenneally)', '(as Candy Mobley)', '(as Albert Dagnan)', '(as Wm. Dyer)')
AND it1.info = 'locations'
AND it2.info = 'votes'
AND k.keyword IN ('cocaine', 'aloof', 'frankenstein', 'trigger-sports', 'moe-hare')
AND mi.info = 'Valencia, California, USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Maeve Dermody)', '(as Dr. Tony Kim)', '(as Thomas Happer)', '(as RenÃ© Ojeda)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('theft', 'language-course', 'prime-suspect', 'techno', 'new-canaan')
AND mi.info = 'UK:18 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as @DannyZuker)', '(Canadian PM, 1939)', '(1981) (as Brienne)', '(as David OcaÃ±as)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('machine-gun-nest', 'savage', 'greek-christian', 'security-police', 'opportunism')
AND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Matt Nagrete)', '(as Eddie Gregory)', '(as Dayal)', '(as James Rolfe)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('robbery', 'abrupt-ending', 'palm-oil', 'austria-history', 'secret-exposed')
AND mi.info = 'PCS:Spherical'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(as Jordi Gigo)', '(as Gisele Ingrid)', '(as Edward Faietta)', '(segment ""Camote"")')
AND it1.info = 'LD number'
AND it2.info = 'votes distribution'
AND k.keyword IN ('digging-through-a-prison-wall', 'weak-king', 'everglades', 'centre-county', 'magic-versus-will')
AND mi.info = '2904'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant) (uncredited)', '(stereotypical Jew)', '(as Nikki Swasey)', '(as Mrs. Clarke)', '(as Bob Oram)')
AND it1.info = 'weekend gross'
AND it2.info = 'votes distribution'
AND k.keyword IN ('tgv', 'bikini-model', 'attacked-by-a-dog', 'dullahan', 'commencement-speech')
AND mi.info = '$6,338 (USA) (4 September 2005) (3 screens)'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Thomas Kuhn)', '(as Sharon Jones)', '(as M. Henry)', '(as Karl Arana)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('shot-to-death', 'grogeous', 'cartoon-cheetah', 'exploding-truck', 'birkenhead-england')
AND mi.info = 'Alfred: I''ll get this to Mr. Fox, but no more. I''ve sewn you up, I''ve set your bones, but I won''t bury you. I''ve buried enough members of the Wayne family.::Bruce Wayne: You''ll leave me?::Alfred: You see only one end to your journey. Leaving is all I have to make you understand, you''re not Batman anymore. You have to find another way. You used to talk about finishing a life beyond that awful cape.::Bruce Wayne: Rachel died believing that we would be together; that was my life beyond the cape. I can''t just move on. She didn''t, she couldn''t.::Alfred: What if she had? What if, before she died, she wrote a letter saying she chose Harvey Dent over you? And what if, to spare your pain, I burnt that letter?::Bruce Wayne: How dare you use Rachel to try to stop me?::Alfred: I am using the truth, Master Wayne. Maybe it''s time we all stop trying to outsmart the truth and let it have its day. I''m sorry.::Bruce Wayne: You''re sorry? You expect to destroy my world and then think we''re going to shake hands?::Alfred: No... no, I know what this means.::Bruce Wayne: What does it mean?::Alfred: It means your hatred... and it also means losing someone that I have cared for since I first heard his cries echo through this house. But it might also mean saving your life. And that is more important.::Bruce Wayne: Goodbye, Alfred.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant)', '(as E. Vlasenko)', '(as Edi Saito)', '(6 episodes 1993)', '(aide de camp)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('orphan', 'drunken-doctor', 'teddy-corset', 'epcot-center', 'negro-life')
AND mi.info = 'Thailand:19 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(Metzger-Gehilfe)', '(as Nikki Nieves)', '(as Vanna)', '(as A. Veksler)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('apple', 'renal-dysfunction', 'minister-of-culture', 'slicing', 'protective-helmet')
AND mi.info = 'USA:22 September 1939'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Deisy)', '(Mun-ho''s wife)', '(as Space)', '(as Jessie Vega)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('title-at-the-end', 'drug-paraphanalia', 'tin-cup', 'mysterious-object', 'window-blow-open')
AND mi.info = 'FAKE: When Batman saves Blake from the ambush by Christopher Judge''s character, he fights the henchmen. The guy to the very left never even encounters him yet is flown backwards and falls down as if he was attacked by Batman.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jesse Dunn)', '(as Daniel Brucker)', '(as Wolf)', '(as Hsiao Ying-Chi)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('sawed-off-shotgun', 'glass-painting', 'green-tights', 'midnight-launch', 'elvira')
AND mi.info = 'Ra''s al Ghul: You, yourself fought the decadence of Gotham for years with all your strength, all your resources, all your moral authority and the only victory you achieved was a lie. Now you understand Gotham is beyond saving and must be allowed to die.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(story ""DÃ¼kkanci"")', '(as Francis Dumond)', '(as Sandy Crisp)', '(as Pete Aromando)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('fight', 'legend-of-ostara', 'post-rock', 'ketchup-for-blood', 'media-frenzy')
AND mi.info = 'Hungary:21 May 2011'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Igor Sk)', '(as Guli Korolyova)', '(as Ona)', '(as Daz)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('title-at-the-end', 'camera-man', 'pagan-subtext', 'georgia-state-flag', 'draft-dodger')
AND mi.info = 'CAM:Arriflex 235, Panavision C-, E-Series and Super High Speed Lenses'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Donal Ward)', '(as Ãrbol)', '(as Pete Gas)', '(as Flesh Andrea)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'meany-miny-and-moe', 'woman''s-birthday', 'athlete', 'radio-telescope')
AND mi.info = 'PCS:Spherical'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(Chain)', '(as Sophie O)', '(as Leon Dobrinski)', '(as Michaela V.)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('stabbed-in-the-chest', 'little-champ', 'death-wail', 'recuperation', 'jivaro')
AND mi.info = 'Hooded Man #2: Have we started the fire?::Bane: Yes. The fire rises.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jan Caruna)', '(as Dr. Ted Selker)', '(V.J.)', '(Age 8-9)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('machine-gun-nest', 'keyboard-player', 'rolling-downhill', 'road-accident', '1985')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Sean Tate)', '(as Tomiko Ly)', '(Juicy''s Mother)', '(as Esther)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('pistol-whip', 'mud-people', 'plastikman', 'nauvoo-illinois', 'silhouettes')
AND mi.info = 'Australia:M'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(as Gao Shan)', '(home)', '(as Sampo)', '(as John Sandford)')
AND it1.info = 'trivia'
AND it2.info = 'votes'
AND k.keyword IN ('american-consulate', 'suburbs', 'flank-speed', 'papist', 'cookery')
AND mi.info = 'Billy Hayes'' speech in the courtroom scene in the film went longer than it did in real life. In it, Billy gives a long soliloquy against the Turkish penal system and according to Hayes, said everything he wish he had said in the dock.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Jefferson Airplane)', '(as Kandaswami)', '(as Mark Labett)', '(as A-Teens)', '(as Tom Hunter)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('performance', 'dance-performance', 'virtual-fantasy', 'japanese-government', 'chatsworth-england')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Pater Staub)', '(video taper)', '(as Alex Welch)', '(as Davin Carey)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'automaker', 'smelling-salts', 'bowling-arcade-game', 'reconstruction-era')
AND mi.info = '[Two traders are getting their shoes shined]::Trader #2: You can''t short the stock because Bruce Wayne goes to a party.::Trader #1: Wayne coming back is change. Change is either good or bad. I pick bad.::Trader #2: On what basis?::Trader #1: I flipped a coin. [They leave, at which point the man shining their shoes reaches into his gym bag and pulls out a submachine gun]'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Matolay GÃ©za)', '(as J.F. Otto)', '(as Bob Mora)', '(as Parkyakarkus)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('sawed-off-shotgun', 'power-shutdown', 'upper-egypt', 'diocese', 'training-a-bird')
AND mi.info = 'Hong Kong:19 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant)', '(as Garlin Green)', '(as Susan HÃ¶cke)', '(as Julian Dower)', '(as Andy Milonokis)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('theft', 'series-of-accidents', 'high-crime', 'castration-threat', 'self-education')
AND mi.info = 'Morocco:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Sue Matthews)', '(as Volodya Shvets)', '(as Shao-hsiang Li)', '(as Keie Deei)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('pearl-harbor', 'present-indicative', 'boiling-flask', 'scattering-ashes', 'drink-me')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as D. Kasymov)', '(as K. H. WÃ¼pper)', '(as Mad. Geoffroy)', '(trailer director)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('indian-chief', 'installation-art', 'car-floating-away', 'endoscopy', 'gift-wrapped-box')
AND mi.info = 'Chief Whitedeer: [looking at the new division arm patch] Thunderbird, bringer of rain. It is new. Why you change it?::Cpl. Ralph Mogay: I have the old one. [close-up of Mogay holding the old swastika patch the division had used before] Hitler took our sign.::Chief Whitedeer: Hitler? Oh, the crazy man. You take it back, son.::Cpl. Ralph Mogay: Maybe we will, soon.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(Russian dialogue)', '(as Bob Sola)', '(as Dai Ngyuyen)', '(music consultant)')
AND it1.info = 'plot'
AND it2.info = 'votes distribution'
AND k.keyword IN ('stagecoach', 'gothic-cathedral', 'six-stories', 'hunting-accident', 'gooseberry-bush')
AND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy protÃ©gÃ© from his television show and billed above the title and first billed in the cast as Laurie (""I-like-the-wide-open-spaces"") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in ""McLintock."" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his ""Screen Snapshots"" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Saliva)', '(as Lino Furlai)', '(as F.A. Kelsey)', '(Red Lamp House)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('shotgun', 'late-night', 'red-maple-leaf', 'yerevan', 'airplane-accident')
AND mi.info = '[Bane''s men announce their entry into the stock exchange, as the food delivery man shoots down a trader, while the shoeshiner and janitor fire their guns into the trading screen. As the screens shut off, Bane comes in and walks over to one trader]::Trader #1: This is a stock exchange! There''s no money you can steal!::Bane: Really? Then why are you people here? [Bane drags the trader by his tie across the floor to a computer terminal, slams his head against the table, and uses his security card to log-in and start the application on the shoeshiner''s laptop]'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(novel)', '(as Alana Hamilton)', '(as Shakil Khan)', '(quick draw expert)', '(as Philip Oxman)')
AND it1.info = 'goofs'
AND it2.info = 'votes'
AND k.keyword IN ('shot-to-death', 'politics', 'russian-dragoon', 'boiling-a-recording', 'sprint-distance')
AND mi.info = 'CONT: Brant is driving a Mercedes 560SEC Coupe. Near the end of the movie he is being followed by ""Blitz"" away from a funeral when his stock (period) 15-inch wheels suddenly become modern 19-inch shiny rims.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Marisol Giro)', '(1992-1996)', '(novel ""By Jiminy"")', '(1930-1933)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('reference-to-mussolini', 'group-dynamics', 'siege-ramp', 'zypora', 'ale')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as D. Bortnyansky)', '(as Blue Lagoon)', '(as Esha)', '(as Greg Southard)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('night-cityscape', 'animated-dog', 'limit', 'adbusters', 'it-girl')
AND mi.info = 'Lucius Fox: It has a long uninteresting name. I just took to calling it... The Bat, and yes, Mr. Wayne, it does come in black.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(novel)', '(as Jose Biggel)', '(as Dan Kay)', '(as Kamla Kant)', '(stage planner)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('train-depot', 'sword-master', 'repressed-violence', 'porno-awards-show', 'hostile-workplace')
AND mi.info = 'CONT: In the final scene when Brant shoots ""The Blitz"", Brant is holding a revolver in close up and lowers his arm after he fires. When the camera changes to a long shot a few seconds later, Brant is holding the Sig Sauer and his arm is raised as it was before.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Marylyn Ross)', '(as Kandee Licks)', '(as Lucien John)', '(as Jeffrey Ong)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('thief', 'japanese-shocker', 'immigrant', 'hand-drawn', 'yell')
AND mi.info = 'Trinidad and Tobago:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Chester Sims)', '(as J. Nermut)', '(as Lazar)', '(as GyÃµry Emil)')
AND it1.info = 'plot'
AND it2.info = 'rating'
AND k.keyword IN ('gang-member', 'health-farm', 'resistor', 'art-contest', 'wall-safe')
AND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy protÃ©gÃ© from his television show and billed above the title and first billed in the cast as Laurie (""I-like-the-wide-open-spaces"") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in ""McLintock."" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his ""Screen Snapshots"" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant: Houston)', '(as MÃ¡ria IllyÃ©s)', '(as Cheabow)', '(as Indera Bansal)', '(as Bernard Purdie)')
AND it1.info = 'LD master format'
AND it2.info = 'votes'
AND k.keyword IN ('post-college', 'prison-discharge', 'nylon-fetish', 'torrevieja-spain', 'blown-cover')
AND mi.info = 'Film'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(craft service)', '(as Jin Tha MC)', '(as Brian McGugan)', '(play script)', '(Joao)')
AND it1.info = 'locations'
AND it2.info = 'rating'
AND k.keyword IN ('freight-train', 'carriage-horse', 'russian-politician', 'voting-by-phone', 'urban-fable')
AND mi.info = 'Santa Monica Promenade, Santa Monica, California, USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(as Will Paterson)', '(druid wrangler)', '(as Robert Walters)', '(as gyom h.)')
AND it1.info = 'LD quality program'
AND it2.info = 'votes distribution'
AND k.keyword IN ('dying', 'screen-montage', 'conservative', 'parricide', 'mayan-hieroglyph')
AND mi.info = '-'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jeff Abramson)', '(as Abti AlgÃ¼l)', '(from Otoko Oidon)', '(as Karen Chan)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('amphibious-landing', 'stagedoor-manor', 'windrush', 'foreign-born-indian', 'kids-playing')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Roberto Chapu)', '(as Jan Dean)', '(8mm transfer)', '(as Anna Ortiz)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('death-of-mother', 'grenade-launcher', 'television-series', 'minuteman-missle', 'traveling-circus')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(Special Features)', '(as Ricardo Wiley)', '(as Tali Cochrane)', '(novel ""Yllet"")')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('pistol-whip', 'holy-land-crusades', 'vacationer', 'lerida-spain', 'bleeding-from-eyes')
AND mi.info = 'South Korea:15'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jan and Dean)', '(as Radheyshyam)', '(book) (as Tiitus)', '(as Korina H.)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hero', 'tree-of-knowledge', 'fictional-place', 'leaky-apartment', 'learning-english')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(director: finance)', '(as Michael Thomas)', '(producer: imaging)', '(as Max Kesmodel)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('stagecoach', 'inquisition', 'pilcopata-peru', 'young-woman', 'tree-falls-on-house')
AND mi.info = 'PCS:Spherical'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set intern)', '(as Neil Barry)', '(as Nature)', '(as Boris Levin)', '(as Carl Galan)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('nudity', 'mechanical-arm', 'spiral', 'farm', 'circus-strongman')
AND mi.info = 'Drama'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Mr. Barrington)', '(as Tso Kin)', '(as Michael O''Day)', '(with acid)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('orphan', 'indiana', 'anglo-american', 'son-of-a-king', 'jiggaboo')
AND mi.info = 'FAKE: The seasons throughout the film are portrayed inconsistently even with the passage of time. This is evidenced via leaf foliage shown inconsistently throughout the film. For example, during the ""winter"" scenes on the isolated Gotham, many streets have a dusting of ""snow"" only to have trees with green leaves visible a block away.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Pam Miras)', '(Captain - LSE)', '(as Bill Childers)', '(talent travel)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('swat', 'seaside', 'animal-cake', 'locked-in-a-car', 'heavy-sleeper')
AND mi.info = 'Finland:K-12'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(craft service)', '(as Shannah Betz)', '(as A. Panova)', '(piano/organ)', '(as Ant Neate)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('wine', 'mind-over-matter', 'peach-cobbler', 'general-strike', 'blue-dress')
AND mi.info = 'Israel:30 July 1998'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Raja Avasthi)', '(as Toni Leicester)', '(The Witches)', '(as A. Krmela)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('pistol-whip', 'artillery', 'thrown-out-of-class', 'cutting-toe-nails', 'licks')
AND mi.info = 'Israel:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Elena Moseva)', '(as Roger Boren)', '(as Tim Waddel)', '(as Bill Pettigrew)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('necklace', 'girl-mouse', 'friendship-gone-bad', 'church-bishop', 'photographic-memory')
AND mi.info = 'Alfred: I''ll get this to Mr. Fox, but no more. I''ve sewn you up, I''ve set your bones, but I won''t bury you. I''ve buried enough members of the Wayne family.::Bruce Wayne: You''ll leave me?::Alfred: You see only one end to your journey. Leaving is all I have to make you understand, you''re not Batman anymore. You have to find another way. You used to talk about finishing a life beyond that awful cape.::Bruce Wayne: Rachel died believing that we would be together; that was my life beyond the cape. I can''t just move on. She didn''t, she couldn''t.::Alfred: What if she had? What if, before she died, she wrote a letter saying she chose Harvey Dent over you? And what if, to spare your pain, I burnt that letter?::Bruce Wayne: How dare you use Rachel to try to stop me?::Alfred: I am using the truth, Master Wayne. Maybe it''s time we all stop trying to outsmart the truth and let it have its day. I''m sorry.::Bruce Wayne: You''re sorry? You expect to destroy my world and then think we''re going to shake hands?::Alfred: No... no, I know what this means.::Bruce Wayne: What does it mean?::Alfred: It means your hatred... and it also means losing someone that I have cared for since I first heard his cries echo through this house. But it might also mean saving your life. And that is more important.::Bruce Wayne: Goodbye, Alfred.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as Riccardo Tarci)', '(as Elena Buhaci)', '(as Stevo Jocz)', '(2010-)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('tribute', 'selling-tv', 'gay-action-hero', 'fire-plough', 'mgm-promotional')
AND mi.info = 'Singapore:19 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Gordon Kee)', '(as Larin Raker)', '(as Nathan Bosckay)', '(as GorÃ´ Kataoka)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('stabbed-in-the-chest', 'flower-wreaf', 'black-eye-patch', 'alien-predator', 'exchange-rate')
AND mi.info = 'CONT: When Catwoman shoots the cars blocking the tunnel, she beforehand puts on her glasses. In the next shot, she doesn''t have her glasses on, just the mask.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Koyama Noriko)', '(1976) (uncredited)', '(as Kane)', '(as Shush)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('secret-door', 'marine-biology', 'grande-dame-guignol', 'guerilla-base', 'house-on-stilts')
AND mi.info = 'Catwoman: You could have gone anywhere, but you came back.::Batman: So did you.::Catwoman: Well then I guess we''re both suckers.::[she kisses him]'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location manager) (uncredited)', '(as Adrizonu)', '(as Rona Johnstone)', '(as Pedro Antonio)', '(as Onjulic)')
AND it1.info = 'printed media reviews'
AND it2.info = 'votes distribution'
AND k.keyword IN ('tanker', 'pathologist', 'camp-kill-yourself', 'travel-alarm-clock', 'illustration-model')
AND mi.info = 'Gerle, JÃ¶rg. ""28 Days Later"". In: ""film dienst"" (Germany), Vol. 56, Iss. 12, 3 June 2003, Pg. 33'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Kim Spies)', '(as David Morse)', '(dubbing voice)', '(as Eric J. Berner)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('sniper-rifle', 'monopoly', 'psychoanalysis', 'making-a-budget', 'romanian-embassy')
AND mi.info = 'MET:4473 m'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Sonny Davis)', '(Father of Vijay)', '(as James Webb)', '(as Michael Amory)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('murder', 'groupon', '28th-century', 'man-on-the-moon', 'girl-heroine')
AND mi.info = 'FAIR: Midway through the movie, there is an aerial shot of a Tumbler (Batmobile) being slowly driven down a snow-covered street. The vehicle features a set of 4 rear wheels, yet only a single set of tire tracks are left in its path. However given that the Tumbler is a real vehicle constructed for the movie (neither a special effect, nor fake constructed over another vehicle) this is probably how the vehicle leaves tracks at low speed. (Six-wheel drive is unlikely to be efficient in slow city driving.)'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(craft service)', '(as ED J. Horton)', '(as Denissa DÃ©r)', '(as Maria Lucia)', '(as Tank Jones)')
AND it1.info = 'filming dates'
AND it2.info = 'votes'
AND k.keyword IN ('fire', 'emperor-of-china', 'number-32-jersey', 'filet-mignon', 'bosnia-syndrome')
AND mi.info = '3 July 2007 - November 2007'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(story)', '(as Luk Kam Bo)', '(as Bhavna Bhatt)', '(as Yuya Ogawa)', '(as Sandy Samuels)')
AND it1.info = 'goofs'
AND it2.info = 'votes'
AND k.keyword IN ('slow-motion-scene', 'beer-salesgirl', 'walking-on-fire', 'pet-allergy', 'singing-to-a-doll')
AND mi.info = 'CREW: During the shootout replay at the bar, with Eunice walking down the middle of the mobsters, you can see the blood packs behind several of the guys'' shirts and the mini-explosions that go off when they are triggered.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Andre Slexsen)', '(as David Atkins)', '(as Ewa Gralak)', '(as Brett Charles)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('night-cityscape', 'juvenile-crime', 'crime-ring', 'latina', 'plastic-trash-bag')
AND mi.info = 'Chile:Y7'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Tudor Panduru)', '(Angelo''s Mother)', '(as Mike Gowdy)', '(as Gary McMillian)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('police-officer-killed', 'facial-hair', 'normal-texas', 'digital-casino', 'witold-gombrowicz')
AND mi.info = 'Israel:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(as William White)', '(as Ranata S. Aly)', '(as Biru Robinson)', '(as Ulrika Hohlt)')
AND it1.info = 'LD language'
AND it2.info = 'votes'
AND k.keyword IN ('bare-breasts', 'choral-recitative', 'vanity', 'cherries', 'herman-brood')
AND mi.info = 'English'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (uncredited)', '(as Marco Hansom)', '(as Ray Shuman)', '(as The Smoke)', '(as John Vennema)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('police-station', 'hand-car', 'scissor-hands', 'house-of-windsor', 'disestablishment')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Shaad)', '(as Tracy Voyek)', '(as Arne Burchardt)', '(beadwork)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('secret-door', 'personal-genome', 'fake-brother', 'confidence-game', 'video-editing')
AND mi.info = 'OFM:65 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Miklos Rozsa)', '(as Stephan Lovatt)', '(as James Edwards)', '(as Keely Smith)', '(as Underdog Lady)')
AND it1.info = 'copyright holder'
AND it2.info = 'votes'
AND k.keyword IN ('slow-motion-scene', 'far-west', 'car-vandalized', 'ashes', 'prison-shower')
AND mi.info = 'Copyright MCMXL by Alexander Korda Films, Inc.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(Open All Hours)', '(as Emotion)', '(as Shahid Ali)', '(MOW Detective)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('casablanca-morocco', 'oleo', 'american-muscle', 'jumping-onto-a-bed', 'texan-accent')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(presenter)', '(as Kalle BjerkÃ¸)', '(as Adam Trottman)', '(as Joe Casaliggi)', '(as Mr. WC)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('electrocution', 'train-explosion', 'weekly', 'key-master', 'surface-of-the-sun')
AND mi.info = 'Iceland:L'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Willard Pugh)', '(as Douglas Purdy)', '(as Mike Higgins)', '(episodes 2 & 7)')
AND it1.info = 'certificates'
AND it2.info = 'votes'
AND k.keyword IN ('cheerleading', 'the-rock', 'sulfa-powder', 'team-leader', 'religious-mysticism')
AND mi.info = 'Germany:12'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Bando da Lua)', '(episode 1.23)', '(as Malorie)', '(Farraj)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'murder-in-hospital', 'part-improvisation', 'anti-drugs-program', 'salt-on-tail')
AND mi.info = 'OFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Angela Devil)', '(as Jack R. Wilkes)', '(stand-in: Desi)', '(as Lauren Vaughan)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('song', 'bells', 'school-attendance', 'serial-killer-m.o.', 'secret-service-plot')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant)', '(as Z. Skoczek)', '(as S.Sharangovich)', '(as Chelsea Swain)', '(as Angelica Fox)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('shotgun', 'mother-figure', 'preface', 'cutting-wood', 'urban-legend-vector')
AND mi.info = 'Germany:26 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(LSD y HeroÃ­na)', '(as Kaylee LoveCox)', '(as Zandra D''Abreu)', '(as Jean Ann Lewis)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('shot-to-death', 'nazi-occupation', 'cities', 'agano-river-japan', 'docu-art')
AND mi.info = 'CONT: After Bane and his men attack the stock exchange, vehicle crash barriers are deployed on the streets. The one we see deploying has its open side towards the stock exchange. But when Bane and his men leave on their motorcycles, the open sides of the angled crash barriers are pointed away from the exchange allowing Bane to use them as ramps.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Filippone)', '(as Paul Scarif)', '(as Will Roache)', '(as LÃ©on Batifol)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('snow', 'dead-body-in-closet', 'loan-shark', 'altered-photograph', 'general-pershing')
AND mi.info = 'PCS:VistaVision'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(as MÃ¼fid Kiper)', '(as Fabio Pasolini)', '(as Kimmy Gatewood)', '(as Ellie Omiya)')
AND it1.info = 'trivia'
AND it2.info = 'votes'
AND k.keyword IN ('controversy', 'hajji', 'hit-on-the-knee', 'burden-of-proof', 'rock-monster')
AND mi.info = 'Director ''Alan Parker (I)'' (qv) once said that this film was ""the first story which could be made in Europe with a British crew and had a chance of making it in the States. It''s an American story; it doesn''t compromise; and it''s the opposite to what I''ve done before"".'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location manager)', '(as Betty Waldron)', '(as Max Maxwell)', '(as Margo Reymundo)', '(as Nicole Dudalia)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('bare-chested-male', 'linoleum', 'kurds', 'monsey-new-york', 'cuddling')
AND mi.info = 'Ethan: They call me Cool Ethan. I live in Heineraker Hall.::Dave: Alright - cool.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(1980 screenplay)', '(as Kathi Angerer)', '(coordinator: LAPD)', '(as Le petit Toto)', '(as Sreehari Nanu)')
AND it1.info = 'weekend gross'
AND it2.info = 'rating'
AND k.keyword IN ('bedridden', 'grocery-robbery', 'year-1839', 'franco-mexican-war', 'fallen-idol')
AND mi.info = '$11,752,917 (USA) (16 October 2005) (2,972 screens)'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Alex Preston)', '(as Kristin Glover)', '(as Majken WexÃ¸)', '(as Michael Morse)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('tragic-villain', 'philip-the-handsome', 'cyanide-poisoning', 'rings-swing', 'plethora')
AND mi.info = 'Blind Prisoner: You do not fear death. You think this makes you strong. It makes you weak.::Bruce Wayne: Why?::Blind Prisoner: How can you move faster than possible, fight longer than possible without the most powerful impulse of the spirit: the fear of death.::Bruce Wayne: I do fear death. I fear dying in here, while my city burns, and there''s no one there to save it.::Blind Prisoner: Then make the climb.::Bruce Wayne: How?::Blind Prisoner: As the child did. Without the rope. Then fear will find you again.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Marika Rowski)', '(as Marilee)', '(Witch''s assistant)', '(as Haider Ali)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sniper-rifle', 'caballero-costume', 'job-satisfaction', 'ghosts-japan', 'first-amendment')
AND mi.info = 'Alfred: [to Bruce] Remember when you left Gotham? Before all this, before Batman? You were gone seven years. Seven years I waited, hoping that you wouldn''t come back. Every year, I took a holiday. I went to Florence, there''s this cafe, on the banks of the Arno. Every fine evening, I''d sit there and order a Fernet Branca. I had this fantasy, that I would look across the tables and I''d see you there, with a wife and maybe a couple of kids. You wouldn''t say anything to me, nor me to you. But we''d both know that you''d made it, that you were happy. I never wanted you to come back to Gotham. I always knew there was nothing here for you, except pain and tragedy. And I wanted something more for you than that. I still do.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Yashar Adem)', '(as A.J. Meijer)', '(as Mi Pettersson)', '(as John Porrell)', '(as Forrie Smith)')
AND it1.info = 'LD video standard'
AND it2.info = 'rating'
AND k.keyword IN ('digging-through-a-prison-wall', 'black-caricature', 'feederism', 'earth-day', 'funny-devil')
AND mi.info = 'NTSC'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Ben Disinger)', '(as L. Staritsyna)', '(as Pierre Decaze)', '(as Chris Petit)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('orphan', 'dance-recital', 'research-center', 'far-west', 'year-1858')
AND mi.info = 'Argentina:26 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as Dee Dee Sharp)', '(as Mads Feldballe)', '(segment ""Enigme"")', '(as Albert Alfano)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('sniper-rifle', 'optical-illusion', 'drinking-at-bar', 'funny-accent', 'leg-tumor')
AND mi.info = 'SYNC: When the prisoners in the pit shout ''rise'', their lips don''t move synchronised to the shout.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(extra: bar scene)', '(segment ""B-Rex"")', '(ep20)', '(as Tim D''Arcy)')
AND it1.info = 'certificates'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'guest-performer', 'que-sera-sera', 'prisoner-exchange', 'dance-costume')
AND mi.info = 'South Korea:15'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Paul Smith)', '(as Mark D.)', '(as Dr. Lynn Ianni)', '(as Albert Garrat)', '(as Sv. SklÃ¡dal)')
AND it1.info = 'LD language'
AND it2.info = 'votes distribution'
AND k.keyword IN ('bare-breasts', 'killed-by-a-tractor', 'overweight-slur', 'bonus-phrase', 'ancestry')
AND mi.info = 'English'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(as Jose Martin)', '(original writer)', '(as Armand Acosta)', '(as Judith Weller)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('garbage-can', 'panic-button', 'kissing-a-painting', 'cotton-between-toes', '16th-floor')
AND mi.info = 'Canada:14'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as Kwan Chi Kan)', '(as Jim Mair)', '(egyptologist)', '(Patrol Officer)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('returning-character-killed-off', 'jewish-lesbian', 'yogini', 'wrinkled-suit', 'knock-''em-dead')
AND mi.info = 'UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Joel Ziele)', '(as Ãric Cabana)', '(caterer: KemiÃ¶)', '(as Miss Hayward)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('secret-door', 'warrenton-virginia', 'tractor-factory', 'literary', 'gun-kata')
AND mi.info = 'Selina Kyle: Shrimp balls?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(seasons 2-)', '(as Stephen Clarke)', '(as Giorgina)', '(as Ladine Hall)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('police-station', 'white-pants', 'aqua-aerobics', 'search-for-dog', 'neo-nazism')
AND mi.info = 'France:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Raphael Vogt)', '(Imekura Customer)', '(as Sarah Cannon)', '(tent manufacturer)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('stabbed-in-the-chest', 'click', 'hit-with-a-breast', 'lithosphere', 'minister-of-culture')
AND mi.info = 'Bane: [to Batman] Peace has cost you your strength! Victory has defeated you!'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Lisa Ryall)', '(as Z. Zelinskaya)', '(as James Sheridan)', '(1915)', '(as Mark DippÃ©)')
AND it1.info = 'runtimes'
AND it2.info = 'rating'
AND k.keyword IN ('famous-song', 'youngarts', 'woolly-bully', 'digital-designer', 'ritual-sacrifice')
AND mi.info = '119'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Isobel Ice)', '(as Grace Carlisle)', '(as Gunter Gerzso)', '(as Chippy Ganjee)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'unpacking', 'seductress', 'tennis-pro', 'friars-club')
AND mi.info = 'Germany:12'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as G.A. Smith)', '(key technician)', '(as Caroline DeFay)', '(as Andrew Seeley)')
AND it1.info = 'locations'
AND it2.info = 'votes distribution'
AND k.keyword IN ('teenage-prostitution', 'old-navy', 'gun-toting-monk', 'gold-standard', 'muslim-american')
AND mi.info = 'El Paso, Texas, USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Yili Chen)', '(as Ezra Cabay)', '(as Scotty Cox)', '(as Stuart Allery)')
AND it1.info = 'locations'
AND it2.info = 'rating'
AND k.keyword IN ('surrealism', 'basset-hound', 'poisoned-cigarette', 'humorous-policeman', 'corn-broom')
AND mi.info = 'Savannah, Georgia, USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Lisa Churgin)', '(as Surinder)', '(as Ada-May)', '(as Sarah Slick)', '(as V. Davydov)')
AND it1.info = 'LD disc size'
AND it2.info = 'votes'
AND k.keyword IN ('homosexual', 'sound-recordist', 'one-night-stand', 'manicurist', 'norrland')
AND mi.info = '12'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Dr. Lore Reich)', '(as Pete Mamakos)', '(as Brahmdutt)', '(as Printania)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('orphan', 'moissanite', 'missoula', 'britrock', 'steam-boat')
AND mi.info = 'FAKE: SPOILER: In the final scene, when the bomb is shown ticking closer to zero, smoke is seen emanating from it slowly as if the bomb were stationery. But in fact it is hanging by a wire and carried away into the ocean by The Bat at high speed, so the smoke should travel much faster.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Eilemann-Trio)', '(as Poppy Cannon)', '(as Jayaprada)', '(as Chax)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('sawed-off-shotgun', 'equine-excel', 'rowing-championship', 'jojo', 'college-enmity')
AND mi.info = 'GEOG: When the Gotham police force takes on Bane''s recruited prisoners, a banner clearly marking ""NYC"" is visible in the background.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Tom Fellegi)', '(as Sabina Marina)', '(explosive effects)', '(as Francisco Roma)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('title-at-the-end', 'tripping-someone', 'high-speed-camera', 'russian-woman', 'foxtrot')
AND mi.info = 'Ireland:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(as F. Hanzekovic)', '(as Jenni Nelson)', '(as J. Abello)', '(as A. Robinson)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('number-in-title', 'family-desertion', 'e=mc2', 'blood-on-a-mirror', 'trick-course')
AND mi.info = 'USA:24 January 2003'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Frau Sterr)', '(as Joseph Mallory)', '(as Frederick Solm)', '(Brati''s father)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('casablanca-morocco', 'articles-of-war', 'german-immigrant', 'credit-rating', 'lunch-hour')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Kristin Sales)', '(as Chino)', '(as Gunnar Ohlund)', '(as Suzie McCoppin)')
AND it1.info = 'goofs'
AND it2.info = 'votes'
AND k.keyword IN ('night-cityscape', 'cat-town', 'lawn-ornament', 'large-breasts', 'coffee-cup')
AND mi.info = 'GEOG: When the Gotham police force takes on Bane''s recruited prisoners, a banner clearly marking ""NYC"" is visible in the background.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as Katia Chiani)', '(as Franck Bruneau)', '(as Sally O''Neill)', '(Anju''s mother)')
AND it1.info = 'runtimes'
AND it2.info = 'votes'
AND k.keyword IN ('stolen-car', 'human-mannequin', 'plaid-gloves', 'water-glass', 'satanist')
AND mi.info = '105'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(novel ""Fat City"")', '(as L. Rammo)', '(as Jenny M.)', '(as Gandii Nathen)')
AND it1.info = 'sound mix'
AND it2.info = 'votes'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'travel-business', 'tv-guide-magazine', 'oil-drilling', 'rca')
AND mi.info = 'Mono'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(as Alex Barrios)', '(as Lulu Li)', '(Hard Harry)', '(muppet workshop)')
AND it1.info = 'languages'
AND it2.info = 'votes'
AND k.keyword IN ('champion', 'stealing-a-taxi', 'vertigo', 'fear-of-cars', 'tonsure')
AND mi.info = 'English'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant)', '(as Cristine Jaca)', '(casual assistant)', '(tow plane)', '(as LalÃ¡ GatoÃ³)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('title-at-the-end', 'dark-machinist', 'dialysis-machine', 'spina-bifida', 'remains')
AND mi.info = 'CONT: As Blake runs into the hospital, he is seen to have a long shotgun with a wooden stock and a silver barrel. However, when he inside, he is seen to have a short black shotgun.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(Mamaji)', '(Kaneko, Teru)', '(as Dick Farina)', '(as IclÃ¢l GenÃ§)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'hazmat-suit', 'panel', 'sex-with-maid', 'faking-a-limp')
AND mi.info = 'Canada:14A'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Charles Locher)', '(as Matej Reger)', '(as Fili Escarcega)', '(Mr. Westlake)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('shot-to-death', 'false-morality', 'walk-along-beach', 'suicide-by-cop', 'play-within-a-play')
AND mi.info = 'RAT:1.44 : 1'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (as Dwayne A. Smith)', '(as Bozinovski)', '(as Navid Akhavan)', '(as Ray Viser)', '(as Peter Helm)')
AND it1.info = 'certificates'
AND it2.info = 'votes'
AND k.keyword IN ('injury', 'whore-in-window', 'first-sergeant', 'fuel-injection', 'decorum')
AND mi.info = 'USA:R'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as Alex C. Skuby)', '(as Kandy)', '(as Felicity Jurd)', '(as Clarke Moore)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('reference-to-michael-redgrave', 'sex-with-an-object', 'chocolate-icing', 'operation-paperclip', 'mental-illness')
AND mi.info = 'Marwood: Parkin''s been. There''s the supper.::[a live chicken is standing on the table]::Withnail: What are we supposed to do with that?::Marwood: Eat it.::Withnail: Eat it? Fucker''s alive.::Marwood: Yeah, I know that, you''ve got to kill it.::Withnail: Me? I''m the firelighter and fuel collector.::Marwood: Yeah, I know, but I got the logs in. [they get up and approach it] It takes away your appetite just looking at it.::Withnail: No it doesn''t. I''m starving. How can we make it die?::Marwood: You got to throttle him. Listen, I think you should strangle it instantly in case it starts trying to make friends with us.::Withnail: All right, get hold of it. You hold it down, I''ll strangle it.::Marwood: I can''t. It''s those dreadful beady eyes, they stare you out.::Withnail: It''s a bloody chicken! Just think of it with bacon across its back.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Sylvie Laguna)', '(river unit)', '(as Robert Munroe)', '(as Tom Keische)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('necklace', 'sex-in-gym', 'retribution', 'prostitute-killer', 'absurd-humor')
AND mi.info = 'Mexico:B'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Mischel)', '(as John Colley)', '(as Marcel Lee)', '(body coach)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('night-cityscape', 'hurn-joke', 'flavoring', 'pinched-nerve', 'bloody-moon')
AND mi.info = 'Brazil:27 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as w.frank)', '(as Tracy D Smith)', '(as Jake Douval)', '(special filmings)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('shaving', 'walthers-ppk', 'pumice', 'boot-fetish', 'throwing-paper-ball')
AND mi.info = 'Bulgaria:27 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Pedro Salvin)', '(as Palina)', '(web master) (2002)', '(as Jack Tillar)', '(as Jennifer Smith)')
AND it1.info = 'color info'
AND it2.info = 'rating'
AND k.keyword IN ('slow-motion-scene', 'black-rock', 'macrobiotics', 'bartender', 'grumpy-old-man')
AND mi.info = 'Color'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(runner: Mallorca)', '(as Jiro Kagoshima)', '(as Amit Gangoly)', '(as Sheridan Hall)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('thief', 'sixth-generation', 'thesis-advisor', 'prairie', 'bone-cancer')
AND mi.info = 'France:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Katerina Stano)', '(as TÃ­o PlÃ¡cido)', '(as Victor Stewart)', '(as Kamel Bahaj)')
AND it1.info = 'locations'
AND it2.info = 'votes'
AND k.keyword IN ('nightclub', 'king-henry-ii', 'magnetic-mine', 'philippe-d''orleans', 'keith-cafferty')
AND mi.info = 'Raleigh Studios - 5300 Melrose Avenue, Hollywood, Los Angeles, California, USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as A. Volkonsky)', '(producer: Wilco)', '(as Lindsay)', '(as Rimma Zyubina)')
AND it1.info = 'plot'
AND it2.info = 'rating'
AND k.keyword IN ('robbery', 'phase', 'den-of-iniquity', 'pancreatic-cancer', 'blues-guitar')
AND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy protÃ©gÃ© from his television show and billed above the title and first billed in the cast as Laurie (""I-like-the-wide-open-spaces"") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in ""McLintock."" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his ""Screen Snapshots"" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Dr Susan Jebb)', '(novel ""Nu"")', '(visual identity)', '(tank arcade)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('title-at-the-end', 'overweight-person', 'killied-with-acid', 'ski-jumping', 'nightwing')
AND mi.info = 'Bruce Wayne: I watched you die.::Ra''s al Ghul: I told you I was immortal.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(as SaburÃ´ BÃ´ya)', '(Moritz'' classmate)', '(as Volker Olms)', '(as Cunio Miyari)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('radio', 'bomb-throwing', 'sex-by-a-fireplace', 'car-seat', 'documentary-ethics')
AND mi.info = 'RAT:1.85 : 1'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Marion Scali)', '(as Elizabeth Amos)', '(as Pat Delany)', '(as Jose MÂª Caro)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('grand-piano', 'window-sill', 'tibetan-monk', 'amontillado', '500-pound-note')
AND mi.info = 'RAT:1.33 : 1'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Ho Lin)', '(Raju''s friend)', '(as Bruno Gomes)', '(producer) (1994-?)')
AND it1.info = 'goofs'
AND it2.info = 'votes'
AND k.keyword IN ('police-station', 'moral-deterioration', 'shrine-maiden', 'crop-dusting', 'lunar-mining')
AND mi.info = 'FAKE: One of Bane''s mercenaries (on the far left of the rooftop fight scene with Catwoman and Batman right after it shows Daggett) falls down without being hit.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Vesna Pocuca)', '(as Art Canning)', '(Segment 3)', '(Seasons 1-2)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'gun-in-airport', 'volte-face', 'methadone-clinic', 'druid-ceremony')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Dean Spinksley)', '(as Cecil Philips)', '(as Jesse Martinez)', '(as Cut Yanti)', '(as Laura Dinolsky)')
AND it1.info = 'locations'
AND it2.info = 'votes distribution'
AND k.keyword IN ('slow-motion-scene', 'taking-on-water', 'overcrowded', 'racehorse', 'antiglobalization')
AND mi.info = 'Welbeck Abbey, Worksop, Nottinghamshire, England, UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(film crew)', '(as Wayne Maugans)', '(as Manuel Ãguas)', '(as Carla Castele)')
AND it1.info = 'languages'
AND it2.info = 'rating'
AND k.keyword IN ('stolen-car', 'art-house', 'camera-in-watch', 'impaired-speech', 'political-art')
AND mi.info = 'English'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(Rradio-Canada)', '(story) (as DLZ)', '(as Oscar Ulloa)', '(as Dawn Warner)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('sniper-rifle', 'exquisite-corpse', 'alice-in-chains', 'sex-with-the-undead', 'gold-necklace')
AND mi.info = 'USA:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Bj. De Jesus)', '(guest appereance)', '(as V. Shakov)', '(as Monika Tajma)')
AND it1.info = 'plot'
AND it2.info = 'votes'
AND k.keyword IN ('written-confession', 'blood-ballet', 'dingo', 'cosmic-research', 'm1-assault-boat')
AND mi.info = 'The Arizona wilderness, 1880. Gen. Fletcher Blackwell sends a message telling Capt. Walsh, who is escorting a wagon-train through Apache territory, heading for the fort at Furnace Creek, that he should cancel the escort and rush to another town. Apache leader ""Little Dog"" is leading the attack on the wagon-train and massacring everyone at the poorly manned fort. As a result the treaty is broken with the Indians and the white settlers take over the territory with the help of the calvary, as the Apaches are wiped out and only ""Little Dog"" remains at large. Gen. Fletcher Blackwell is court-martial-led for treason. The general''s 2 sons, Cash Blackwell and Capt. Rufe Blackwell, each with a different disposition, go about trying to find evidence to clear their father''s name.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (uncredited)', '(as Los Rebeldes)', '(TV Quiz Show)', '(as Janine Pen)', '(as Peggy Missi)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('male-slaps-a-female', 'wedding-music', 'house-key', 'hunting-safari', 'jump-start')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Kwan Yung-Wun)', '(as Tyrone Shu)', '(as Robert Muzingo)', '(adaptation) (1980)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'san-pablo-peru', 'snow-cave', 'libyan-desert', 'dalton-gang')
AND mi.info = 'India:U/A'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (uncredited)', '(as Virginia Polak)', '(broadcast rf)', '(as Asad)', '(play ""Dona Xepa"")')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hole', 'burying-dead-body', 'crack-den', 'wales', 'spectres')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Jon Savich)', '(as Nanna Kjeldsen)', '(as Gene De Rue)', '(as Ursula Marsden)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('tribute', 'geefe', 'seabed', 'air-force-veteran', 'gay-football-player')
AND mi.info = 'John Daggett: Can we get some ladies in here?::Catwoman: Careful what you wish for.::[Catwoman attacks Daggett and pins him up against the wall]::Catwoman: What''s the matter, Cat got your tongue?::John Daggett: You dumb bitch.::Catwoman: Nobody ever accused me of being dumb!::John Daggett: You''re dumb; for coming here.::Catwoman: I want what you owe me!'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant)', '(as Aline J Mowat)', '(as Charlie Fields)', '(as 60 Ã¥r)', '(novel Dvojnik)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('sawed-off-shotgun', 'sadistic-husband', 'canning-food', 'degania-israel', 'physical-training')
AND mi.info = 'PCS:VistaVision'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(ca: Wowow)', '(as Ng Ting Yip)', '(prayer team)', '(as KekÃ¤le)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('robbery', 'test-of-bravery', 'porcupine-joke', 'artcore', 'destivelle')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
