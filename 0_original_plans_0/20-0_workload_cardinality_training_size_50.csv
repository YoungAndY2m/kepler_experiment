query,plan_id,plan_content
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('friendship', 'non-fiction', 'husband-wife-relationship', 'non-fiction', 'number-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('based-on-play', 'one-word-title', 'male-nudity', 'one-word-title', 'number-in-title')
AND kt.kind = 'movie'
AND t.production_year > 1958;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('swimsuit-competition', 'flickering-light', 'flirting-with-a-patient', 'obedience', 'francisco-franco''s-double')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Amanda%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%b%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1973;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Golden%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1979;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Mrs%' OR chn.name LIKE '%Ernesto%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1933;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('murder', 'murder', 'murder', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1997;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Rouser%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2003;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Wilke%'
AND (chn.name LIKE '%Lester%' OR chn.name LIKE '%f%')
AND k.keyword IN ('bare-breasts', 'sequel', 'number-in-title', 'number-in-title', 'non-fiction')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1949;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Markopulos%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Melissa%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%s%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'movie'
AND t.production_year > 1934;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Being%')
AND k.keyword IN ('bare-breasts', 'nudity', 'oral-sex', 'number-in-title', 'blood')
AND kt.kind = 'episode'
AND t.production_year > 1960;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Nurse%')
AND k.keyword IN ('crushing-an-ice-cream-cone', 'picture-of-suspect', 'lover-murdered', 'reference-to-max-baer', 'wad-of-money')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND kt.kind = 'movie'
AND t.production_year > 1989;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Ruth%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%RamÃ­rez%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1942;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%de%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('male-nudity', 'oral-sex', 'revenge', 'blood', 'anal-sex')
AND kt.kind = 'episode'
AND t.production_year > 1991;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Dr%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Leader%' OR chn.name LIKE '%Mr%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Artist%'
AND (chn.name LIKE '%Lindsay%' OR chn.name LIKE '%West%')
AND k.keyword IN ('father-son-relationship', 'family-relationships', 'blood', 'bare-chested-male', 'father-son-relationship')
AND kt.kind = 'episode'
AND t.production_year > 1906;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Kritzinger%'
AND (chn.name LIKE '%Diana%' OR chn.name LIKE '%s%')
AND k.keyword IN ('husband-wife-relationship', 'number-in-title', 'tv-mini-series', 'father-daughter-relationship', 'bare-breasts')
AND kt.kind = 'episode'
AND t.production_year > 1976;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%1%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1978;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Koizumi%')
AND k.keyword IN ('surrealism', 'family-relationships', 'friendship', 'tv-mini-series', 'violence')
AND kt.kind = 'episode'
AND t.production_year > 1912;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('based-on-play', 'friendship', 'husband-wife-relationship', 'revenge', 'blood')
AND kt.kind = 'video movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1951;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('in-the-nick-of-time', 'santo-domingo-blues', 'altruistic-scientist', 'dance-band', 'hosing-down')
AND kt.kind = 'episode'
AND t.production_year > 1932;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Vasquez%'
AND (chn.name LIKE '%Venge%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Jornalista%'
AND (chn.name LIKE '%Co%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('number-in-title', 'husband-wife-relationship', 'friendship', 'tv-mini-series', 'male-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1986;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Johnson%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Captain%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'tv series'
AND t.production_year > 1995;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Debby%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1987;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1935;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%mom%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('family-relationships', 'anal-sex', 'husband-wife-relationship', 'father-son-relationship', 'anal-sex')
AND kt.kind = 'movie'
AND t.production_year > 1983;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Party%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%girl%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1977;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2011;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Davis%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%Leon%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('father-son-relationship', 'anal-sex', 'violence', 'family-relationships', 'based-on-play')
AND kt.kind = 'episode'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Newell%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1969;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'video movie'
AND t.production_year > 1992;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 1989;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Standish%' OR chn.name LIKE '%f%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1997;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1932;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Serhan%'
AND (chn.name LIKE '%Harlett%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1998;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Plummer%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Friend%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2011;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Alligator%' OR chn.name LIKE '%s%')
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1968;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('bare-breasts', 'friendship', 'number-in-title', 'one-word-title', 'husband-wife-relationship')
AND kt.kind = 'movie'
AND t.production_year > 1975;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Annie%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1991;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Long%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-play', 'love', 'nudity', 'bare-breasts', 'death')
AND kt.kind = 'episode'
AND t.production_year > 1982;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Poker%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 2003;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Joe%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Young%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1998;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Elfi%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1965;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Leon%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1965;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Fence%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('oral-sex', 'dog', 'father-daughter-relationship', 'dog', 'father-daughter-relationship')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('friendship', 'bare-chested-male', 'anal-sex', 'tv-mini-series', 'surrealism')
AND kt.kind = 'movie'
AND t.production_year > 1984;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%the%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('thinking-cap', 'swimwear', 'iraq-veteran', 'ridiculousness', 'water-balloon')
AND kt.kind = 'movie'
AND t.production_year > 1956;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%2%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('violence', 'non-fiction', 'father-son-relationship', 'male-nudity', 'father-son-relationship')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1992;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1960;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%of%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1983;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Poole%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 1999;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Victim%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Scared%')
AND k.keyword IN ('one-word-title', 'surrealism', 'dog', 'father-son-relationship', 'non-fiction')
AND kt.kind = 'episode'
AND t.production_year > 1953;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'movie'
AND t.production_year > 1985;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1966;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Kull%')
AND k.keyword IN ('blood', 'father-daughter-relationship', 'violence', 'based-on-play', 'friendship')
AND kt.kind = 'episode'
AND t.production_year > 1962;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1964;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'movie'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('cryptogram', 'child-using-crutches', 'beaver-utah', '10th-century', 'jockey')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Rafael%')
AND k.keyword IN ('love', 'tv-mini-series', 'based-on-play', 'number-in-title', 'father-daughter-relationship')
AND kt.kind = 'movie'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Saloo%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1989;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Ronspinner%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('bare-breasts', 'love', 'friendship', 'father-daughter-relationship', 'male-nudity')
AND kt.kind = 'movie'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Barad%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('father-daughter-relationship', 'sequel', 'sequel', 'male-nudity', 'tv-mini-series')
AND kt.kind = 'episode'
AND t.production_year > 1947;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%milliomos%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1962;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Banti%' OR chn.name LIKE '%f%')
AND k.keyword IN ('nudity', 'oral-sex', 'father-son-relationship', 'dog', 'number-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%at%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2002;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Crowe%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1959;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Management%')
AND k.keyword IN ('violence', 'family-relationships', 'anal-sex', 'tv-mini-series', 'family-relationships')
AND kt.kind = 'episode'
AND t.production_year > 1944;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND kt.kind = 'video movie'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 1953;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%lan%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('number-in-title', 'anal-sex', 'death', 'revenge', 'nudity')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Rufino%'
AND (chn.name LIKE '%Bar%' OR chn.name LIKE '%Dr%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 2011;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Wong%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%the%')
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('yosemite', 'native-american-white-relationships', 'germophobe', 'goat-feces', 'standing-on-head')
AND kt.kind = 'episode'
AND t.production_year > 1994;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%s%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 1976;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Tei%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('bare-breasts', 'police', 'bare-breasts', 'based-on-play', 'bare-breasts')
AND kt.kind = 'episode'
AND t.production_year > 1915;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Chairman%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('tv-mini-series', 'father-daughter-relationship', 'love', 'male-nudity', 'family-relationships')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Herself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1949;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Allen%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Smirch%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('blood', 'number-in-title', 'bare-breasts', 'blood', 'bare-breasts')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Jovan%' OR chn.name LIKE '%in%')
AND k.keyword IN ('male-nudity', 'based-on-play', 'death', 'male-nudity', 'violence')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Toot%')
AND k.keyword IN ('nudity', 'sequel', 'male-nudity', 'husband-wife-relationship', 'husband-wife-relationship')
AND kt.kind = 'episode'
AND t.production_year > 1979;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Daughter%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%SMU%' OR chn.name LIKE '%f%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('oral-sex', 'tv-mini-series', 'tv-mini-series', 'non-fiction', 'violence')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%F%' OR chn.name LIKE '%f%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1924;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Men%' OR chn.name LIKE '%f%')
AND k.keyword IN ('father-son-relationship', 'tv-mini-series', 'one-word-title', 'blood', 'male-nudity')
AND kt.kind = 'episode'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Aubujan%'
AND (chn.name LIKE '%kammrrjungfrau%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('love', 'father-daughter-relationship', 'non-fiction', 'non-fiction', 'friendship')
AND kt.kind = 'episode'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Herself%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'tv movie'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%McClane%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%k%')
AND k.keyword IN ('bare-breasts', 'anal-sex', 'father-son-relationship', 'revenge', 'bare-breasts')
AND kt.kind = 'video movie'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Unemployment%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Gray%'
AND (chn.name LIKE '%La%' OR chn.name LIKE '%s%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1967;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Professor%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('police', 'non-fiction', 'male-nudity', 'love', 'bare-breasts')
AND kt.kind = 'tv series'
AND t.production_year > 1941;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Rivera%' OR chn.name LIKE '%s%')
AND k.keyword IN ('search-for-gun', 'sense-memory', 'legitimate-defense', 'conical-hat', 'sahara')
AND kt.kind = 'movie'
AND t.production_year > 1997;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1896;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%G%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1994;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Couric%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'movie'
AND t.production_year > 1974;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Arthur%')
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1992;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Channing%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1909;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Percival%'
AND (chn.name LIKE '%Owen%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1970;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Friedrich%')
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'tv series'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1967;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1992;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Busch%'
AND (chn.name LIKE '%Chuang%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2002;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%svatebcan%'
AND (chn.name LIKE '%Cabot%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%at%' OR chn.name LIKE '%s%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Nick%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Monk%' OR chn.name LIKE '%s%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1999;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%h%' OR chn.name LIKE '%Nelson%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1932;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1925;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%McCall%'
AND (chn.name LIKE '%Clark%' OR chn.name LIKE '%f%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Frothy%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 1970;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Rudi%')
AND k.keyword IN ('based-on-play', 'family-relationships', 'nudity', 'bare-chested-male', 'male-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1951;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Carlos%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('tv-mini-series', 'bare-breasts', 'family-relationships', 'police', 'one-word-title')
AND kt.kind = 'episode'
AND t.production_year > 1911;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1994;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%s%')
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1985;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sequel', 'sequel', 'surrealism', 'number-in-title', 'father-son-relationship')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Verity%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1912;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Pootie%'
AND (chn.name LIKE '%Dumont%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1988;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%s%')
AND k.keyword IN ('violence', 'death', 'bare-breasts', 'sequel', 'nudity')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Two%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Beijing%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1994;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1986;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Baseball%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Carla%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1931;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1998;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('bare-breasts', 'love', 'non-fiction', 'death', 'love')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Delilah%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('friendship', 'police', 'friendship', 'death', 'violence')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%Leonid%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%de%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2003;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%s%')
AND k.keyword IN ('family-relationships', 'bare-chested-male', 'oral-sex', 'death', 'bare-chested-male')
AND kt.kind = 'episode'
AND t.production_year > 1995;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Shopper%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1977;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1975;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Walter%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1985;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('family-relationships', 'nudity', 'love', 'surrealism', 'male-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1909;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Slaven%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'movie'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('friendship', 'friendship', 'non-fiction', 'nudity', 'number-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'video movie'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%1%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%meisje%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1977;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1893;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%daughter%' OR chn.name LIKE '%s%')
AND k.keyword IN ('bare-chested-male', 'family-relationships', 'love', 'based-on-play', 'friendship')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Depressed%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1971;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Mjr%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('death', 'father-daughter-relationship', 'violence', 'one-word-title', 'number-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Midge%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1975;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%Emmett%' OR chn.name LIKE '%s%')
AND k.keyword IN ('father-daughter-relationship', 'husband-wife-relationship', 'father-daughter-relationship', 'police', 'family-relationships')
AND kt.kind = 'episode'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('blood', 'bare-breasts', 'police', 'sequel', 'male-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1933;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%ViganÃ²%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Maurice%')
AND k.keyword IN ('revenge', 'violence', 'number-in-title', 'number-in-title', 'love')
AND kt.kind = 'episode'
AND t.production_year > 1964;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Boy%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('dog', 'sequel', 'based-on-play', 'one-word-title', 'bare-chested-male')
AND kt.kind = 'episode'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%1%')
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Richter%'
AND (chn.name LIKE '%Henry%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%der%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('nudity', 'anal-sex', 'family-relationships', 'tv-mini-series', 'bare-chested-male')
AND kt.kind = 'episode'
AND t.production_year > 2003;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Il%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-play', 'based-on-play', 'sequel', 'bare-chested-male', 'non-fiction')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Postarna%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND kt.kind = 'movie'
AND t.production_year > 1945;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1961;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%7%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Mike%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1933;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Street%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%in%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sequel', 'husband-wife-relationship', 'male-nudity', 'sequel', 'blood')
AND kt.kind = 'episode'
AND t.production_year > 1981;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Ranger%'
AND (chn.name LIKE '%Hardt%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'tv series'
AND t.production_year > 1984;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'movie'
AND t.production_year > 1970;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Williams%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('violence', 'violence', 'non-fiction', 'nudity', 'family-relationships')
AND kt.kind = 'movie'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Moscow%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1989;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('oral-sex', 'surrealism', 'father-son-relationship', 'family-relationships', 'friendship')
AND kt.kind = 'episode'
AND t.production_year > 1984;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
