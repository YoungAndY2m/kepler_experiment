query,plan_id,plan_content
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",148,/*+  SeqScan(mi_idx) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(it2) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(k mk) HashJoin(mi_idx k mk) HashJoin(mi_idx k mk it2) NestLoop(mi_idx k mk it2 mi) HashJoin(mi_idx k mk it2 mi it1) NestLoop(mi_idx k mk it2 mi it1 ci) NestLoop(mi_idx k mk it2 mi it1 ci n) NestLoop(mi_idx k mk it2 mi it1 ci n t) Leading((((((((mi_idx (k mk)) it2) mi) it1) ci) n) t)) */
