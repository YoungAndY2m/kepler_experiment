query,plan_id,plan_content
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'clearance-sale'
AND t.episode_nr >= 4
AND t.episode_nr < 11054;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[br]'
AND k.keyword = 'shame'
AND t.episode_nr >= 0
AND t.episode_nr < 6737;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-breasts'
AND t.episode_nr >= 14
AND t.episode_nr < 23;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 19
AND t.episode_nr < 5092;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'bioterrorism'
AND t.episode_nr >= 9
AND t.episode_nr < 670;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 79
AND t.episode_nr < 5673;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 1
AND t.episode_nr < 24;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 14
AND t.episode_nr < 4539;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 5
AND t.episode_nr < 5263;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'punishment'
AND t.episode_nr >= 0
AND t.episode_nr < 8528;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 9
AND t.episode_nr < 21;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 40
AND t.episode_nr < 10954;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'infidelity'
AND t.episode_nr >= 6
AND t.episode_nr < 4577;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 7
AND t.episode_nr < 2854;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 2
AND t.episode_nr < 16;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 2
AND t.episode_nr < 49;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'boy-ranger'
AND t.episode_nr >= 7
AND t.episode_nr < 1910;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 5
AND t.episode_nr < 10;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 14
AND t.episode_nr < 17;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ar]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 11;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 6
AND t.episode_nr < 17;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'number-in-title'
AND t.episode_nr >= 8
AND t.episode_nr < 36;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'detention'
AND t.episode_nr >= 6
AND t.episode_nr < 5026;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'nitroglycerin'
AND t.episode_nr >= 3
AND t.episode_nr < 15465;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bastard'
AND t.episode_nr >= 6
AND t.episode_nr < 16;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'seaside-resort'
AND t.episode_nr >= 4
AND t.episode_nr < 15194;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'disposing-of-a-dead-body'
AND t.episode_nr >= 0
AND t.episode_nr < 1951;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 20
AND t.episode_nr < 23;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'sex'
AND t.episode_nr >= 7
AND t.episode_nr < 28;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'father-son-relationship'
AND t.episode_nr >= 10
AND t.episode_nr < 76;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ph]'
AND k.keyword = 'carnival'
AND t.episode_nr >= 7
AND t.episode_nr < 15234;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'call-in'
AND t.episode_nr >= 3
AND t.episode_nr < 3488;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 6
AND t.episode_nr < 16;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'computer-animation'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'florist'
AND t.episode_nr >= 2
AND t.episode_nr < 2264;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 14
AND t.episode_nr < 21;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 3
AND t.episode_nr < 3716;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'butcher'
AND t.episode_nr >= 20
AND t.episode_nr < 1581;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 19
AND t.episode_nr < 5383;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sports-team'
AND t.episode_nr >= 5
AND t.episode_nr < 11780;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'friendship'
AND t.episode_nr >= 21
AND t.episode_nr < 56;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 6
AND t.episode_nr < 16;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'death'
AND t.episode_nr >= 5
AND t.episode_nr < 8;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'back-from-the-dead'
AND t.episode_nr >= 2
AND t.episode_nr < 3023;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 11
AND t.episode_nr < 26;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 18
AND t.episode_nr < 2101;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'revenge'
AND t.episode_nr >= 11
AND t.episode_nr < 12942;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'scuba-diving'
AND t.episode_nr >= 13
AND t.episode_nr < 8395;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'scantily-clad-female'
AND t.episode_nr >= 2
AND t.episode_nr < 5787;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 2
AND t.episode_nr < 7;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'clown-mask'
AND t.episode_nr >= 2
AND t.episode_nr < 8969;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 18
AND t.episode_nr < 44;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[es]'
AND k.keyword = 'shimmy'
AND t.episode_nr >= 2
AND t.episode_nr < 9302;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 8
AND t.episode_nr < 21;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'tragedy'
AND t.episode_nr >= 0
AND t.episode_nr < 3003;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'death-trap'
AND t.episode_nr >= 1
AND t.episode_nr < 3893;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'caged-bird'
AND t.episode_nr >= 1
AND t.episode_nr < 4342;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'professor'
AND t.episode_nr >= 1
AND t.episode_nr < 6956;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'psychiatrist'
AND t.episode_nr >= 4
AND t.episode_nr < 15745;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 7
AND t.episode_nr < 35;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[be]'
AND k.keyword = 'undressing'
AND t.episode_nr >= 1
AND t.episode_nr < 3710;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'oral-sex'
AND t.episode_nr >= 14
AND t.episode_nr < 4839;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 1
AND t.episode_nr < 6;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'elizabeth-i'
AND t.episode_nr >= 3
AND t.episode_nr < 576;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'father-daughter-relationship'
AND t.episode_nr >= 16
AND t.episode_nr < 21;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'loss-of-father'
AND t.episode_nr >= 6
AND t.episode_nr < 4916;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ph]'
AND k.keyword = 'dog-tag'
AND t.episode_nr >= 0
AND t.episode_nr < 10111;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'car-chase'
AND t.episode_nr >= 1
AND t.episode_nr < 4638;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'female-nudity'
AND t.episode_nr >= 9
AND t.episode_nr < 15;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 11
AND t.episode_nr < 13443;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'love'
AND t.episode_nr >= 2
AND t.episode_nr < 18;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'horse-drawn-carriage'
AND t.episode_nr >= 1
AND t.episode_nr < 8035;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'lamaze'
AND t.episode_nr >= 15
AND t.episode_nr < 12326;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 11
AND t.episode_nr < 10733;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'reference-to-richard-iii'
AND t.episode_nr >= 0
AND t.episode_nr < 3304;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 10
AND t.episode_nr < 23;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'episode-starts-with-sex'
AND t.episode_nr >= 5
AND t.episode_nr < 11;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'pistol'
AND t.episode_nr >= 0
AND t.episode_nr < 13474;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bonsai-tree'
AND t.episode_nr >= 4
AND t.episode_nr < 3808;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 3
AND t.episode_nr < 8;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[no]'
AND k.keyword = 'secretary'
AND t.episode_nr >= 1
AND t.episode_nr < 683;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[no]'
AND k.keyword = 'undressing'
AND t.episode_nr >= 5
AND t.episode_nr < 2336;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 3
AND t.episode_nr < 4;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'refracting-telescope'
AND t.episode_nr >= 12
AND t.episode_nr < 2669;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 9
AND t.episode_nr < 1291;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'playing-hard-to-get'
AND t.episode_nr >= 7
AND t.episode_nr < 6412;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 2;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 16
AND t.episode_nr < 20;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 1
AND t.episode_nr < 9;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'computer-animation'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 1
AND t.episode_nr < 6;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 5
AND t.episode_nr < 6;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'mile-high-club'
AND t.episode_nr >= 1
AND t.episode_nr < 9149;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'murder'
AND t.episode_nr >= 16
AND t.episode_nr < 33;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 9;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[nl]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-chested-male'
AND t.episode_nr >= 9
AND t.episode_nr < 11;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 3
AND t.episode_nr < 10902;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'factory-farming'
AND t.episode_nr >= 0
AND t.episode_nr < 178;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 16
AND t.episode_nr < 21;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'face-scratch'
AND t.episode_nr >= 1
AND t.episode_nr < 6329;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'woman-in-a-bikini'
AND t.episode_nr >= 0
AND t.episode_nr < 4644;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'outlaw-gang'
AND t.episode_nr >= 10
AND t.episode_nr < 2617;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'murder'
AND t.episode_nr >= 2
AND t.episode_nr < 47;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'reference-to-jimmy-hoffa'
AND t.episode_nr >= 5
AND t.episode_nr < 11624;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ca]'
AND k.keyword = 'police-boat'
AND t.episode_nr >= 5
AND t.episode_nr < 11470;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[it]'
AND k.keyword = 'convulsion'
AND t.episode_nr >= 2
AND t.episode_nr < 475;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 10
AND t.episode_nr < 18;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'sex'
AND t.episode_nr >= 8
AND t.episode_nr < 25;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'male-nudity'
AND t.episode_nr >= 4
AND t.episode_nr < 23;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'disloyalty'
AND t.episode_nr >= 6
AND t.episode_nr < 9073;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'destruction-of-property'
AND t.episode_nr >= 0
AND t.episode_nr < 12480;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 50
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sex'
AND t.episode_nr >= 18
AND t.episode_nr < 136;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'hell'
AND t.episode_nr >= 11
AND t.episode_nr < 10944;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[ie]'
AND k.keyword = 'dysentery'
AND t.episode_nr >= 6
AND t.episode_nr < 2135;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'murder'
AND t.episode_nr >= 6
AND t.episode_nr < 11;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[au]'
AND k.keyword = 'con'
AND t.episode_nr >= 4
AND t.episode_nr < 8992;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 4
AND t.episode_nr < 10;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'based-on-novel'
AND t.episode_nr >= 7
AND t.episode_nr < 17;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sex'
AND t.episode_nr >= 6
AND t.episode_nr < 8;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[de]'
AND k.keyword = 'murder'
AND t.episode_nr >= 8
AND t.episode_nr < 9;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[jp]'
AND k.keyword = 'vampire'
AND t.episode_nr >= 0
AND t.episode_nr < 2427;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'medicine-man'
AND t.episode_nr >= 3
AND t.episode_nr < 802;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 11
AND t.episode_nr < 16;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 15
AND t.episode_nr < 18;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'independent-film'
AND t.episode_nr >= 10
AND t.episode_nr < 260;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[hu]'
AND k.keyword = 'diner'
AND t.episode_nr >= 15
AND t.episode_nr < 2450;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'murder'
AND t.episode_nr >= 8
AND t.episode_nr < 14;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'bare-breasts'
AND t.episode_nr >= 5
AND t.episode_nr < 17;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[fr]'
AND k.keyword = 'character-name-in-title'
AND t.episode_nr >= 6
AND t.episode_nr < 19;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[gb]'
AND k.keyword = 'sunglasses'
AND t.episode_nr >= 3
AND t.episode_nr < 6104;",204,/*+  SeqScan(t) SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexScan(an person_id_aka_name) IndexOnlyScan(n name_pkey) NestLoop(k mk) HashJoin(t k mk) NestLoop(t k mk mc) NestLoop(t k mk mc cn) NestLoop(t k mk mc cn ci) NestLoop(t k mk mc cn ci an) NestLoop(t k mk mc cn ci an n) Leading(((((((t (k mk)) mc) cn) ci) an) n)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'sequel'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
"SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an,
   cast_info AS ci,
   company_name AS cn,
   keyword AS k,
   movie_companies AS mc,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE an.person_id = n.id
AND n.id = ci.person_id
AND ci.movie_id = t.id
AND t.id = mk.movie_id
AND mk.keyword_id = k.id
AND t.id = mc.movie_id
AND mc.company_id = cn.id
AND an.person_id = ci.person_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mc.movie_id = mk.movie_id
AND cn.country_code = '[us]'
AND k.keyword = 'computer-animation'
AND t.episode_nr >= 5
AND t.episode_nr < 100;",63,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(ci movie_id_cast_info) IndexOnlyScan(n name_pkey) IndexScan(an person_id_aka_name) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t mc) NestLoop(k mk t mc cn) NestLoop(k mk t mc cn ci) NestLoop(k mk t mc cn ci n) NestLoop(k mk t mc cn ci n an) Leading((((((((k mk) t) mc) cn) ci) n) an)) */
