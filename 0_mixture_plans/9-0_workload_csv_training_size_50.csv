query,plan_id,plan_content
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Tanya Siminov)', '(burro wrangler)', '(bus driver)', '(as Jorge Robles)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%U%' OR mc.note LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1916 AND 1973;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Terri Starr)', '(as May Geraci)', '(1986-87)', '(as Jean Beaudain)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%0%' OR mc.note LIKE '%n%')
AND n.gender = 'f'
AND n.name LIKE '%,%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1991 AND 2020;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2008 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(uncredited)', '(written by)', '(written by)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%C%' OR mc.note LIKE '%worldwide%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(voice)', '(executive producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%DVD%')
AND n.gender = 'f'
AND n.name LIKE '%Kristin%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1916 AND 2002;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice) (as Gil Anderson)', '(programme adviser)', '(as K.M. Sprunt Jr)', '(as La Singla)', '(as Jim Burton)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%s%' OR mc.note LIKE '%,%')
AND n.gender = 'f'
AND n.name LIKE '%n%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2016;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(production accountant)', '(production accountant)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%association%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%s%' OR mc.note LIKE '%with%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1952 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice: English version)', '(voice: English version)', '(voice: English version)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2011%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1954 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(executive producer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND n.gender = 'f'
AND n.name LIKE '%Roger%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1974 AND 1978;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Dino Hodzic)', '(as Dimce Gesevski)', '(as John Tan)', '(as Jarek Zawadko)')
AND cn.country_code = '[eg]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%a%' OR mc.note LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 1951;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1961%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(as Gritte Agatha)', '(uncredited)', '(trailer)', '(puppeteer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%with%')
AND n.gender = 'm'
AND n.name LIKE '%Amato%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1929 AND 1997;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Brain McCabe)', '(as R. Vasilevsky)', '(Ft. Hedley CO)', '(tv ad promotion)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1%' OR mc.note LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1921 AND 1950;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(written by)', '(creator)', '(voice)', '(creator)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%Fremantlemedia%')
AND n.gender = 'm'
AND n.name LIKE '%Sergey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(credit only)', '(voice)', '(voice)', '(uncredited)', '(unspecified crew member)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%credit%' OR mc.note LIKE '%DVD%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 1979;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1914%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2009;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Mike Badalucco)', '(as Syd Black)', '(Rockshow Concert)', '(as S. NovÃ¡kovÃ¡)', '(elevator crew)')
AND cn.country_code = '[gr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%B%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2009;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2006 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(production assistant)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%Germany%')
AND n.gender = 'm'
AND n.name LIKE '%Chan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1937 AND 1969;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%DVD%')
AND n.gender = 'm'
AND n.name LIKE '%MuÃ±oz%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1962 AND 2001;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%N%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE 'H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(creator)', '(uncredited)', '(supervising producer)', '(co-producer)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%with%' OR mc.note LIKE '%in%')
AND n.gender = 'f'
AND n.name LIKE '%Wayne%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2004 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(production coordinator)', '(uncredited)', '(executive producer)', '(production coordinator)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%e%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Rory%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(as Vinnie Langdon)', '(as Pam Nemmo)', '(it support)', '(as Dermot Cronin)')
AND cn.country_code = '[pr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%e%' OR mc.note LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1919 AND 1950;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(segment ""Yvan Attal"")', '(news consultant)', '(as Irving Lazar)', '(as Frank H. Clark)', '(as Cliff Stine)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%i%' OR mc.note LIKE '%a%')
AND n.gender = 'f'
AND n.name LIKE '%e%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1927 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2001%' OR mc.note LIKE '%as%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1952 AND 1996;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Tony)', '( Kevin''s Father)', '(as A. Presnetsov)', '(as Sarah Keith)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%l%' OR mc.note LIKE '%t%')
AND n.gender = 'f'
AND n.name LIKE '%a%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1954 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Anton Algrang)', '(as Peter Price)', '(Zaiton''s mother)', '(as Charles Haas)', '(as Ines Fancevic)')
AND cn.country_code = '[de]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%n%' OR mc.note LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND n.gender = 'f'
AND n.name LIKE '%Jenny%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%through%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(archive footage)', '(uncredited)', '(voice)', '(production coordinator)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%Germany%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1958%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1986 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Larry)', '(as Jimmy Chiu)', '(ultimate engineer)', '(as Roy Ayers)', '(press: Slovenia)')
AND cn.country_code = '[ar]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1926 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Janne Ahlgren)', '(as John Ryan)', '(as Nuuuli Brown)', '(as Dan Minahan)', '(as Pam Britton)')
AND cn.country_code = '[se]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%e%' OR mc.note LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1904 AND 2016;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(animal coordinator)', '(voice)', '(voice)', '(actors director)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%t%' OR mc.note LIKE '%USA%')
AND n.gender = 'f'
AND n.name LIKE '%Albert%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1981 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'm'
AND n.name LIKE '%Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Eric Leroy [Pee Wee] Burdette)', '(as Muyiwa Ademol)', '(play ""Moumou"")', '(as Heinz LÃ¼ck)', '(as Fernando Paiz)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1892 AND 2016;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%A%' OR mc.note LIKE '%2008%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2004;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(producer)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%Brazil%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2009;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage) (uncredited)', '(as Tovia Borodyn)', '(Bruce Barton)', '(as U Par Gyi)', '(portraits: Elvis)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%U%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1978 AND 1998;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Leno%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1983 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(schedule mistress)', '(as Codi Star)', '(as Willie Tsang)', '(as Leslie Irving)')
AND cn.country_code = '[gr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%3%' OR mc.note LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%w%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1951 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%in%' OR mc.note LIKE '%1978%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1963 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(producer)', '(producer)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%media%')
AND n.gender = 'm'
AND n.name LIKE '%Joseph%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%p%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Vanessa%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(Judge)', '(as Rudi Pogats)', '(as Tinku Thakur)', '(as I.Pismenny)', '(as Chang)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1907 AND 1993;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Lenka Danoff)', '(segment ""Huawei"")', '(characters created by) (as Sir Arthur Conan Doyle)', '(uncredited)', '(co-producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Herschel%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1983 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[de]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2009%' OR mc.note LIKE '%1956%')
AND n.gender = 'm'
AND n.name LIKE '%b%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1968 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(production assistant)', '(voice)', '(production assistant)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%in%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1957 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Sam Nagakane)', '(as le chien Bambi)', '(as Pamela Kesler)', '(as Daniel Magner)', '(as Cameron A.)')
AND cn.country_code = '[ar]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%t%' OR mc.note LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1996 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as JC Kenny)', '(as Ye Qingyuan)', '(as The Usual Lot)', '(as Aguettand)', '(First Millionaire)')
AND cn.country_code = '[ca]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%t%' OR mc.note LIKE '%T%')
AND n.gender = 'f'
AND n.name LIKE '%.%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1889 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2003%')
AND n.gender = 'm'
AND n.name LIKE '%Ross%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1944 AND 1991;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Edward Bell)', '(as Kelly M. Dixon)', '(Matron)', '(as Antcar)', '(as Rob Koch)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(%' OR mc.note LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1970 AND 1984;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(associate producer)', '(executive producer)', '(archive footage)', '(archive footage)', '(production assistant)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%s%' OR mc.note LIKE '%with%')
AND n.gender = 'f'
AND n.name LIKE '%a%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1993 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'm'
AND n.name LIKE '%F%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(Prudence)', '(as Frank Cee)', '(as Despina)', '(as DanÃ« Peterson)', '(m)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%d%' OR mc.note LIKE '%t%')
AND n.gender = 'f'
AND n.name LIKE '%r%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1983 AND 2006;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[pt]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%f%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE '%Ang%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'm'
AND n.name LIKE 'D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Groza Wesco)', '(as MÃ¡ria IllyÃ©s)', '(creator) (2013)', '(as Cody Whirler)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%t%' OR mc.note LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1923 AND 2002;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Denis Bracini)', '(as Rita Smyth)', '(Conlon''s henchman)', '(as David G. March)', '(as Steven Hawksby)')
AND cn.country_code = '[lv]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%d%' OR mc.note LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%B%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2019;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Oliver Skene)', '(Amit & Shankar)', '(as J. Potocki)', '(as Black Shadow)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%a%' OR mc.note LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1931 AND 2017;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice) (uncredited)', '(as Devera Marcus)', '(as Debra Murphy)', '(segment ""Crying"")', '(as Rex Velasco)')
AND cn.country_code = '[au]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%r%' OR mc.note LIKE '%2%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 1984;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as A. Brooks)', '(as Sindi Rome)', '(as JB Meijers)', '(as Bly Straube)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2%' OR mc.note LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 2017;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(production assistant)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND n.gender = 'm'
AND n.name LIKE '%Brown%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(as Linda Hemming)', '(as Angel Barr)', '(grandfather)', '(as John Morse)')
AND cn.country_code = '[es]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%a%' OR mc.note LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1948 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%NTSC%' OR mc.note LIKE '%2008%')
AND n.gender = 'm'
AND n.name LIKE '%Greg%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1994 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%n%' OR mc.note LIKE '%with%')
AND n.gender = 'm'
AND n.name LIKE '%Seki%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1963 AND 2006;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Billy Moran)', '(as Marco Z)', '(prison advisor)', '(parts 4-6)', '(ghost consultant)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1917 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE '%Tim%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%p%')
AND n.gender = 'm'
AND n.name LIKE '%Ronald%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1995 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%Bert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Mohamed Sayari)', '(as Denis Lee)', '(as Ruth Mc Devitt)', '(as Hyrise)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%d%' OR mc.note LIKE '%(%')
AND n.gender = 'f'
AND n.name LIKE '%M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1968 AND 2020;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Pam)', '(as Kevin Graves)', '(as Allen Marlowe)', '(as Carrie Wallace)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%d%' OR mc.note LIKE '%w%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1904 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Nicole Noir)', '(as David Armin)', '(as J.R. Reed)', '(as Marc Goodall)', '(as Eugene R. Wood)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%8%' OR mc.note LIKE '%)%')
AND n.gender = 'f'
AND n.name LIKE '%o%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1976 AND 1998;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'f'
AND n.name LIKE 'G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(voice)', '(supervising producer)', '(associate producer)', '(voice)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%Japan%')
AND n.gender = 'm'
AND n.name LIKE '%Adam%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(producer)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1969%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2004;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Wallice%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1944 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as AndrÃ© Gower)', '(as Phil Battley)', '(as Merrit Yonka)', '(as Robert Boatman)')
AND cn.country_code = '[gb]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1921 AND 1953;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(internet campaign)', '(""The Alphabet"")', '(based on story by)', '(as S. Mojic)')
AND cn.country_code = '[no]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1%' OR mc.note LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1925 AND 1989;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%Production%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Godfrey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1969 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%N%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(writer)', '(writer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2011%' OR mc.note LIKE '%VHS%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(with Bi-2)', '(as Bill Cartlidge)', '(as Roadkill)', '(as Jenny Erotica)')
AND cn.country_code = '[br]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%7%')
AND n.gender = 'f'
AND n.name LIKE '%g%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1934 AND 1986;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(production coordinator)', '(script supervisor)', '(production coordinator)', '(uncredited)', '(script supervisor)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%co%')
AND n.gender = 'f'
AND n.name LIKE '%Roger%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1951 AND 1993;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Paul Jesseman)', '(as Annette Souvet)', '(as Mofa Pan Duro)', '(as Mabel May-Jong)', '(test pilot)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%V%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1915 AND 2019;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'm'
AND n.name LIKE 'S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Yvonne Hotz)', '(as Frank Danuelas)', '(as La bodoquito)', '(as Jon Inciarte)')
AND cn.country_code = '[br]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%a%' OR mc.note LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1931 AND 1955;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Bill Schilling)', '(as Lord Stow Hill)', '(as Seydina Mboup)', '(as A. Grishin)', '(as Anneke Putri)')
AND cn.country_code = '[fi]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%i%' OR mc.note LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1920 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(writer)', '(archive footage)', '(writer)', '(writer)', '(archive footage)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%co%' OR mc.note LIKE '%in%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(as H. Kestin)', '(as Howard Smith)', '(as Rodney Johnson)', '(ship technician)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1891 AND 2017;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Chris Combs)', '(as Katya)', '(as Mike Ward)', '(as Iya Rainbow)', '(as D''Arcy Erokan)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(%' OR mc.note LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1930 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice: English version)', '(voice: English version)', '(written by)', '(voice: English version)', '(creator)')
AND cn.country_code = '[gb]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1995%' OR mc.note LIKE '%TV%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Hardy Kruger)', '(as Koel)', '(as April Chapple)', '(The Moody Blues)', '(as Lew Meahan)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%S%' OR mc.note LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%d%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1930 AND 1999;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%i%' OR mc.note LIKE '%2009%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1918 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(as Laumonier)', '(as DJ Polymorphic)', '(as Loles GarcÃ­a)', '(as Thuraya Masri)')
AND cn.country_code = '[fi]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1914 AND 1998;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1970%' OR mc.note LIKE '%TV%')
AND n.gender = 'm'
AND n.name LIKE '%Friedman%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2009;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'm'
AND n.name LIKE '%I%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(voice)', '(associate producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%co%' OR mc.note LIKE '%1914%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%2001%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(uncredited)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%La%' OR mc.note LIKE '%Hungary%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(producer)', '(voice)', '(executive producer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%in%' OR mc.note LIKE '%2013%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1969 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as J. Boone)', '(as Kate Hateley)', '(novel ""Moonwebs"")', '(as Victoria Saez)')
AND cn.country_code = '[za]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%t%' OR mc.note LIKE '%a%')
AND n.gender = 'f'
AND n.name LIKE '%a%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1985 AND 2016;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE 'E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'm'
AND n.name LIKE '%Yo%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE 'Q%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2005%' OR mc.note LIKE '%with%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(producer)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Medeiros%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%An%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(head writer)', '(executive producer)', '(head writer)', '(voice)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2008%' OR mc.note LIKE '%TV%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(producer)', '(uncredited)', '(production coordinator)')
AND cn.country_code = '[au]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%DVD%')
AND n.gender = 'm'
AND n.name LIKE '%Oliver%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND n.gender = 'f'
AND n.name LIKE '%R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Marc Power)', '(as Lew Prygunow)', '(as Nuel Nuval)', '(as Jesper Rofeldt)')
AND cn.country_code = '[gr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%e%' OR mc.note LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%a%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1891 AND 2003;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%with%' OR mc.note LIKE '%TV%')
AND n.gender = 'm'
AND n.name LIKE '%Avila%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Blu-ray)%')
AND n.gender = 'f'
AND n.name LIKE '%R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(2001, 2003, 2005)', '(as Yang Mi)', '(as George Fields)', '(regional dialogue)', '(as Marie Polo)')
AND cn.country_code = '[dk]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%0%' OR mc.note LIKE '%2%')
AND n.gender = 'm'
AND n.name LIKE '%u%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1978 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'm'
AND n.name LIKE 'L%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Edmund Dalby)', '(creator) (1963)', '(as Kid)', '(as Wei-yun Tseng)', '(as Chan Ka Wo)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%S%' OR mc.note LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1888 AND 1920;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(as B.M. Turner)', '(as CsÃµgÃ¶r Tibi)', '(as Bob Hale)', '(as Leo Wayne)')
AND cn.country_code = '[ar]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%l%' OR mc.note LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 2001;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(credit only)', '(credit only)', '(credit only)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2006%')
AND n.gender = 'm'
AND n.name LIKE '%Young%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1991 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Richard E. Hirschfeld)', '(as Eirini Pappa)', '(as Arto Reunanen)', '(as Pietro Dizanno)', '(bond consultant)')
AND cn.country_code = '[nl]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%0%' OR mc.note LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2008;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Eivind Harum)', '(as Asad)', '(play ""Dona Xepa"")', '(as Andris Oshin)', '(as Charlie Hustle)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%9%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1946 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Andrea Ros Buerrero)', '(as Mr. Newburg)', '(as Manel SolÃ s)', '(as Pratap Potan)', '(as Mike Findlay)')
AND cn.country_code = '[hk]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%u%' OR mc.note LIKE '%2%')
AND n.gender = 'f'
AND n.name LIKE '%r%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1959 AND 2017;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%u%' OR mc.note LIKE '%VHS%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1947 AND 1990;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'm'
AND n.name LIKE '%An%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(writer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2003%')
AND n.gender = 'm'
AND n.name LIKE '%Simon%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2001;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Japan)%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(producer)', '(producer)', '(co-producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1958%')
AND n.gender = 'm'
AND n.name LIKE '%Thomas%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1982 AND 2006;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Max Elfeldt)', '(as Andy Worm)', '(as Mr. Richmond)', '(as Lockie Jeffery)', '(as Bruce LaNoil)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(%' OR mc.note LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%f%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 2014;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(VHS)%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as The Rodik Twins)', '(''Nana'')', '(as Jim)', '(as Maggie Stuart)', '(prize team 2)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%)%' OR mc.note LIKE '%(%')
AND n.gender = 'f'
AND n.name LIKE '%,%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1912 AND 1971;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(presents)%')
AND n.gender = 'f'
AND n.name LIKE '%A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2009 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(credit only)', '(credit only)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%DVD%')
AND n.gender = 'f'
AND n.name LIKE '%Debbie%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1979 AND 1999;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Janette)', '(as Jimmy Liu)', '(cachetes)', '(as Laura Menini)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%L%' OR mc.note LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1880 AND 1948;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Evalina Fernandez)', '(editor: web)', '(loop group leader)', '(as Lulu Chang)', '(as J.E.N. Cooper)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%c%' OR mc.note LIKE '%h%')
AND n.gender = 'f'
AND n.name LIKE '%e%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1952 AND 2019;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(uncredited)', '(executive producer)', '(production assistant)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%in%' OR mc.note LIKE '%DVD%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1917 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Macie Taylor)', '(as Carlton Lynx)', '(segment ""Top Dog"")', '(as Otto Mellis)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%l%' OR mc.note LIKE '%(%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1955 AND 2015;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(200%)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(credit only)', '(voice)', '(producer)', '(uncredited)', '(associate producer)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Herschel%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1961 AND 2003;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%TV%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2012;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(written by)', '(uncredited)', '(co-executive producer)', '(production coordinator)', '(voice)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%2001%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 2013;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%Geneon%' OR mc.note LIKE '%USA%')
AND n.gender = 'f'
AND n.name LIKE '%Ho%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1978 AND 2009;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Arturo Garcia)', '(as V. VlasÃ¡kovÃ¡)', '(as Summers)', '(as Ofelia Acosta)')
AND cn.country_code = '[fi]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%r%' OR mc.note LIKE '%(%')
AND n.gender = 'f'
AND n.name LIKE '%a%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1943 AND 1982;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as S.N. Patankar)', '(as Anthony Sharpe)', '(as Babi Ne'' Eman)', '(as Bessie Walsh)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%1%' OR mc.note LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1938 AND 2004;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(archive footage)', '(production coordinator)', '(executive producer)')
AND cn.country_code = '[jp]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%with%' OR mc.note LIKE '%2007%')
AND n.gender = 'm'
AND n.name LIKE '%Dick%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1916 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(as Jean-FranÃ§ois Porry)', '(script editor)', '(writer)', '(voice)', '(writer)')
AND cn.country_code = '[fr]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%with%' OR mc.note LIKE '%media%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1952 AND 2005;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(theatrical)%')
AND n.gender = 'm'
AND n.name LIKE '%Tim%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND n.gender = 'f'
AND n.name LIKE '%Baker%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1997 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as N. Polishchuk)', '(as Tony Reagan)', '(as Ronald Pitts)', '(as Mikkel)')
AND cn.country_code = '[pa]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%o%' OR mc.note LIKE '%7%')
AND n.gender = 'm'
AND n.name LIKE '%P%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1898 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND n.gender = 'f'
AND n.name LIKE '%H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%Bulgaria%')
AND n.gender = 'm'
AND n.name LIKE '%Trey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1983 AND 2000;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%theatrical%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 1995;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%p%' OR mc.note LIKE '%USA%')
AND n.gender = 'f'
AND n.name LIKE '%Ho%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2007 AND 2011;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(uncredited)', '(as Serge Hasdorf)', '(as Matt Franklin)', '(set equipment)', '(as Raymond Dandee)')
AND cn.country_code = '[ar]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%n%' OR mc.note LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1941 AND 1961;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND n.gender = 'f'
AND n.name LIKE 'I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(France)%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
"SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an,
 char_name AS chn,
 cast_info AS ci,
 company_name AS cn,
 movie_companies AS mc,
 name AS n,
 role_type AS rt,
 title AS t
WHERE ci.movie_id = t.id
 AND t.id = mc.movie_id
 AND ci.movie_id = mc.movie_id
 AND mc.company_id = cn.id
 AND ci.role_id = rt.id
 AND n.id = ci.person_id
 AND chn.id = ci.person_role_id
 AND an.person_id = n.id
 AND an.person_id = ci.person_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND mc.note IS NOT NULL 
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND n.gender = 'f'
AND n.name LIKE '%W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",56,/*+  SeqScan(n) IndexScan(an person_id_aka_name) IndexScan(ci person_id_cast_info) SeqScan(rt) IndexScan(chn char_name_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(t title_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt chn) NestLoop(n an ci rt chn mc) NestLoop(n an ci rt chn mc cn) NestLoop(n an ci rt chn mc cn t) Leading((((((((n an) ci) rt) chn) mc) cn) t)) */
