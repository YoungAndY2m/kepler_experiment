query,plan_id,plan_content
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Ho Sik Pak)', '(as Karen Chandler)', '(as Peter Windrum)', '(as Corinne Lorain)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%1%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1917 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(theatrical)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Andrea Miltnerova)', '(police services)', '(Axeman)', '(as Jos Pijls)', '(as Chike Okonkwo)')
AND cn.country_code = '[sg]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%1%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%a%')
AND n.gender = 'f'
AND n.name LIKE '%e%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1974 AND 2013;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2005;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%Pete%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2010 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%2010%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Eva%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(logger) (season 2)', '(as LucÃ­a Cabrera)', '(as Carlos Gomez)', '(as Lj. Drazenovic)')
AND cn.country_code = '[nl]'
AND it.info = 'budget'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%h%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%0%' OR mi.info LIKE '%6%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1954 AND 1994;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(uncredited)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'budget'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%media%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1936 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Dee%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 1997;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice)', '(producer)', '(writer)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Peter%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1949 AND 2006;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Scott Skversky)', '(as Q. MacLean)', '(as Jenni Smith)', '(as Ascen LÃ³pez)')
AND cn.country_code = '[gb]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%9%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1944 AND 2004;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%Stanley%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1969 AND 2009;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1944%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1981 AND 1994;",7,/*+  SeqScan(ci) IndexOnlyScan(an person_id_aka_name) SeqScan(rt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(ci an) HashJoin(ci an rt) NestLoop(ci an rt mc) NestLoop(ci an rt mc cn) NestLoop(ci an rt mc cn mi) HashJoin(ci an rt mc cn mi it) NestLoop(ci an rt mc cn mi it chn) NestLoop(ci an rt mc cn mi it chn n) NestLoop(ci an rt mc cn mi it chn n t) Leading((((((((((ci an) rt) mc) cn) mi) it) chn) n) t)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Miss Piss)', '(as Marlene Henny)', '(as C. Recors)', '(as Ben Willem)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%9%' OR mc.note LIKE '%U%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1924 AND 2020;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Q%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(production assistant)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%association%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1972 AND 2009;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%media%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%not%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 2006;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(segment ""1915"")', '(as Phyllis Diller)', '(as Long)', '(first unit medic)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1896 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jimmy%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%An%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2014;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%with%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Tom%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1984 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(script supervisor)', '(voice)', '(creator)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%1939%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')
AND n.gender = 'f'
AND n.name LIKE '%Robert%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1984 AND 2011;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(2006)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2000;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(theatrical)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Ray%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2009;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2006%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2006;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Susi Barth)', '(as Jo-Joo)', '(as Hanna Black)', '(QA manager)')
AND cn.country_code = '[gb]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%a%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1943 AND 2019;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Jadzia Nalepa)', '(The Skipper)', '(as Louis Zeto)', '(the terror)')
AND cn.country_code = '[us]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1940 AND 2001;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(voice)', '(producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2013%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as FÃ©lix Franchy)', '(night watch)', '(as Sneila)', '(as Sue Garay)')
AND cn.country_code = '[us]'
AND it.info = 'gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%3%' OR mc.note LIKE '%A%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%(%' OR mi.info LIKE '%,%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1917 AND 1995;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE 'M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Rob Mugge)', '(as Steve Rasch)', '(as Dr. Bechstein)', '(dramatist)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%d%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1900 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%35%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1997 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2004%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Ron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2013;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(archive footage)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%video%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%are%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Mike%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2002;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(writer)', '(producer)')
AND cn.country_code = '[tr]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%o%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Williams%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Barry M. Lando)', '(as Richard Dahm)', '(as Indriati Iskak)', '(as Michele Mais)')
AND cn.country_code = '[nl]'
AND it.info = 'weekend gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%?%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1946 AND 2017;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Eugene O. Roth)', '(as G. Chelidze)', '(as Hristo Neykov)', '(as Katja Schenk)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%h%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%T%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2004;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE '%Tim%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%Mark%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2006;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%X%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(Blu-ray)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE 'Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Andrea Miltnerova)', '(Michel)', '(Cowboy)', '(as DJ Neil)', '(as Val Biscoglio)')
AND cn.country_code = '[nl]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%N%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%n%')
AND n.gender = 'f'
AND n.name LIKE '%,%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1893 AND 2011;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(written by)', '(writer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%re%')
AND n.gender = 'm'
AND n.name LIKE '%Smith%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1920 AND 2006;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2007)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 2001;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Sara B. Charno)', '(as Jaques Ardnt)', '(as Maria Swallowa)', '(Dad)')
AND cn.country_code = '[gb]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%d%' OR mc.note LIKE '%K%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1967 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(2007)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%ve%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Ken%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2009 AND 2013;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Andy Tenant)', '(as Nina Kronjager)', '(cleaner)', '(as Raymond Reed)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%1%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%''%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1915 AND 2000;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(executive producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2003%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%the%')
AND n.gender = 'f'
AND n.name LIKE '%Jim%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1964 AND 1994;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(co-producer)', '(co-producer)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1967 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Ross%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1947 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as J. Nermut)', '(as Lazar)', '(as GyÃµry Emil)', '(as Jane Norris)')
AND cn.country_code = '[nl]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1963 AND 1999;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1940 AND 1991;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice: English version)', '(production assistant)', '(creator)', '(production assistant)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%p%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Robin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2003;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(executive producer)', '(uncredited)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%USA%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1999 AND 2004;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(Ho)', '(segment ""Dylan"")', '(play ""Syn naroda"")', '(saxophone)')
AND cn.country_code = '[gb]'
AND it.info = 'weekend gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1986 AND 1996;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Vlad Vetrov)', '(roommate)', '(trapeze advisor)', '(as Pamela Larson)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%d%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1911 AND 2001;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2000;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(executive producer)', '(voice: Japanese version)', '(head writer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%1935%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2004 AND 2006;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(VHS)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2014;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Michael Corby)', '(as Dan Mason)', '(as Merce Jimenez)', '(as JP Romano)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%H%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%M%' OR mi.info LIKE '%p%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1938 AND 2020;",17,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(rt role_type_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) NestLoop(cn mc) NestLoop(cn mc t) NestLoop(cn mc t ci) NestLoop(cn mc t ci rt) NestLoop(cn mc t ci rt n) NestLoop(cn mc t ci rt n mi) NestLoop(cn mc t ci rt n mi it) NestLoop(cn mc t ci rt n mi it an) NestLoop(cn mc t ci rt n mi it an chn) Leading((((((((((cn mc) t) ci) rt) n) mi) it) an) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(uncredited)', '(production assistant)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%Well%')
AND n.gender = 'm'
AND n.name LIKE '%JoÃ£o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1906 AND 1986;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2006)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Tamara N Joy)', '(as Erik Berglund)', '(as Isabeu de R.)', '(segment ""Update"")')
AND cn.country_code = '[jp]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%h%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%1%')
AND n.gender = 'f'
AND n.name LIKE '%,%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1913 AND 2006;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%O%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(associate producer)', '(producer)', '(producer)', '(producer)')
AND cn.country_code = '[gr]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VHS%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%Amato%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1932 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Blu-ray)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE 'U%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(theatrical)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE 'Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Mike Ragan)', '(""Chewbacca"")', '(as Ron Martin)', '(as Will Packer)', '(Annabelle)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%U%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2%' OR mi.info LIKE '%K%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1935 AND 1991;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Yvonne Hotz)', '(as Frank Danuelas)', '(as La bodoquito)', '(as Jon Inciarte)')
AND cn.country_code = '[gb]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%f%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1888 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Jon Tams)', '(as The Devlins)', '(as Genis Loren)', '(as Big Show)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%t%' OR mc.note LIKE '%r%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1916 AND 1993;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Tania Strecker)', '(segment ""Raul"")', '(as Rammstein)', '(as Bob Irwin)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%w%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1953 AND 1994;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Michelle Malin)', '(as Janine Faye)', '(as Nickel Creek)', '(graphics layout)')
AND cn.country_code = '[ar]'
AND it.info = 'gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%A%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%8%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1963 AND 1995;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(production assistant)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Gregor Trass)', '(video conversion)', '(as Gigliola Reyna)', '(as Juan Doria)')
AND cn.country_code = '[au]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%H%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1979 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%r%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Aaron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1934 AND 1998;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2001%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%from%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Hwang%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1980 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'm'
AND n.name LIKE '%Yo%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(general organiser)', '(as Joy Wener)', '(principal tester)', '(security: night)')
AND cn.country_code = '[gb]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%,%' OR mi.info LIKE '%H%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1946 AND 2019;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(theatrical)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2010%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Aaron%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 1992;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'M%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(theatrical)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'm'
AND n.name LIKE '%Yo%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Monika Tajma)', '(as A. Inozemtsev)', '(as Dave Buzzota)', '(as Celia de Burgh)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%n%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1938 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Fred Wagner)', '(as J.S. Kollar)', '(as Almen Wong)', '(story and manual)')
AND cn.country_code = '[gb]'
AND it.info = 'screenplay-teleplay'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%3%' OR mc.note LIKE '%a%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%9%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1953 AND 2003;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Ed Le Sainte)', '(as Sharon Lee)', '(publicity artist)', '(as Ilosvay Kati)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1%' OR mc.note LIKE '%s%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%f%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1953 AND 2002;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%S%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%1944%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1992 AND 2004;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE 'V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[jp]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%2010%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%E%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2002 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Patricia Gaddy)', '(as O. Abdulov)', '(as Dave Ratajczak)', '(as Jean Perimony)')
AND cn.country_code = '[gb]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%f%')
AND n.gender = 'm'
AND n.name LIKE '%T%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1956 AND 2000;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Rick Callinan)', '(as Nino Celeste)', '(as Zh. Bolotova)', '(2004 Spec Pilot 2)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%o%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1928 AND 2016;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%worldwide%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%is%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%Q%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE 'N%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%VHS%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1989 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Wez)', '(as Dara Modglin)', '(as Sammy Bright)', '(as Allan Tower)')
AND cn.country_code = '[us]'
AND it.info = 'weekend gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%U%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%3%' OR mi.info LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 1995;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(voice: English version)', '(voice: English version)', '(voice: English version)', '(credit only)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Ãric Thomas)', '(as Gunter Tiersch)', '(press manager)', '(as Miss Berner)')
AND cn.country_code = '[br]'
AND it.info = 'weekend gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%H%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%3%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1979 AND 2014;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'P%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(epk: sound)', '(as Hans A. Lettow)', '(as Sau-yin Lee)', '(as J.F. Gurbindo)')
AND cn.country_code = '[au]'
AND it.info = 'quotes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%S%' OR mc.note LIKE '%u%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1987 AND 2016;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Sascha Strange)', '(as Otto Ferrari)', '(as Barri Pitersen)', '(as Pam Miras)')
AND cn.country_code = '[ar]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(%' OR mc.note LIKE '%n%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%:%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1937 AND 1994;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Albert%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2003 AND 2005;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Jack W. Fuqua)', '(as May Mersch)', '(as Perle Walter)', '(8 aÃ±os)')
AND cn.country_code = '[nl]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%d%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1985 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Ata Hayati)', '(as Peter Wimmer)', '(as Dr. H. Pal)', '(as Andria Patet)')
AND cn.country_code = '[nl]'
AND it.info = 'opening weekend'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%N%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%y%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1950 AND 2001;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(executive producer)', '(executive creative director)', '(writer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1916%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%E%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1970 AND 2013;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Alex LÃ¶ffler)', '(as Dice)', '(checkpoint)', '(as Ivaylo Mimchev)')
AND cn.country_code = '[nl]'
AND it.info = 'opening weekend'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%,%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1925 AND 1992;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(uncredited)', '(uncredited)', '(writer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%original%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Jeff%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1960 AND 2006;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Larry Schuler)', '(as William White)', '(as Ranata S. Aly)', '(as Biru Robinson)')
AND cn.country_code = '[es]'
AND it.info = 'budget'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%0%' OR mi.info LIKE '%4%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice)', '(head writer)', '(executive producer)', '(head writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%with%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%RAT%')
AND n.gender = 'm'
AND n.name LIKE '%Williams%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2001;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(voice)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2006%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%Phoebe%')
AND n.gender = 'm'
AND n.name LIKE '%Ali%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2009;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(producer)', '(producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%care%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1964 AND 1993;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'm'
AND n.name LIKE '%Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(credit only)', '(credit only)', '(voice: English version)', '(voice: English version)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%2004%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%theatrical%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%Black%')
AND n.gender = 'm'
AND n.name LIKE '%Brian%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1921 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Layla)', '(as Ye. Tsymbal)', '(as Hossein Mahjub)', '(as Karim Latiff)')
AND cn.country_code = '[au]'
AND it.info = 'languages'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%V%' OR mc.note LIKE '%l%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1959 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(2007)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'V%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'm'
AND n.name LIKE 'Y%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(2006)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2007;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(2006)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'K%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%DVD%' OR mc.note LIKE '%Hungary%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1995 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(writer)', '(writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Black%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1912 AND 1964;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(VHS)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE 'E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2014;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(producer)', '(uncredited)', '(producer)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1912%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%PFM%')
AND n.gender = 'f'
AND n.name LIKE '%Michael%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1977 AND 1999;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%TV%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Chris%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%S%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(theatrical)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE '%T%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Tim%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(episode 1 - 130)', '(as Lynda GuÃ©gan)', '(as Wolf Haley)', '(as Jessie Eastmen)')
AND cn.country_code = '[se]'
AND it.info = 'weekend gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%t%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%)%' OR mi.info LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1898 AND 2015;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%n%')
AND n.gender = 'f'
AND n.name LIKE '%Tom%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2007 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Blu-ray)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%B%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(VHS)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2007)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'm'
AND n.name LIKE 'Z%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as G. Tokadze)', '(as Marcel Moreau)', '(fight instructor)', '(as Laska Winter)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%U%' OR mc.note LIKE '%i%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%K%')
AND n.gender = 'm'
AND n.name LIKE '%H%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1889 AND 1968;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(200%)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(locations) (2005)', '(as Oliver Alvarez)', '(as Evil-Dog)', '(as T. Lyberakis)')
AND cn.country_code = '[fr]'
AND it.info = 'adaption'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%9%' OR mc.note LIKE '%1%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%x%' OR mi.info LIKE '%8%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1976 AND 1996;",7,/*+  SeqScan(ci) IndexOnlyScan(an person_id_aka_name) SeqScan(rt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(ci an) HashJoin(ci an rt) NestLoop(ci an rt mc) NestLoop(ci an rt mc cn) NestLoop(ci an rt mc cn mi) HashJoin(ci an rt mc cn mi it) NestLoop(ci an rt mc cn mi it chn) NestLoop(ci an rt mc cn mi it chn n) NestLoop(ci an rt mc cn mi it chn n t) Leading((((((((((ci an) rt) mc) cn) mi) it) chn) n) t)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(as Nancy Trites)', '(assistant medic)', '(April-May 1989)', '(dramatic report)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%s%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1916 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(voice)', '(executive producer)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%in%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%E%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(''Nige'' segment)', '(as Bedia Muvahit)', '(as Len Forest)', '(King Arthur)')
AND cn.country_code = '[nl]'
AND it.info = 'taglines'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%s%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%.%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1975 AND 2016;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Tabitha Bleu)', '(as J. Nikolic)', '(as Jimmy Nah)', '(segment ""Maxine"")')
AND cn.country_code = '[br]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%a%' OR mc.note LIKE '%(%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%M%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 1995;",17,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(rt role_type_pkey) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) NestLoop(cn mc) NestLoop(cn mc t) NestLoop(cn mc t ci) NestLoop(cn mc t ci rt) NestLoop(cn mc t ci rt n) NestLoop(cn mc t ci rt n mi) NestLoop(cn mc t ci rt n mi it) NestLoop(cn mc t ci rt n mi it an) NestLoop(cn mc t ci rt n mi it an chn) Leading((((((((((cn mc) t) ci) rt) n) mi) it) an) chn)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(episode 1.10)', '(banking customer)', '(journalist) (2007)', '(as Papir Magda)')
AND cn.country_code = '[gb]'
AND it.info = 'weekend gross'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%c%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1974 AND 1994;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(writer)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%2012%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Otto%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1973 AND 1981;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'm'
AND n.name LIKE 'D%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2000 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(production assistant)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%association%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%dwindling%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1951 AND 1961;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(co-production)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'm'
AND n.name LIKE '%U%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1990 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(writer)', '(writer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%VoD%' OR mc.note LIKE '%2009%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Johnny Cheng)', '(bottom)', '(student coach)', '(as Ione Morino)')
AND cn.country_code = '[es]'
AND it.info = 'book'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1897 AND 1993;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(2007)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'm'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Sile Harrower)', '(as Eugen Shuftan)', '(as Bert Botterman)', '(as Chen Kai Ge)')
AND cn.country_code = '[nl]'
AND it.info = 'opening weekend'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%(%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%b%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1902 AND 2000;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(worldwide)%' OR mc.note LIKE '%(VHS)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2008;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(writer)', '(voice: English version) (as Christopher R. Sabat)', '(writer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%Hungary%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Rob%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2007 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Andrea Miltnerova)', '(as Eric Delabarre)', '(as Yasha Louie)', '(as Sven PrÃ¼ver)', '(as Zia Moyheddin)')
AND cn.country_code = '[fi]'
AND it.info = 'tech info'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%0%' OR mc.note LIKE '%0%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%5%' OR mi.info LIKE '%C%')
AND n.gender = 'f'
AND n.name LIKE '%i%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1961 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(2007)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as DC Coles)', '(as Ariel Knights)', '(as Jose VivÃ³)', '(as Kaschouba)')
AND cn.country_code = '[nl]'
AND it.info = 'goofs'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%l%' OR mc.note LIKE '%d%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1932 AND 2004;",7,/*+  SeqScan(ci) IndexOnlyScan(an person_id_aka_name) SeqScan(rt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(t title_pkey) NestLoop(ci an) HashJoin(ci an rt) NestLoop(ci an rt mc) NestLoop(ci an rt mc cn) NestLoop(ci an rt mc cn mi) HashJoin(ci an rt mc cn mi it) NestLoop(ci an rt mc cn mi it chn) NestLoop(ci an rt mc cn mi it chn n) NestLoop(ci an rt mc cn mi it chn n t) Leading((((((((((ci an) rt) mc) cn) mi) it) chn) n) t)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%1999%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Jedi%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Welker%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2008 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Nancy DeMayo)', '(as Greg Kane)', '(as Luce Premer)', '(as Lynn)')
AND cn.country_code = '[gb]'
AND it.info = 'taglines'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%i%' OR mc.note LIKE '%e%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1946 AND 2015;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(Japan)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2015;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(writer)', '(writer)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%David%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1913 AND 2011;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(producer)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%USA%' OR mc.note LIKE '%Canada%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1998 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%Home%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%s%')
AND n.gender = 'f'
AND n.name LIKE '%George%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1981 AND 2006;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%scan%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%White%')
AND n.gender = 'm'
AND n.name LIKE '%B%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2011 AND 2013;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Charles Tamburro)', '(as Alison Rosen)', '(as Mohamed Kamara)', '(as Alvaro Moreno)', '(as Bourbon)')
AND cn.country_code = '[gb]'
AND it.info = 'book'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1%' OR mc.note LIKE '%1%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%g%' OR mi.info LIKE '%M%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1933 AND 2005;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(Atlanta Hawks)', '(as Bill Lucking)', '(prep coordinator)', '(staff: TV Tokyo)', '(MeÃ¡naois)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%V%' OR mc.note LIKE '%b%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%S%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1951 AND 2016;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%production%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Kevin%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1925 AND 2004;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(production assistant)', '(voice)', '(writer)', '(writer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%2007%' OR mc.note LIKE '%worldwide%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%is%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 2005 AND 2010;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(worldwide)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(France)%' OR mc.note LIKE '%(VHS)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2007;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(uncredited)', '(voice)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%co%' OR mc.note LIKE '%theatrical%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1945 AND 2003;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Whitby Hertford)', '(as Jeff Druce)', '(as Kasey F. Kirby)', '(as Rex Roth)', '(as Foy Martin)')
AND cn.country_code = '[ar]'
AND it.info = 'trivia'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%e%' OR mc.note LIKE '%1%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1981 AND 2009;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(presents)%' OR mc.note LIKE '%(Blu-ray)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2005 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(executive producer)', '(voice)', '(executive producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%TV%' OR mc.note LIKE '%DVD%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%White%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%Val%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1988 AND 1992;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(writer)', '(executive producer)', '(voice)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%1911%' OR mc.note LIKE '%USA%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Anthony%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Harry%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1971 AND 2012;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(unspecified crew member)', '(production assistant)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%in%' OR mc.note LIKE '%all%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%throwing%')
AND n.gender = 'm'
AND n.name LIKE '%J%'
AND rt.role = 'actor'
AND t.production_year BETWEEN 1965 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(as Andrea Miltnerova)', '(as V. Nesterov)', '(as Tom Dawson)', '(as Airelle Rebroc)', '(as Paolo Banana)')
AND cn.country_code = '[fi]'
AND it.info = 'runtimes'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%)%' OR mc.note LIKE '%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%0%' OR mi.info LIKE '%0%')
AND n.gender = 'f'
AND n.name LIKE '%a%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2012;",89,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexOnlyScan(chn char_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(rt role_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci n) NestLoop(mc cn t ci n chn) NestLoop(mc cn t ci n chn an) NestLoop(mc cn t ci n chn an rt) NestLoop(mc cn t ci n chn an rt mi) NestLoop(mc cn t ci n chn an rt mi it) Leading((((((((((mc cn) t) ci) n) chn) an) rt) mi) it)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 2000 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(theatrical)%' OR mc.note LIKE '%(USA)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%An%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1950 AND 2008;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
"SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
  movie_companies AS mc,
   movie_info AS mi,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mi.movie_id = ci.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND mc.note IS NOT NULL
AND (mc.note LIKE '%(Japan)%' OR mc.note LIKE '%(200%)%')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE 'H%'
AND rt.role = 'actress'
AND t.production_year BETWEEN 1990 AND 2010;",102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it) IndexScan(ci movie_id_cast_info) IndexOnlyScan(an person_id_aka_name) IndexOnlyScan(chn char_name_pkey) IndexScan(n name_pkey) IndexScan(rt role_type_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t mi) HashJoin(mc cn t mi it) NestLoop(mc cn t mi it ci) NestLoop(mc cn t mi it ci an) NestLoop(mc cn t mi it ci an chn) NestLoop(mc cn t mi it ci an chn n) NestLoop(mc cn t mi it ci an chn n rt) Leading((((((((((mc cn) t) mi) it) ci) an) chn) n) rt)) */
