query,plan_id,plan_content
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%t%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%a%')
AND k.keyword IN ('fight', 'puritan', 'stylist', 'thoroughbred-racing', 'hit-with-a-ruler')
AND kt.kind = 'movie'
AND t.production_year > 1941;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%p%'
AND chn.name NOT LIKE '%o%'
AND (chn.name LIKE '%c%' OR chn.name LIKE '%n%')
AND k.keyword IN ('village', 'truck-in-river', 'reckless-flying', 'catholic-bishop', 'sexual-freedom')
AND kt.kind = 'movie'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1964;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Wilke%'
AND (chn.name LIKE '%Lester%' OR chn.name LIKE '%f%')
AND k.keyword IN ('bare-breasts', 'sequel', 'number-in-title', 'number-in-title', 'non-fiction')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%l%'
AND chn.name NOT LIKE '%e%'
AND (chn.name LIKE '%c%' OR chn.name LIKE '%S%')
AND k.keyword IN ('voice-over-narration', 'almanac', 'mapuche-indian', 'lone-ranger-spoof', 'swinging-single')
AND kt.kind = 'movie'
AND t.production_year > 1984;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sequel', 'sequel', 'surrealism', 'number-in-title', 'father-son-relationship')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Markopulos%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%h%' OR chn.name LIKE '%Nelson%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1932;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%l%' OR chn.name LIKE '%©%')
AND k.keyword IN ('madrid-spain', 'surviving-holidays', 'east-end-hardman', 'crawfish', 'letter-read-aloud')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Rivera%' OR chn.name LIKE '%s%')
AND k.keyword IN ('search-for-gun', 'sense-memory', 'legitimate-defense', 'conical-hat', 'sahara')
AND kt.kind = 'movie'
AND t.production_year > 1997;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Carla%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1931;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%J%'
AND (chn.name LIKE '%n%' OR chn.name LIKE '%l%')
AND k.keyword IN ('airplane', 'kicks-off-shoes', 'ghota', 'canadian-wilderness', 'hava-nagila')
AND kt.kind = 'movie'
AND t.production_year > 1942;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('swimsuit-competition', 'flickering-light', 'flirting-with-a-patient', 'obedience', 'francisco-franco''s-double')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%7%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%Mike%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1933;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Artist%'
AND (chn.name LIKE '%Lindsay%' OR chn.name LIKE '%West%')
AND k.keyword IN ('father-son-relationship', 'family-relationships', 'blood', 'bare-chested-male', 'father-son-relationship')
AND kt.kind = 'episode'
AND t.production_year > 1906;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%i%'
AND chn.name NOT LIKE '%o%'
AND (chn.name LIKE '%d%' OR chn.name LIKE '%o%')
AND k.keyword IN ('bus-station', 'hiding-victoria', 'reversibility', 'reference-to-keva', 'algorithm')
AND kt.kind = 'movie'
AND t.production_year > 1986;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Couric%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'movie'
AND t.production_year > 1974;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Gray%'
AND (chn.name LIKE '%La%' OR chn.name LIKE '%s%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1967;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Herself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1949;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Annie%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1991;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('friendship', 'friendship', 'non-fiction', 'nudity', 'number-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%l%'
AND chn.name NOT LIKE '%F%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%t%')
AND k.keyword IN ('penis', 'jumping-off-a-ship', 'popular-festivity', 'sangatte-france', 'death-on-duty')
AND kt.kind = 'movie'
AND t.production_year > 1987;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%c%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%i%')
AND k.keyword IN ('reference-to-artie-shaw', 'photo-album', 'corn-candy', 'male-vampire', 'nude-kickboxing')
AND kt.kind = 'movie'
AND t.production_year > 1987;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1975;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%p%'
AND chn.name NOT LIKE '%b%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%r%')
AND k.keyword IN ('burglary', 'north-dakota', 'simla-india', 'dartmouth-college', 'doggy-bag')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%V%' OR chn.name LIKE '%V%')
AND k.keyword IN ('robbery', 'hall-of-fame', 'tire-rim', 'el-diario-austral', 'death-by-gunshot')
AND kt.kind = 'movie'
AND t.production_year > 1931;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Dr%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Host%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Mjr%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('death', 'father-daughter-relationship', 'violence', 'one-word-title', 'number-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Leader%' OR chn.name LIKE '%Mr%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%e%'
AND (chn.name LIKE '%C%' OR chn.name LIKE '%x%')
AND k.keyword IN ('main-character-shot', 'labor-violence', 'golf-player', 'mancala', 'berth')
AND kt.kind = 'movie'
AND t.production_year > 1988;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%i%'
AND chn.name NOT LIKE '%o%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%y%')
AND k.keyword IN ('headmaster', 'ammunition-depot', 'female-manager', 'hive-balur', 'cornfield')
AND kt.kind = 'movie'
AND t.production_year > 1958;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Slaven%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND kt.kind = 'movie'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%H%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%a%')
AND k.keyword IN ('journey', 'toilet-dance', 'rocker', 'prague-castle', 'school-gang')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%meisje%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1977;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%Emmett%' OR chn.name LIKE '%s%')
AND k.keyword IN ('father-daughter-relationship', 'husband-wife-relationship', 'father-daughter-relationship', 'police', 'family-relationships')
AND kt.kind = 'episode'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%+%'
AND chn.name NOT LIKE '%s%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%r%')
AND k.keyword IN ('independent-film', 'marriage-agency', 'winning-smile', 'little-river-kansas', 'walking-into-a-wall')
AND kt.kind = 'movie'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Busch%'
AND (chn.name LIKE '%Chuang%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2002;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%J%'
AND (chn.name LIKE '%u%' OR chn.name LIKE '%e%')
AND k.keyword IN ('number-in-title', 'internal-organs', 'butcher-block', 'underwater-home', 'feathered-dinosaur')
AND kt.kind = 'movie'
AND t.production_year > 1956;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('in-the-nick-of-time', 'santo-domingo-blues', 'altruistic-scientist', 'dance-band', 'hosing-down')
AND kt.kind = 'episode'
AND t.production_year > 1932;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1992;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%in%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sequel', 'husband-wife-relationship', 'male-nudity', 'sequel', 'blood')
AND kt.kind = 'episode'
AND t.production_year > 1981;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%B%'
AND (chn.name LIKE '%o%' OR chn.name LIKE '%B%')
AND k.keyword IN ('nightclub', 'reference-to-sonoma', 'filipino', 'golf-course', 'armored-vehicle')
AND kt.kind = 'movie'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Amanda%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%b%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1973;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Williams%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%v%'
AND chn.name NOT LIKE '%r%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%G%')
AND k.keyword IN ('thief', 'prehistoric-egg', 'tug-boat', 'parallagh', 'family-legend')
AND kt.kind = 'movie'
AND t.production_year > 1946;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%i%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%n%' OR chn.name LIKE '%R%')
AND k.keyword IN ('acid', 'puppy-love', 'cheap-suit', 'mixing-chemicals', 'f-14-fighter-jet')
AND kt.kind = 'movie'
AND t.production_year > 1954;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Kull%')
AND k.keyword IN ('blood', 'father-daughter-relationship', 'violence', 'based-on-play', 'friendship')
AND kt.kind = 'episode'
AND t.production_year > 1962;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%man%')
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%t%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%G%')
AND k.keyword IN ('old-woman', 'agony-column', 'ludwigsburg', 'spawn', 'tikal')
AND kt.kind = 'movie'
AND t.production_year > 1997;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND kt.kind = 'movie'
AND t.production_year > 1999;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%r%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%C%')
AND k.keyword IN ('catfight', 'laughing-at-oneself', 'man-with-a-cane', 'short-woman', 'ghostbusting')
AND kt.kind = 'movie'
AND t.production_year > 1984;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%milliomos%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1962;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%F%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%a%')
AND k.keyword IN ('slow-witted', 'disposable-camera', 'the-stone-house', 'eating-own-hair', 'verity')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%L%'
AND (chn.name LIKE '%u%' OR chn.name LIKE '%c%')
AND k.keyword IN ('murder', 'nbi', 'bowel', 'guerra', 'orissa-lndia')
AND kt.kind = 'movie'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%p%'
AND chn.name NOT LIKE '%n%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%e%')
AND k.keyword IN ('college-campus', 'clothes-torn-off', 'puffin', 'andaman-sea', 'volkswagen-car')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%n%'
AND (chn.name LIKE '%t%' OR chn.name LIKE '%V%')
AND k.keyword IN ('handshake', 'brunei', 'foot-in-a-toilet', 'it-girl', 'nun-with-a-gun')
AND kt.kind = 'movie'
AND t.production_year > 1953;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%s%'
AND (chn.name LIKE '%o%' OR chn.name LIKE '%v%')
AND k.keyword IN ('dance', 'workplace-rivalry', 'who-pays-series', 'pink-hair', 'dovecote')
AND kt.kind = 'movie'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%ViganÃ²%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Maurice%')
AND k.keyword IN ('revenge', 'violence', 'number-in-title', 'number-in-title', 'love')
AND kt.kind = 'episode'
AND t.production_year > 1964;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%e%'
AND (chn.name LIKE '%G%' OR chn.name LIKE '%G%')
AND k.keyword IN ('based-on-novel', 'biting-crotch', 'market-populism', 'cyclone', 'calender-art')
AND kt.kind = 'tv movie'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1961;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Allen%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Smirch%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%r%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%a%')
AND k.keyword IN ('brain-scan', 'oppression', 'field-of-tulips', 'seventy-something', 'netting')
AND kt.kind = 'movie'
AND t.production_year > 1985;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1935;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%+%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%i%' OR chn.name LIKE '%l%')
AND k.keyword IN ('blonde', 'ex-bank-president', 'fremont-expedition', 'warn', 'rayquza')
AND kt.kind = 'movie'
AND t.production_year > 1998;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%S%'
AND (chn.name LIKE '%F%' OR chn.name LIKE '%d%')
AND k.keyword IN ('british-army', 'salesmanship', 'talking-to-a-pigeon', 'camping-in-the-snow', 'pirate-broadcasting')
AND kt.kind = 'movie'
AND t.production_year > 1947;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%y%' OR chn.name LIKE '%o%')
AND k.keyword IN ('scotland-yard', 'store-manager', 'ice-pack', 'repopulation', 'anti-tetanus-serum')
AND kt.kind = 'movie'
AND t.production_year > 1925;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%SMU%' OR chn.name LIKE '%f%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1951;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%man%')
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Il%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-play', 'based-on-play', 'sequel', 'bare-chested-male', 'non-fiction')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%p%'
AND chn.name NOT LIKE '%J%'
AND (chn.name LIKE '%l%' OR chn.name LIKE '%n%')
AND k.keyword IN ('hit-with-a-gun', 'punching', 'mt.-cameroon', 'slacking-off', 'vampire-experiment')
AND kt.kind = 'movie'
AND t.production_year > 1968;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%e%'
AND (chn.name LIKE '%n%' OR chn.name LIKE '%T%')
AND k.keyword IN ('actor-shares-first-name-with-character', 'dragging-a-body', 'free-jazz', 'cheese-soup', 'sunday-brunch')
AND kt.kind = 'movie'
AND t.production_year > 1949;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1978;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%r%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%e%')
AND k.keyword IN ('checkout-clerk', 'overwork', 'masked-balls', 'graph', 'human-subjects')
AND kt.kind = 'movie'
AND t.production_year > 1997;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1949;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%l%'
AND chn.name NOT LIKE '%G%'
AND (chn.name LIKE '%h%' OR chn.name LIKE '%t%')
AND k.keyword IN ('blackmail', 'link', 'decimal-point', 'mahayana', 'showboat')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%a%')
AND k.keyword IN ('robbery', 'private-meeting', 'schnitzler-play', 'class-distinction', 'parvenu')
AND kt.kind = 'movie'
AND t.production_year > 1977;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%t%'
AND chn.name NOT LIKE '%g%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%h%')
AND k.keyword IN ('stop-motion-animation', 'slinky', 'wedding-toast', 'pageant-magazine', 'conscience')
AND kt.kind = 'movie'
AND t.production_year > 1951;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Alligator%' OR chn.name LIKE '%s%')
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1968;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%i%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%l%')
AND k.keyword IN ('cult-film', 'boar', 'cadet-major', 'horse''s-neck', 'african-artifact')
AND kt.kind = 'movie'
AND t.production_year > 1986;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%o%'
AND (chn.name LIKE '%n%' OR chn.name LIKE '%n%')
AND k.keyword IN ('reference-to-ernest-hemingway', 'elephant-carving', 'swedish-parliament', 'insolence', 'art-market')
AND kt.kind = 'movie'
AND t.production_year > 1998;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Ruth%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%RamÃ­rez%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1942;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%+%'
AND chn.name NOT LIKE '%y%'
AND (chn.name LIKE '%o%' OR chn.name LIKE '%B%')
AND k.keyword IN ('accident', 'getaway-plans', 'money-cutter', 'rock-in-rio', 'pottery-class')
AND kt.kind = 'movie'
AND t.production_year > 2003;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'movie'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%l%'
AND chn.name NOT LIKE '%n%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%r%')
AND k.keyword IN ('paris-france', 'water-privatization', 'bob-wills', '.45-calibre-pistol', 'flatland')
AND kt.kind = 'movie'
AND t.production_year > 1939;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%1%')
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1993;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Newell%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1969;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1932;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%mom%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('family-relationships', 'anal-sex', 'husband-wife-relationship', 'father-son-relationship', 'anal-sex')
AND kt.kind = 'movie'
AND t.production_year > 1983;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%G%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1994;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%G%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%i%')
AND k.keyword IN ('muslim', 'cum-in-mouth', 'dragonfly', 'inmate', 'tire-change')
AND kt.kind = 'movie'
AND t.production_year > 1988;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Poole%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 1986;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%s%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 1896;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Victim%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Scared%')
AND k.keyword IN ('one-word-title', 'surrealism', 'dog', 'father-son-relationship', 'non-fiction')
AND kt.kind = 'episode'
AND t.production_year > 1953;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('murder', 'murder-in-title')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%t%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%o%' OR chn.name LIKE '%o%')
AND k.keyword IN ('gay-slur', 'indian-diaspora', 'is-he-or-isn''t-he?', 'lindisfarne-england', 'bicycle-theft')
AND kt.kind = 'movie'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%p%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%F%')
AND k.keyword IN ('dying', 'deed-to-ranch', 'mechanical-pencil', 'contrabass', 'wehrmacht-officer')
AND kt.kind = 'movie'
AND t.production_year > 1987;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%t%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%S%')
AND k.keyword IN ('college-campus', 'george-bush', 'screenburn', 'forbidden-kiss', 'wreck-a-movie')
AND kt.kind = 'movie'
AND t.production_year > 2006;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%s%'
AND (chn.name LIKE '%e%' OR chn.name LIKE '%l%')
AND k.keyword IN ('subjective-camera', 'pirate-gang', 'car-compactor', 'marine-life', 'out-of-sync')
AND kt.kind = 'movie'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('murder', 'murder', 'murder', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 2004;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%e%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%r%')
AND k.keyword IN ('porn-actor', 'loss-of-identity', 'infinite-energy', 'kyrgyzstan', 'munich-pact')
AND kt.kind = 'movie'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%H%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%r%')
AND k.keyword IN ('exploding-building', 'micmac', 'martial-arts-coach', 'phil-smith', 'ribbon')
AND kt.kind = 'movie'
AND t.production_year > 1964;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%+%'
AND chn.name NOT LIKE '%C%'
AND (chn.name LIKE '%C%' OR chn.name LIKE '%w%')
AND k.keyword IN ('characters-killed-one-by-one', 'mehul-shah', 'squealer', 'walking-up-wall', 'year-1344')
AND kt.kind = 'movie'
AND t.production_year > 1971;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Jornalista%'
AND (chn.name LIKE '%Co%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel')
AND kt.kind = 'episode'
AND t.production_year > 2007;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%Iron%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1925;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND t.production_year > 1950;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Postarna%' OR chn.name LIKE '%s%')
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND kt.kind = 'movie'
AND t.production_year > 1945;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%l%' OR chn.name LIKE '%a%')
AND k.keyword IN ('attic', 'rail', 'tea-and-cake', 'forbidden-zone', 'the-journey')
AND kt.kind = 'movie'
AND t.production_year > 1962;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%i%'
AND chn.name NOT LIKE '%L%'
AND (chn.name LIKE '%k%' OR chn.name LIKE '%a%')
AND k.keyword IN ('touching-breasts', 'canoe-race', 'belfry', 'thrash', 'cuban-noir')
AND kt.kind = 'movie'
AND t.production_year > 1998;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Davis%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%Leon%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%m%'
AND chn.name NOT LIKE '%v%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%r%')
AND k.keyword IN ('dynamite', 'psychedelic-rock', 'gland', 'baccarat-placard', 'caroline-islands')
AND kt.kind = 'movie'
AND t.production_year > 1964;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%k%'
AND (chn.name LIKE '%r%' OR chn.name LIKE '%e%')
AND k.keyword IN ('queen', 'paris-hilton-spoof', 'counterweight', 'memory-expert', 'imitation')
AND kt.kind = 'movie'
AND t.production_year > 1937;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%of%' OR chn.name LIKE '%f%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1983;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%c%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%a%' OR chn.name LIKE '%l%')
AND k.keyword IN ('taxi-driver', 'loss-of-taste', 'post-humanism', 'breakthrough', 'building-design')
AND kt.kind = 'movie'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Moscow%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'episode'
AND t.production_year > 2001;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Frothy%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%Barad%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('father-daughter-relationship', 'sequel', 'sequel', 'male-nudity', 'tv-mini-series')
AND kt.kind = 'episode'
AND t.production_year > 1947;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%Himself%' OR chn.name LIKE '%f%')
AND k.keyword IN ('blood', 'bare-breasts', 'police', 'sequel', 'male-nudity')
AND kt.kind = 'episode'
AND t.production_year > 1933;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%d%'
AND chn.name NOT LIKE '%e%'
AND (chn.name LIKE '%N%' OR chn.name LIKE '%k%')
AND k.keyword IN ('teen', 'king''s-messenger', 'supportive-mom', 'hg10', 'nazi-occupation')
AND kt.kind = 'movie'
AND t.production_year > 1984;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%i%'
AND chn.name NOT LIKE '%o%'
AND (chn.name LIKE '%b%' OR chn.name LIKE '%u%')
AND k.keyword IN ('theft', 'crane-driver', 'museum-guide', 'abortionist', 'cc-tv')
AND kt.kind = 'movie'
AND t.production_year > 1959;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Himself%')
AND k.keyword IN ('blood', 'number-in-title', 'bare-breasts', 'blood', 'bare-breasts')
AND kt.kind = 'episode'
AND t.production_year > 1996;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%m%'
AND (chn.name LIKE '%s%' OR chn.name LIKE '%f%')
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'episode'
AND t.production_year > 1972;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND kt.kind = 'movie'
AND t.production_year > 2008;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Tony%Stark%')
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%Himself%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Depressed%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 1971;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%p%'
AND chn.name NOT LIKE '%a%'
AND (chn.name LIKE '%d%' OR chn.name LIKE '%a%')
AND k.keyword IN ('duplicity', 'loud-voice', 'moose-meat', 'year-1909', 'black-cook')
AND kt.kind = 'movie'
AND t.production_year > 1954;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND kt.kind = 'movie'
AND t.production_year > 2005;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%Captain%' OR chn.name LIKE '%f%')
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND kt.kind = 'tv series'
AND t.production_year > 1995;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%e%'
AND chn.name NOT LIKE '%Host%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%s%')
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND kt.kind = 'episode'
AND t.production_year > 2010;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%f%'
AND chn.name NOT LIKE '%l%'
AND (chn.name LIKE '%m%' OR chn.name LIKE '%Host%')
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND kt.kind = 'movie'
AND t.production_year > 1985;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%p%'
AND chn.name NOT LIKE '%b%'
AND (chn.name LIKE '%h%' OR chn.name LIKE '%m%')
AND k.keyword IN ('feather', 'beans-on-toast', 'faberge''-chess-set', 'hunting-trip', 'balloon-vendor')
AND kt.kind = 'movie'
AND t.production_year > 1937;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Iron%Man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 1990;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'cast'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%man%')
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND kt.kind = 'movie'
AND t.production_year > 2009;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
"SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc,
   comp_cast_type AS cct1,
   comp_cast_type AS cct2,
   char_name AS chn,
   cast_info AS ci,
   keyword AS k,
   kind_type AS kt,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE kt.id = t.kind_id
AND t.id = mk.movie_id
AND t.id = ci.movie_id
AND t.id = cc.movie_id
AND mk.movie_id = ci.movie_id
AND mk.movie_id = cc.movie_id
AND ci.movie_id = cc.movie_id
AND chn.id = ci.person_role_id
AND n.id = ci.person_id
AND k.id = mk.keyword_id
AND cct1.id = cc.subject_id
AND cct2.id = cc.status_id
AND cct1.kind = 'crew'
AND cct2.kind LIKE '%complete%'
AND chn.name NOT LIKE '%Sherlock%'
AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%')
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND kt.kind = 'movie'
AND t.production_year > 2000;",154,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(ci movie_id_cast_info) IndexScan(chn char_name_pkey) IndexOnlyScan(n name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt ci) NestLoop(k mk cct1 cc cct2 t kt ci chn) NestLoop(k mk cct1 cc cct2 t kt ci chn n) Leading((((((((k mk) ((cct1 cc) cct2)) t) kt) ci) chn) n)) */
