query,plan_id,plan_content
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Andre Slexsen)', '(as David Atkins)', '(as Ewa Gralak)', '(as Brett Charles)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('night-cityscape', 'juvenile-crime', 'crime-ring', 'latina', 'plastic-trash-bag')
AND mi.info = 'Chile:Y7'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location manager) (uncredited)', '(as Adrizonu)', '(as Rona Johnstone)', '(as Pedro Antonio)', '(as Onjulic)')
AND it1.info = 'printed media reviews'
AND it2.info = 'votes distribution'
AND k.keyword IN ('tanker', 'pathologist', 'camp-kill-yourself', 'travel-alarm-clock', 'illustration-model')
AND mi.info = 'Gerle, JÃ¶rg. ""28 Days Later"". In: ""film dienst"" (Germany), Vol. 56, Iss. 12, 3 June 2003, Pg. 33'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('rockfish', 'big-ears', 'fort-chaffee-arkansas', 'valdez', 'charles-conrad-jr.-autograph')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Ben Disinger)', '(as L. Staritsyna)', '(as Pierre Decaze)', '(as Chris Petit)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('orphan', 'dance-recital', 'research-center', 'far-west', 'year-1858')
AND mi.info = 'Argentina:26 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info = 'UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('maturation', 'touching-penis', 'year-1939', 'reference-to-charles-ii', 'rucker-park')
AND mi.info = 'Documentary'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as NaOnka Mixon)', '(as Vic Bandera)', '(as Zita Bernstein)', '(as Steve Turner)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('honor', 'hit-with-a-crowbar', 'quebec-nationalism', 'purple-ribbon', 'barbecue-pit')
AND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('surrealism', 'tv-mini-series', 'sequel', 'one-word-title', 'tv-mini-series')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Dean Spinksley)', '(as Cecil Philips)', '(as Jesse Martinez)', '(as Cut Yanti)', '(as Laura Dinolsky)')
AND it1.info = 'locations'
AND it2.info = 'votes distribution'
AND k.keyword IN ('slow-motion-scene', 'taking-on-water', 'overcrowded', 'racehorse', 'antiglobalization')
AND mi.info = 'Welbeck Abbey, Worksop, Nottinghamshire, England, UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(co-producer)', '(script supervisor)', '(location manager)', '(screenplay)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('death', 'nudity', 'friendship', 'tv-mini-series', 'surrealism')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('surrealism', 'love', 'male-nudity', 'friendship', 'bare-chested-male')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Pedro Salvin)', '(as Palina)', '(web master) (2002)', '(as Jack Tillar)', '(as Jennifer Smith)')
AND it1.info = 'color info'
AND it2.info = 'rating'
AND k.keyword IN ('slow-motion-scene', 'black-rock', 'macrobiotics', 'bartender', 'grumpy-old-man')
AND mi.info = 'Color'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(co-producer)', '(writer)', '(co-executive producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(co-executive producer)', '(executive producer)', '(uncredited)', '(archive footage)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(production assistant)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(producer)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('family-relationships', 'nudity', 'number-in-title', 'non-fiction', 'friendship')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(producer)', '(executive producer)', '(producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('bare-breasts', 'based-on-play', 'surrealism', 'sequel', 'anal-sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant: New York) (as Dwayne A. Smith)', '(as Qu Ying)', '(as Carolyn Sand)', '(conception: video)', '(as Fuga)')
AND it1.info = 'LD disc size'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'spinal-surgery', 'unholy-resurrection', 'vatican-observatory', 'glasgow-scotland')
AND mi.info = '12'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Laumonier)', '(as DJ Polymorphic)', '(as Loles GarcÃ­a)', '(as Thuraya Masri)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'tape-player', 'snowed-in', 'forced-alliance', 'channel-tunnel')
AND mi.info = 'SYNC: When they take over the stock exchange, the bad guys enter the place shooting. It is noticeable that their machine guns are not shooting and yet we hear the noise and we see the ricochet of the bullets against the monitors in the ceiling.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(executive producer)', '(co-executive producer)', '(production assistant)', '(writer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Sue Matthews)', '(as Volodya Shvets)', '(as Shao-hsiang Li)', '(as Keie Deei)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('pearl-harbor', 'present-indicative', 'boiling-flask', 'scattering-ashes', 'drink-me')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Milton Ingley)', '(as Geoffe George)', '(as Laura Lavarnie)', '(as D. Simone)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('secret-door', 'prague', 'pleading-guilty', 'whistling-sound', 'huckster')
AND mi.info = 'Hooded Man #2: Have we started the fire?::Bane: Yes. The fire rises.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(supervising producer)', '(written by)', '(screenplay)', '(co-executive producer)', '(script supervisor)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('depression', 'woman-stevedore', 'tunafish', 'tied-to-railroad-tracks', 'public-strike')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(producer)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'female-nudity')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('unexpected-kiss', 'government-bond', 'tuff-hedeman', 'reference-to-sir-lancelot', 'crimean-war')
AND mi.info = 'Drama'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(as Katia Chiani)', '(as Franck Bruneau)', '(as Sally O''Neill)', '(Anju''s mother)')
AND it1.info = 'runtimes'
AND it2.info = 'votes'
AND k.keyword IN ('stolen-car', 'human-mannequin', 'plaid-gloves', 'water-glass', 'satanist')
AND mi.info = '105'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Shadab Khan)', '(as Steve Blonder)', '(as Daniel Clough)', '(segment 6)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('death-of-mother', 'ancient-korea', 'super-earth', 'living-in-fear', 'cerebral-cortex')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(production assistant)', '(uncredited)', '(associate producer)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('husband-wife-relationship', 'family-relationships', 'sequel', 'revenge', 'family-relationships')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Marion Scali)', '(as Elizabeth Amos)', '(as Pat Delany)', '(as Jose MÂª Caro)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('grand-piano', 'window-sill', 'tibetan-monk', 'amontillado', '500-pound-note')
AND mi.info = 'RAT:1.33 : 1'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(producer)', '(producer)', '(archive footage)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('duped', 'delirium', 'graf-zeppelin', 'public-affairs-program', 'strolling-minstrel')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Raja Avasthi)', '(as Toni Leicester)', '(The Witches)', '(as A. Krmela)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('pistol-whip', 'artillery', 'thrown-out-of-class', 'cutting-toe-nails', 'licks')
AND mi.info = 'Israel:20 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(production assistant)', '(executive producer)', '(executive producer)', '(production assistant)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('male-anorexia', 'miss-california', 'kicked-by-a-mule', 'freelance-reporter', 'strawberry-jam')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant) (uncredited)', '(as Los Rebeldes)', '(TV Quiz Show)', '(as Janine Pen)', '(as Peggy Missi)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('male-slaps-a-female', 'wedding-music', 'house-key', 'hunting-safari', 'jump-start')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('police', 'family-relationships', 'non-fiction', 'blood', 'revenge')
AND mi.info = 'Drama'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(written by)', '(producer)', '(producer)', '(archive footage)')
AND it1.info = 'countries'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('revenge', 'violence', 'dog', 'tv-mini-series', 'based-on-play')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(writer)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('oral-sex', 'non-fiction', 'sequel', 'anal-sex', 'surrealism')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Ho Lin)', '(Raju''s friend)', '(as Bruno Gomes)', '(producer) (1994-?)')
AND it1.info = 'goofs'
AND it2.info = 'votes'
AND k.keyword IN ('police-station', 'moral-deterioration', 'shrine-maiden', 'crop-dusting', 'lunar-mining')
AND mi.info = 'FAKE: One of Bane''s mercenaries (on the far left of the rooftop fight scene with Catwoman and Batman right after it shows Daggett) falls down without being hit.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(producer)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(as Vlada i Bajka)', '(as Sam Delilo)', '(gorilla)', '(as Joseph Conlon)')
AND it1.info = 'LD category'
AND it2.info = 'votes'
AND k.keyword IN ('woman-with-glasses', 'lightwave', 'back-stairway', 'biting-crotch', 'market-populism')
AND mi.info = 'Movie'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(ca: Wowow)', '(as Ng Ting Yip)', '(prayer team)', '(as KekÃ¤le)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('robbery', 'test-of-bravery', 'porcupine-joke', 'artcore', 'destivelle')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info = 'Drama'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(as Deisy)', '(Mun-ho''s wife)', '(as Space)', '(as Jessie Vega)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('title-at-the-end', 'drug-paraphanalia', 'tin-cup', 'mysterious-object', 'window-blow-open')
AND mi.info = 'FAKE: When Batman saves Blake from the ambush by Christopher Judge''s character, he fights the henchmen. The guy to the very left never even encounters him yet is flown backwards and falls down as if he was attacked by Batman.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'murder')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alon Moni Aboutboul)', '(Natasina majka)', '(play ""Totentanz"")', '(as V. Mikhailov)', '(show-window)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('stock-exchange', 'slipping-on-blood', 'organelle', 'income-tax-evasion', 'indigo-children')
AND mi.info = 'Bolivia:26 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(script supervisor)', '(creator)', '(executive producer)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as Raphael Vogt)', '(Imekura Customer)', '(as Sarah Cannon)', '(tent manufacturer)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('stabbed-in-the-chest', 'click', 'hit-with-a-breast', 'lithosphere', 'minister-of-culture')
AND mi.info = 'Bane: [to Batman] Peace has cost you your strength! Victory has defeated you!'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Cousin Jody)', '(segment ""pilot"")', '(technical intern)', '(as Matt Barrett)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'arkansas-delta', 'blood-on-bread', 'coral-sea', 'financial-advice')
AND mi.info = 'PCS:Spherical'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Curt Vesperman)', '(as Alex Brake)', '(as Arcade Fire)', '(as Tony Holland)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND k.keyword IN ('gang-member', 'cappuccino', 'superciliousness', 'solomon-islands', 'candy-kiss')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as A. Volkonsky)', '(producer: Wilco)', '(as Lindsay)', '(as Rimma Zyubina)')
AND it1.info = 'plot'
AND it2.info = 'rating'
AND k.keyword IN ('robbery', 'phase', 'den-of-iniquity', 'pancreatic-cancer', 'blues-guitar')
AND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy protÃ©gÃ© from his television show and billed above the title and first billed in the cast as Laurie (""I-like-the-wide-open-spaces"") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in ""McLintock."" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his ""Screen Snapshots"" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(stand-in: Mr. Hoskins)', '(as Colleen Brenan)', '(as Max Boyer)', '(Another Burglar)', '(as Tracy Does It)')
AND it1.info = 'locations'
AND it2.info = 'votes distribution'
AND k.keyword IN ('cooking', 'hookworm', 'response', 'american-gothic', 'shirt-size')
AND mi.info = 'Dagenham, Essex, England, UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(written by)', '(executive producer)', '(executive producer)', '(script supervisor)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as D. Bortnyansky)', '(as Blue Lagoon)', '(as Esha)', '(as Greg Southard)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('night-cityscape', 'animated-dog', 'limit', 'adbusters', 'it-girl')
AND mi.info = 'Lucius Fox: It has a long uninteresting name. I just took to calling it... The Bat, and yes, Mr. Wayne, it does come in black.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(executive producer)', '(executive producer)', '(writer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('non-fiction', 'oral-sex', 'anal-sex', 'oral-sex', 'revenge')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Tom Larson)', '(as Hans Sturm)', '(as Tan En-mei)', '(medical equipment)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('grandmother', 'moaning-gown', 'live-in-girlfriend', 'revenge-on-bully', 'atomic-bomb-victim')
AND mi.info = 'Julien: Cursed be he who puts an obstacle in the path of a blind man.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(producer)', '(producer)', '(executive producer)', '(producer)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('euphemism', 'animal-house', 'black-duck', 'cloaked-figure', 'reference-to-abram-harding-""hardy""-richardson')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(craft service)', '(as Shannah Betz)', '(as A. Panova)', '(piano/organ)', '(as Ant Neate)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('wine', 'mind-over-matter', 'peach-cobbler', 'general-strike', 'blue-dress')
AND mi.info = 'Israel:30 July 1998'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(cycling segment)', '(as Reben Moreno)', '(1971-1995)', '(as Lou Isreal)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('stock-exchange', 'bar-of-soap', 'gift-sword', 'prejudiced-father', 'stolen-cash')
AND mi.info = 'USA:16 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Vesna Pocuca)', '(as Art Canning)', '(Segment 3)', '(Seasons 1-2)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('hero', 'gun-in-airport', 'volte-face', 'methadone-clinic', 'druid-ceremony')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'Czech Republic:21 August 1997'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(uncredited)', '(producer)', '(executive producer)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Star Townshend)', '(as Felice)', '(as A. Raskin)', '(as Kink Boy UK)')
AND it1.info = 'quotes'
AND it2.info = 'votes'
AND k.keyword IN ('secret-door', 'nissan', 'first-millennium', 'dextrocardia', 'standing-on-hands')
AND mi.info = 'John Daggett: What. The hell. Is going on?::Bane: Our plan is proceeding as expected.::John Daggett: Oh really? Do *I* look like I''m running Wayne Enterprises right now? Your hit, on the stock exchange, it didn''t work, my friend! And now you have my construction crews going around the city at 24 hours a day! How exactly is that supposed to help my company absorb Wayne''s?::Bane: [to Stryver] Leave us!::John Daggett: No! You stay here, I''m in charge!::Bane: [puts his hand on Daggett''s shoulder] Do you *feel* in charge?::[Stryver leaves]::John Daggett: I paid you a small fortune.::Bane: And this gives you *power* over me?::John Daggett: What is this?::Bane: Your money and infrastructure have been important... ''til now!::John Daggett: What are you?::Bane: I''m Gotham''s reckoning. Here to end the borrowed time you''ve all been living on!::John Daggett: You''re pure evil!::Bane: I''m *necessary* evil!::[breaks Daggett''s neck; Stryver flinches]'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(craft service)', '(as ED J. Horton)', '(as Denissa DÃ©r)', '(as Maria Lucia)', '(as Tank Jones)')
AND it1.info = 'filming dates'
AND it2.info = 'votes'
AND k.keyword IN ('fire', 'emperor-of-china', 'number-32-jersey', 'filet-mignon', 'bosnia-syndrome')
AND mi.info = '3 July 2007 - November 2007'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('vatican', 'survived-hanging', 'horace-greeley', 'night-blindness', 'bedsheets')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jan Caruna)', '(as Dr. Ted Selker)', '(V.J.)', '(Age 8-9)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('machine-gun-nest', 'keyboard-player', 'rolling-downhill', 'road-accident', '1985')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Natalie Raper)', '(GeneviÃ¨ve)', '(as Bert Cayayan)', '(super looping)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('combat', 'escape-in-a-boat', 'gym-shorts', 'mechanical-cat', 'evil-god')
AND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant: Houston)', '(as MÃ¡ria IllyÃ©s)', '(as Cheabow)', '(as Indera Bansal)', '(as Bernard Purdie)')
AND it1.info = 'LD master format'
AND it2.info = 'votes'
AND k.keyword IN ('post-college', 'prison-discharge', 'nylon-fetish', 'torrevieja-spain', 'blown-cover')
AND mi.info = 'Film'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(Open All Hours)', '(as Emotion)', '(as Shahid Ali)', '(MOW Detective)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND k.keyword IN ('casablanca-morocco', 'oleo', 'american-muscle', 'jumping-onto-a-bed', 'texan-accent')
AND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(associate producer)', '(writer)', '(writer)', '(associate producer)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(co-producer) (as Bill Brown)', '(as Yu.Vorobyov)', '(as Lionel Haft)', '(as Pavel Patriki)', '(as T. Meena)')
AND it1.info = 'trivia'
AND it2.info = 'rating'
AND k.keyword IN ('admiral', 'year-1565', 'eating-intestines', 'vampire-parents', 'confinement')
AND mi.info = 'The cast had camel-riding lessons during which they would have to ride the camel at full gallop for 90 minutes alongside a moving train.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Marisol Giro)', '(1992-1996)', '(novel ""By Jiminy"")', '(1930-1933)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('reference-to-mussolini', 'group-dynamics', 'siege-ramp', 'zypora', 'ale')
AND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(script supervisor)', '(supervising producer)', '(co-producer)', '(production coordinator)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Angela Devil)', '(as Jack R. Wilkes)', '(stand-in: Desi)', '(as Lauren Vaughan)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND k.keyword IN ('song', 'bells', 'school-attendance', 'serial-killer-m.o.', 'secret-service-plot')
AND mi.info = 'PFM:35 mm'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(production coordinator)', '(uncredited)', '(co-producer)', '(script supervisor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(as Kwan Chi Kan)', '(as Jim Mair)', '(egyptologist)', '(Patrol Officer)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('returning-character-killed-off', 'jewish-lesbian', 'yogini', 'wrinkled-suit', 'knock-''em-dead')
AND mi.info = 'UK'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant to co-executive producer) (uncredited)', '(as Elodie BouÃ©dec)', '(AKA Gilda Burrows)', '(as Bruce Lester Johnson)', '(as Parker)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel', 'independent-film')
AND mi.info = 'USA'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production coordinator)', '(production assistant)', '(co-producer)', '(creator)', '(production coordinator)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(producer)', '(executive producer)', '(production assistant)', '(production assistant)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info = 'UK'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production coordinator)', '(director of photography)', '(written by)', '(archive footage)', '(screenplay)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('revenge', 'father-daughter-relationship', 'husband-wife-relationship', 'husband-wife-relationship', 'violence')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(Russian dialogue)', '(as Bob Sola)', '(as Dai Ngyuyen)', '(music consultant)')
AND it1.info = 'plot'
AND it2.info = 'votes distribution'
AND k.keyword IN ('stagecoach', 'gothic-cathedral', 'six-stories', 'hunting-accident', 'gooseberry-bush')
AND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy protÃ©gÃ© from his television show and billed above the title and first billed in the cast as Laurie (""I-like-the-wide-open-spaces"") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in ""McLintock."" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his ""Screen Snapshots"" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(creator)', '(producer)', '(archive footage)', '(written by)', '(archive footage)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(creator)', '(written by)', '(producer)', '(producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex-slavery', 'finnish-men', 'kursk-russia', 'reference-to-the-journey-the-band', 'theatre-school')
AND mi.info = 'UK'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('buttered-butt', 'horse-riding', 'forgot-to-load-gun', 'flea-powder', 'bad-painter')
AND mi.info = 'Documentary'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(co-executive producer)', '(creator)', '(creator)', '(written by)', '(archive footage)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(fight arranger)', '(in-game music)', '(as Jerry Okuneff)', '(as Chris Bunworth)', '(story ""Barkhany"")')
AND it1.info = 'LD catalog number'
AND it2.info = 'rating'
AND k.keyword IN ('boyfriend-girlfriend-relationship', 'public-execution', 'futurism', 'mini-dv', 'dying-daughter')
AND mi.info = 'VLD 3275'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(location manager)', '(creator)', '(co-producer)', '(supervising producer)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(runner: Mallorca)', '(as Jiro Kagoshima)', '(as Amit Gangoly)', '(as Sheridan Hall)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('thief', 'sixth-generation', 'thesis-advisor', 'prairie', 'bone-cancer')
AND mi.info = 'France:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Jee Yun Lee)', '(as Nicky Barrat)', '(as German Rojas)', '(senior armorer)')
AND it1.info = 'goofs'
AND it2.info = 'votes distribution'
AND k.keyword IN ('orphan', 'framed-butterfly', 'cast-iron', 'foley-alabama', 'dojang')
AND mi.info = 'CONT: When Catwoman shoots the cars blocking the tunnel, she beforehand puts on her glasses. In the next shot, she doesn''t have her glasses on, just the mask.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Eilemann-Trio)', '(as Poppy Cannon)', '(as Jayaprada)', '(as Chax)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('sawed-off-shotgun', 'equine-excel', 'rowing-championship', 'jojo', 'college-enmity')
AND mi.info = 'GEOG: When the Gotham police force takes on Bane''s recruited prisoners, a banner clearly marking ""NYC"" is visible in the background.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('based-on-novel', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(as Alex) (as Aika)', '(as Nino Batista)', '(as Viktor SchefÃ©)', '(as Monique Perry)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('sniper-rifle', 'blood-sample', 'big-wooden-spoon', 'move', 'cultural-change')
AND mi.info = 'John Blake: When I spotted you, I was looking for a friend of mine, Bruce Wayne. Did they kill him?::Selina Kyle: I''m not sure.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(location assistant) (as Alex Martin)', '(Mamaji)', '(Kaneko, Teru)', '(as Dick Farina)', '(as IclÃ¢l GenÃ§)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('stock-exchange', 'hazmat-suit', 'panel', 'sex-with-maid', 'faking-a-limp')
AND mi.info = 'Canada:14A'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(as Alan Deloin)', '(as Rupert Seidl)', '(as Tony Wong)', '(as Berek Kati)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND k.keyword IN ('necklace', 'cattle-mustering', 'landscape-art', 'naive-boy', 'road-closed')
AND mi.info = 'Malaysia:19 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info = 'Short'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(story)', '(co-executive producer)', '(story)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'female-nudity')
AND mi.info = 'Drama'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(as Jesse Dunn)', '(as Daniel Brucker)', '(as Wolf)', '(as Hsiao Ying-Chi)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND k.keyword IN ('sawed-off-shotgun', 'glass-painting', 'green-tights', 'midnight-launch', 'elvira')
AND mi.info = 'Ra''s al Ghul: You, yourself fought the decadence of Gotham for years with all your strength, all your resources, all your moral authority and the only victory you achieved was a lie. Now you understand Gotham is beyond saving and must be allowed to die.'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(as CaboSanRoque)', '(as David Lucas)', '(LUAR leader)', '(local guide: Cuba)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND k.keyword IN ('tragic-villain', 'self-gratification', 'doughnut-ball', 'floatation', 'midnight-chimes')
AND mi.info = 'RAT:1.44 : 1'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info = 'Drama'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(additional location assistant)', '(Special Features)', '(as Ricardo Wiley)', '(as Tali Cochrane)', '(novel ""Yllet"")')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('pistol-whip', 'holy-land-crusades', 'vacationer', 'lerida-spain', 'bleeding-from-eyes')
AND mi.info = 'South Korea:15'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(assistant football coordinator)', '(episode MÃ¥lbrott)', '(as Rex Hale)', '(as Tricia Mara)', '(as Kari Mattson)')
AND it1.info = 'certificates'
AND it2.info = 'rating'
AND k.keyword IN ('secret-door', 'pub-crawl', 'monster-of-florence', 'room', 'car-fender')
AND mi.info = 'Canada:14A'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('imitating-a-blow-job', 'save', 'learning-identity-of-father', 'teacher-suspended', 'stuffed-owl')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(medic)', '(as Marylyn Ross)', '(as Kandee Licks)', '(as Lucien John)', '(as Jeffrey Ong)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('thief', 'japanese-shocker', 'immigrant', 'hand-drawn', 'yell')
AND mi.info = 'Trinidad and Tobago:25 July 2012'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(production assistant)', '(producer)', '(production assistant)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(creator)', '(archive footage)', '(archive footage)', '(archive footage)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('blood', 'husband-wife-relationship', 'love', 'non-fiction', 'based-on-play')
AND mi.info = 'Comedy'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'Drama'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(presenter)', '(as Kalle BjerkÃ¸)', '(as Adam Trottman)', '(as Joe Casaliggi)', '(as Mr. WC)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND k.keyword IN ('electrocution', 'train-explosion', 'weekly', 'key-master', 'surface-of-the-sun')
AND mi.info = 'Iceland:L'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Alesa B. Gantz)', '(as Jamar)', '(as Birthe Newmann)', '(as Clotilde De)', '(as Ward Williams)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND k.keyword IN ('church', 'tool-kit', 'order-of-execution', 'chopsticks-the-song', 'corregio-madonna')
AND mi.info = 'Hungary:21 June 2010'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'Animation'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(executive producer)', '(production assistant)', '(producer)', '(producer)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info = 'USA'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(creator)', '(written by)', '(archive footage)', '(archive footage)', '(written by)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND k.keyword IN ('based-on-novel', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info = 'Comedy'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(set production assistant)', '(as Dr. Lore Reich)', '(as Pete Mamakos)', '(as Brahmdutt)', '(as Printania)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND k.keyword IN ('orphan', 'moissanite', 'missoula', 'britrock', 'steam-boat')
AND mi.info = 'FAKE: SPOILER: In the final scene, when the bomb is shown ticking closer to zero, smoke is seen emanating from it slowly as if the bomb were stationery. But in fact it is hanging by a wire and carried away into the ocean by The Bat at high speed, so the smoke should travel much faster.'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'Drama'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info = 'Short'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(writer)', '(writer)', '(writer)', '(writer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info = 'Drama'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Lisa Ryall)', '(as Z. Zelinskaya)', '(as James Sheridan)', '(1915)', '(as Mark DippÃ©)')
AND it1.info = 'runtimes'
AND it2.info = 'rating'
AND k.keyword IN ('famous-song', 'youngarts', 'woolly-bully', 'digital-designer', 'ritual-sacrifice')
AND mi.info = '119'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info = 'Horror'
AND n.gender = 'f';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   keyword AS k,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   movie_keyword AS mk,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND ci.movie_id = mk.movie_id
AND mi.movie_id = mi_idx.movie_id
AND mi.movie_id = mk.movie_id
AND mi_idx.movie_id = mk.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info = 'Horror'
AND n.gender = 'm';",47,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(k mk) NestLoop(k mk mi) HashJoin(k mk mi it1) NestLoop(k mk mi it1 t) NestLoop(k mk mi it1 t ci) NestLoop(k mk mi it1 t ci n) NestLoop(k mk mi it1 t ci n mi_idx) HashJoin(k mk mi it1 t ci n mi_idx it2) Leading(((((((((k mk) mi) it1) t) ci) n) mi_idx) it2)) */
