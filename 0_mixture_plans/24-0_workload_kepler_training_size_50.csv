query,plan_id,plan_content
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Neil Almebor)', '(as Rika Schwarz)', '(rider)', '(as Jemma)')
AND cn.country_code = '[nl]'
AND it.info = 'weekend gross'
AND k.keyword IN ('action-hero', 'high-dynamic-range', 'oriental-music', 'food-basket', 'western-norway')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%O%' OR mi.info LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%u%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%M%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Kalani Lei)', '(Security)', '(as Yael Tzalka)', '(as Dr. Vera Rubin)')
AND cn.country_code = '[se]'
AND it.info = 'tech info'
AND k.keyword IN ('battle', 'atomic-weed', 'mass-spectrometer', 'licking-a-wall', 'armenian-terrorism')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%,%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'm'
AND n.name LIKE '%Q%'
AND rt.role = 'actor'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(supervising producer)', '(creator)', '(uncredited)', '(co-executive producer)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%S%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Nunn%'
AND rt.role = 'actor'
AND t.production_year > 2006;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[ee]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%William%'
AND rt.role = 'actor'
AND t.production_year > 1960;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as ClÃ¡udia Leite)', '(as T. Rossi)', '(as Nick Dawnay)', '(as Andre Charise)')
AND cn.country_code = '[gb]'
AND it.info = 'book'
AND k.keyword IN ('action-hero', 'flaming-lips', 'money-in-mail', 'cartoon-cheetah', 'based-on-journal')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%a%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Roger%'
AND rt.role = 'actor'
AND t.production_year > 2011;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%h%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 1974;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(producer)', '(production assistant)', '(producer)', '(producer)')
AND cn.country_code = '[de]'
AND it.info = 'countries'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%USA%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%Bo%'
AND rt.role = 'actor'
AND t.production_year > 2001;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(executive producer)', '(supervising producer)', '(script supervisor)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('murder', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year > 1988;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Shadia Amen)', '(as Julia Schuler)', '(Gandhi''s P.A.)', '(during Boer War)')
AND cn.country_code = '[nl]'
AND it.info = 'weekend gross'
AND k.keyword IN ('battle', 'recklessness', 'oasis', 'making-of', 'woodcut')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(uncredited)', '(production assistant)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('oral-sex', 'friendship', 'death', 'love', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Adam%'
AND rt.role = 'actor'
AND t.production_year > 2004;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'K%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%SÃ¡%'
AND rt.role = 'actor'
AND t.production_year > 1987;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Gilbert Ferro)', '(as L. Garnitsa)', '(as Gani Nofiu)', '(as Rhet Romero)')
AND cn.country_code = '[se]'
AND it.info = 'weekend gross'
AND k.keyword IN ('weapons-research', 'traffic-warden', 'working-wife', 'rolling-stones', 'fake-penis')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%(%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'independent-film', 'based-on-novel', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Eva%'
AND rt.role = 'actor'
AND t.production_year > 1960;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(written by)', '(associate producer)', '(voice)', '(associate producer)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 2007;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%must%')
AND n.gender = 'm'
AND n.name LIKE '%Dan%'
AND rt.role = 'actor'
AND t.production_year > 1983;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Art Stewart)', '(as Soluna)', '(as Maggie Li)', '(as Luanne Ponce)')
AND cn.country_code = '[se]'
AND it.info = 'novel'
AND k.keyword IN ('android', 'raising-money', 'british-colonial', 'trust-company', 'killed-with-a-bomb')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Francisco%'
AND rt.role = 'actor'
AND t.production_year > 1993;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(novel)', '(voice) (as Judy)', '(credit only)', '(archive footage)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Alexa%'
AND rt.role = 'actor'
AND t.production_year > 2003;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('number-in-title', 'bare-chested-male', 'based-on-play', 'bare-chested-male', 'father-son-relationship')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Digital%')
AND n.gender = 'm'
AND n.name LIKE '%Al%'
AND rt.role = 'actor'
AND t.production_year > 1969;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%B%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE 'V%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%D%')
AND n.gender = 'm'
AND n.name LIKE '%James%'
AND rt.role = 'actor'
AND t.production_year > 1938;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(uncredited)', '(voice)', '(production assistant)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Mark%'
AND rt.role = 'actor'
AND t.production_year > 2001;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Henri Thanos)', '(play ""Guilty"")', '(character: Max)', '(Attendant)')
AND cn.country_code = '[fr]'
AND it.info = 'screenplay-teleplay'
AND k.keyword IN ('voice-sampling', 'punched-in-the-back', 'sports-coach', 'murder-for-hire', 'personal-growth')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%f%')
AND n.gender = 'm'
AND n.name LIKE '%u%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Asiya)', '(as VIA Mirazh)', '(as T.S. Clark)', '(as Jesus GÃ³mez)')
AND cn.country_code = '[br]'
AND it.info = 'weekend gross'
AND k.keyword IN ('weapons-research', 'reference-to-rastus', 'bubble-bath', 'mash-unit', 'looking-pale')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%5%')
AND n.gender = 'm'
AND n.name LIKE '%u%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(producer)', '(credit only)', '(producer)', '(written by)')
AND cn.country_code = '[gb]'
AND it.info = 'countries'
AND k.keyword IN ('father-daughter-relationship', 'nudity', 'oral-sex', 'friendship', 'dog')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Fred%'
AND rt.role = 'actor'
AND t.production_year > 1933;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Shi Ma Shan)', '(as Shane Haworth)', '(as Valeria Rosini)', '(as Nancy Nelson)')
AND cn.country_code = '[se]'
AND it.info = 'book'
AND k.keyword IN ('weapons-research', 'gun-licking', 'babylon', 'two-cylinder-pump', 'trumpet')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%k%' OR mi.info LIKE '%T%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'm'
AND n.name LIKE '%T%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND it.info = 'release dates'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Stan Fraser)', '(as Lisa Hellwig)', '(as Marjut)', '(as Iron Cobra)')
AND cn.country_code = '[br]'
AND it.info = 'tech info'
AND k.keyword IN ('android', 'buck-rogers', 'tools', 'burning-poem', 'kamalahasan')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%)%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'budget'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%33%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%n%'
AND rt.role = 'actor'
AND t.production_year > 1980;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Apollo%')
AND n.gender = 'm'
AND n.name LIKE '%Jon%'
AND rt.role = 'actor'
AND t.production_year > 2004;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(producer)', '(uncredited)', '(uncredited)', '(associate producer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%and%')
AND n.gender = 'm'
AND n.name LIKE '%Ron%'
AND rt.role = 'actor'
AND t.production_year > 1998;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(as Jim Frawley)', '(as Sandra Grose)', '(1999-2003)', '(as Preston Pratt)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND k.keyword IN ('gun-shot', 'ironworker', 'mazda', 'playing-with-a-dog', 'stick-figure')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%r%' OR mi.info LIKE '%8%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(accounting intern)', '(as Sarah Lubell)', '(as Katrena Starr)', '(Yes, Minister)')
AND cn.country_code = '[se]'
AND it.info = 'admissions'
AND k.keyword IN ('battle', 'multiplicity', 'angry-dog', 'suggesting-suicide', 'worry-wart')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%8%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 1944;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE 'V%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'W%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Edmund Ho)', '(as Rebeka Jordan)', '(as Jo Kern)', '(as Ãun LajÃ§i)')
AND cn.country_code = '[nl]'
AND it.info = 'production process protocol'
AND k.keyword IN ('battle', 'nude-with-glasses', 'hauling-business', 'vaulted-roof', 'stalactites')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%,%' OR mi.info LIKE '%,%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(producer)', '(uncredited)', '(associate producer)', '(written by)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('anal-sex', 'male-nudity', 'death', 'blood', 'oral-sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%Weaver%'
AND rt.role = 'actor'
AND t.production_year > 2003;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'm'
AND n.name LIKE 'D%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Crawford%'
AND rt.role = 'actor'
AND t.production_year > 1976;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Persia)', '(as Albert Garrat)', '(segment ""Revenge"")', '(as Lenka Erdos)')
AND cn.country_code = '[fr]'
AND it.info = 'other literature'
AND k.keyword IN ('2020s', 'turned-into-a-wolf', 'pagan-subtext', 'english-opera', 'power-cosmic')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE '%J%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(voice)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as A. Poddubinsky)', '(as Chris Watts)', '(as Kate McClaine)', '(menu producer)')
AND cn.country_code = '[se]'
AND it.info = 'adaption'
AND k.keyword IN ('weapons-research', 'saatchi-and-saatchi', 'spiked-hair', 'alma-tunnel', 'undersea-monster')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%,%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(executive producer)', '(script supervisor)', '(production coordinator)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%JesÃºs%'
AND rt.role = 'actor'
AND t.production_year > 1904;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%S%')
AND n.gender = 'f'
AND n.name LIKE '%Maria%'
AND rt.role = 'actress'
AND t.production_year > 1961;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year > 1999;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as R. Gaylor)', '(as David MacMahon)', '(Sakura''s father)', '(as Fred Ongleo)')
AND cn.country_code = '[fr]'
AND it.info = 'screenplay-teleplay'
AND k.keyword IN ('weapons-research', 'interdisciplinary', 'michoacan', 'no-story', 'bobo-the-elephant')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%y%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(executive producer)', '(producer)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('male-nudity', 'death', 'father-daughter-relationship', 'surrealism', 'surrealism')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(animal coordinator)', '(voice)', '(voice)', '(producer)', '(producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%Sweden%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year > 1927;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(uncredited)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('independent-film', 'independent-film', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 1997;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(as Kylie Richman)', '(as KeÃ©ry Panni)', '(as L. Obrazumova)', '(Rasta)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND k.keyword IN ('liar''s-dice', 'plane-construction', 'driving', 'charity-work', 'chuquicamata-chile')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%K%' OR mi.info LIKE '%8%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Bev Wowchuk)', '(as Julien Hussey)', '(femme)', '(as Reuben Rose)')
AND cn.country_code = '[fr]'
AND it.info = 'other literature'
AND k.keyword IN ('android', 'icefall', 'sperbowl-xli', 'anaphrodisiac', 'golan-heights')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE '%Y%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%that%')
AND n.gender = 'm'
AND n.name LIKE '%Griffin%'
AND rt.role = 'actor'
AND t.production_year > 2004;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Majken WexÃ¸)', '(as Michael Morse)', '(as Paul Lousteau)', '(as Cindy McKay)')
AND cn.country_code = '[br]'
AND it.info = 'weekend gross'
AND k.keyword IN ('android', 'rings-swing', 'plethora', 'saddle-shop', 'plastic-roll')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%5%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%T%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Kevin%'
AND rt.role = 'actor'
AND t.production_year > 1984;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE '%L%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE '%Yo%'
AND rt.role = 'actress'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%B%'
AND rt.role = 'actress'
AND t.production_year > 2008;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as S. VrbickÃ¡)', '(as Allan Selwyn)', '(as Mercedes)', '(research staff)')
AND cn.country_code = '[es]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('voice-sampling', 'costa-del-sol-spain', 'compte', 'methane', 'chanel-no.-5')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%,%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%u%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE '%Angel%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Shawn%'
AND rt.role = 'actor'
AND t.production_year > 1974;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE '%Angel%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(as Harry Refn)', '(as Swaroop Dutt)', '(In Audience)', '(as MÃ¼fid Kiper)')
AND cn.country_code = '[us]'
AND it.info = 'certificates'
AND k.keyword IN ('injury', 'farm-aid-2', 'lamb-skin', 'exercising', 'hajji')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%:%')
AND n.gender = 'm'
AND n.name LIKE '%i%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(dramatist)', '(technical adviser)', '(guest artiste)', '(as V. Makarov)')
AND cn.country_code = '[nl]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('battle', 'stearn''s-wharf', 'brazilian', 'rock-palace', 'wire-service')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Ã%' OR mi.info LIKE '%""%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Eddie Zamonte)', '(as Sasha Adler)', '(Number One!)', '(as Victor Koppen)')
AND cn.country_code = '[gb]'
AND it.info = 'adaption'
AND k.keyword IN ('action-hero', 'rainforest', 'goshen-egypt', 'pastry-chef', 'drinking-blood')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%d%')
AND n.gender = 'm'
AND n.name LIKE '%u%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Abigail)', '(novel ""High Cage"")', '(chef) (2002-)', '(as Jay Downs)')
AND cn.country_code = '[gb]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('2020s', 'pass', 'ankle-splint', 'mortgage-payment', 'contemporary-music')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%d%' OR mi.info LIKE '%e%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Anton Herbert)', '(as Zach Ruben)', '(as V. Chiglyaev)', '(as Annie Schon)')
AND cn.country_code = '[fr]'
AND it.info = 'weekend gross'
AND k.keyword IN ('weapons-research', 'middle-age-couple', '8th-british-army', 'sumgait', 'microfiche')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%J%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(voice)', '(writer)', '(writer)', '(production assistant)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Amato%'
AND rt.role = 'actor'
AND t.production_year > 2003;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Tanya Larivier)', '(as Bob Clampett)', '(as MÃ¢ku NÃ®ruson)', '(certified angel)')
AND cn.country_code = '[br]'
AND it.info = 'opening weekend'
AND k.keyword IN ('weapons-research', 'emotional-breakdown', 'frog-imitation', 'organism', 'list-making')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%$%' OR mi.info LIKE '%7%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(executive producer)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%A%')
AND n.gender = 'f'
AND n.name LIKE '%D%'
AND rt.role = 'actress'
AND t.production_year > 2007;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Approved%')
AND n.gender = 'f'
AND n.name LIKE '%Erica%'
AND rt.role = 'actress'
AND t.production_year > 1962;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[jp]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE '%V%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE '%E%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(credit only)', '(as GÃ¼nter Burger)', '(as Wu Dajiang)', '(as Tom Gulliver)', '(as Jade East)')
AND cn.country_code = '[nl]'
AND it.info = 'certificates'
AND k.keyword IN ('explosion', 'cuban-politics', 'burst-water-pipe', 'common-sense', 'solophobia')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%h%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Q%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(voice)', '(uncredited)', '(uncredited)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('father-daughter-relationship', 'one-word-title', 'police', 'blood', 'death')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%OFM%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'Japan:%200%')
AND n.gender = 'm'
AND n.name LIKE 'M%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'Y%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Tony Ling)', '(as Crystal Ashley)', '(as Becky Bowles)', '(as Maja Hendrickx)')
AND cn.country_code = '[nl]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('weapons-research', 'third-person', 'separated-brothers', 'limb-in-traction', 'temporary-visa')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%¥%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Vincent Voss)', '(as Bob Saenz)', '(as Oleg Widow)', '(as Rusty Bolin)')
AND cn.country_code = '[es]'
AND it.info = 'book'
AND k.keyword IN ('2020s', 'debris', 'legal-strategy', 'beslan', 'helix')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%""%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(1990-2004)', '(as Piti Espanyol)', '(as Thomas Jackson)', '(as Kolya Valeyev)')
AND cn.country_code = '[es]'
AND it.info = 'adaption'
AND k.keyword IN ('android', 'maupassant', 'chevalin', 'tattoo-artist', 'final-episode')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%,%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE '%R%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production coordinator)', '(creator)', '(production assistant)', '(co-executive producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%PFM%' OR mi.info LIKE '%Portugal%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year > 1941;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(producer)', '(producer)', '(production assistant)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%u%')
AND n.gender = 'm'
AND n.name LIKE '%Michael%'
AND rt.role = 'actor'
AND t.production_year > 1981;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'm'
AND n.name LIKE 'G%'
AND rt.role = 'actor'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice: Japanese version)', '(voice)', '(producer) (as Fred DeCordova)', '(talent coordinator)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%with%')
AND n.gender = 'm'
AND n.name LIKE '%Robert%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as M. Snajdr)', '(as Yanine Bertoli)', '(as Harry LaMont)', '(caterer: Oregon)')
AND cn.country_code = '[gb]'
AND it.info = 'weekend gross'
AND k.keyword IN ('action-hero', 'gang', 'gay-pornography', 'field-glasses', 'threatening-call')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%e%' OR mi.info LIKE '%7%')
AND n.gender = 'm'
AND n.name LIKE '%T%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as George Arthur)', '(as San Pestonji)', '(as Koel)', '(as April Chapple)')
AND cn.country_code = '[fr]'
AND it.info = 'other literature'
AND k.keyword IN ('battle', 'behind-the-line', 'loss-of-reality', 'movie-investor', 'pretend-yarmulke')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%F%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%he%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%D%'
AND rt.role = 'actor'
AND t.production_year > 1966;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'm'
AND n.name LIKE '%I%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[nl]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE 'J%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jose%'
AND rt.role = 'actor'
AND t.production_year > 1997;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(Special Features)', '(as Vakila Maan)', '(as Rita Tobin)', '(as Vadim Tsalatti)')
AND cn.country_code = '[se]'
AND it.info = 'tech info'
AND k.keyword IN ('battle', 'texarkana-arkansas', 'roman-10th-legion', 'plastic-pool', 'bloody-sunday')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%were%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(1985 production)', '(as Phill Carey)', '(as Vica Borg)', '(Organ)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('gold-rush', 'ten-cents-a-dance', 'segment-block', 'roman-salute', 'committee-hearing')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%K%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'm'
AND n.name LIKE 'C%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'm'
AND n.name LIKE 'H%'
AND rt.role = 'actor'
AND t.production_year > 2008;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Logan Aria)', '(HÃ©rodiade)', '(as Miss Elizabeth)', '(as Kenneth Mok)')
AND cn.country_code = '[fr]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('action-hero', 'threshold', 'christmas-food', 'pre-adolescent', 'condoning-suicide')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Ann C. Johnson)', '(dancer)', '(as Helene Mahieu)', '(stand-in: Cody)')
AND cn.country_code = '[br]'
AND it.info = 'trivia'
AND k.keyword IN ('voice-sampling', 'whiskey-runner', 'gang-summit', 'print-services', 'tarkovsky')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('murder', 'female-nudity', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Merv%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Lachelle)', '(as Francis M)', '(as Donna Dare)', '(as Natalia Harris)')
AND cn.country_code = '[us]'
AND it.info = 'budget'
AND k.keyword IN ('weapons-research', 'female-stalker', 'world-trade', 'free-agency', 'alfred-wainwright')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%,%' OR mi.info LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(as Joe-B)', '(as Noel Torren)', '(as Dr Ross Stein)', '(as Wendy Slick)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('hanging', '1911-38-super', 'ex-nobleman', 'self-search', 'genetic-code')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%K%' OR mi.info LIKE '%U%')
AND n.gender = 'm'
AND n.name LIKE '%R%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(voice)', '(production assistant)', '(voice)', '(writer)')
AND cn.country_code = '[fr]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Martin%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Dominic Young)', '(as I Yu)', '(as J.M. Henry)', '(as Boris)')
AND cn.country_code = '[fr]'
AND it.info = 'trivia'
AND k.keyword IN ('2020s', 'viral-video', 'everglades', 'uno-floag', 'drift-nets')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%v%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[fr]'
AND it.info = 'countries'
AND k.keyword IN ('violence', 'non-fiction', 'friendship', 'father-daughter-relationship', 'non-fiction')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%C%')
AND n.gender = 'm'
AND n.name LIKE '%Bob%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Mike Wise)', '(as Al Morgenstern)', '(as J.J. Clark)', '(as Nico Papatakis)')
AND cn.country_code = '[br]'
AND it.info = 'filming dates'
AND k.keyword IN ('android', 'simple-life', 'hyrophobia', 'islamic-mythology', 'talking-pigs-head')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%c%' OR mi.info LIKE '%c%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(production assistant)', '(uncredited)', '(writer)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Black%' OR mi.info LIKE '%l%')
AND n.gender = 'm'
AND n.name LIKE '%Savage%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(supervising producer)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%1%')
AND n.gender = 'f'
AND n.name LIKE '%Mann%'
AND rt.role = 'actress'
AND t.production_year > 1943;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%being%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Joey%'
AND rt.role = 'actor'
AND t.production_year > 1972;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%H%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'Z%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(written by)', '(written by)', '(written by)', '(co-producer)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%talking%' OR mi.info LIKE '%A%')
AND n.gender = 'm'
AND n.name LIKE '%O%'
AND rt.role = 'actor'
AND t.production_year > 2007;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'f'
AND n.name LIKE 'B%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(producer)', '(uncredited)', '(uncredited)', '(producer)', '(uncredited)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%OFM%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%Armand%'
AND rt.role = 'actor'
AND t.production_year > 1983;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Khurshed Khan)', '(as Eva Zora)', '(screenplay) (1972)', '(as Manuel Matos)')
AND cn.country_code = '[fr]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('android', 'child-crime', 'tasmania', 'skinny', 'rio-grande')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%4%' OR mi.info LIKE '%w%')
AND n.gender = 'm'
AND n.name LIKE '%m%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%O%'
AND rt.role = 'actress'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'm'
AND n.name LIKE 'S%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE 'Y%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'T%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 1997;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('tv-mini-series', 'sequel', 'male-nudity', 'number-in-title', 'male-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year > 2012;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'm'
AND n.name LIKE 'Y%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('sequel', 'based-on-play', 'male-nudity', 'death', 'love')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%Paul%'
AND rt.role = 'actor'
AND t.production_year > 1948;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(producer)', '(executive producer)', '(voice)', '(writer)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('sex', 'sex', 'sex', 'sex', 'sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%Spherical%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Richard%'
AND rt.role = 'actor'
AND t.production_year > 1998;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE '%I%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE 'Y%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE 'K%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(truck shacker)', '(as D. Andreyev)', '(Andrade)', '(as Georgij Miljar)')
AND cn.country_code = '[se]'
AND it.info = 'book'
AND k.keyword IN ('action-hero', 'cobwebs', 'the-iron-wall', 'tango-singer', 'seducing-a-minor')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%D%' OR mi.info LIKE '%m%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(writer)', '(script producer)', '(executive producer)', '(voice)', '(writer)')
AND cn.country_code = '[fr]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Stephen%'
AND rt.role = 'actor'
AND t.production_year > 2004;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[de]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'G%'
AND rt.role = 'actress'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%K%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'L%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Kenneth Gamble)', '(as Kay Hartrey)', '(help movies)', '(as Donald Hebb)')
AND cn.country_code = '[us]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('action-hero', 'peace-symbol', 'island-fortress', 'sacristan', 'thrown-out-naked')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%1%' OR mi.info LIKE '%i%')
AND n.gender = 'm'
AND n.name LIKE '%.%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%S%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(""Voltaire"")', '(as Nicoli Lemeni)', '(as Kolya Pogodin)', '(as Peter Colburn)')
AND cn.country_code = '[gb]'
AND it.info = 'trivia'
AND k.keyword IN ('voice-sampling', 'scaffidi', 'ancient-battle', '2500s', 'clanger')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%t%')
AND n.gender = 'm'
AND n.name LIKE '%s%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Lesa Donai)', '(as Kirsti Bourne)', '(as Bob Cosci)', '(as Luis Noguiera)')
AND cn.country_code = '[es]'
AND it.info = 'trivia'
AND k.keyword IN ('android', 'brewery-worker', 'tb-test', 'hydrotherapy', 'carp')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%t%' OR mi.info LIKE '%d%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(associate producer)', '(written by)', '(producer)', '(production assistant)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%and%' OR mi.info LIKE '%PFM%')
AND n.gender = 'f'
AND n.name LIKE '%Ho%'
AND rt.role = 'actress'
AND t.production_year > 2011;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as A. Tatarskiy)', '(14 episodes 1997-)', '(as Roger Alford)', '(as Ben Weldon)')
AND cn.country_code = '[nl]'
AND it.info = 'rentals'
AND k.keyword IN ('battle', 'guide-animal', 'long-running-tv', 'christian-theme', 'pulsating-image')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%0%' OR mi.info LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%e%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Lev Grossman)', '(as Tamara Jackson)', '(as Buddy Windrush)', '(as T. Klotz)')
AND cn.country_code = '[fr]'
AND it.info = 'tech info'
AND k.keyword IN ('battle', 'in-flight-magazine', 'sajuaro-cactus', 'invisible-children', 'shadow-on-wall')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%P%')
AND n.gender = 'm'
AND n.name LIKE '%a%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Budd Stout)', '(fence master)', '(as Ben Salisbury)', '(as Ben Gordon)')
AND cn.country_code = '[fr]'
AND it.info = 'novel'
AND k.keyword IN ('2020s', 'hokianga', 'flip-phone', 'sandpoint', 'polka-dot-dress')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%k%' OR mi.info LIKE '%R%')
AND n.gender = 'm'
AND n.name LIKE '%b%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(production assistant)', '(uncredited)', '(voice)', '(producer)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%delinquent%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Silvera%'
AND rt.role = 'actor'
AND t.production_year > 2002;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE 'R%'
AND rt.role = 'actress'
AND t.production_year > 1950;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('father-son-relationship', 'tv-mini-series', 'number-in-title', 'nudity', 'anal-sex')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2001;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%2008%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE '%Z%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(production assistant)', '(uncredited)', '(voice)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%l%' OR mi.info LIKE '%M%')
AND n.gender = 'f'
AND n.name LIKE '%Bobby%'
AND rt.role = 'actress'
AND t.production_year > 1966;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Mike Badalucco)', '(as Doug Stewart)', '(as Saundarya)', '(as Ãgnes Zsiros)')
AND cn.country_code = '[nl]'
AND it.info = 'adaption'
AND k.keyword IN ('battle', 'grand-prize', 'female-porn', 'shohreh-aghdashloo', 'laughing-mask')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%8%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%201%')
AND n.gender = 'f'
AND n.name LIKE '%G%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Gene LaMotte)', '(as H. RuzickovÃ¡)', '(as Maddie Johnson)', '(as Jodee Tochi)')
AND cn.country_code = '[es]'
AND it.info = 'tech info'
AND k.keyword IN ('voice-sampling', 'samba-dance', 'self-defense-force', 'tv-signal', 'secret-ingredient')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%2%' OR mi.info LIKE '%T%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:% 199%')
AND n.gender = 'f'
AND n.name LIKE 'O%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'countries'
AND k.keyword IN ('based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Jordan%'
AND rt.role = 'actor'
AND t.production_year > 2004;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as S. Sokolovic)', '(clothes: Menudo)', '(as Mancow Muller)', '(as Mel Zwyer)')
AND cn.country_code = '[nl]'
AND it.info = 'tech info'
AND k.keyword IN ('weapons-research', 'scratched-inside', 'blood-legion', 'political-club', 'miniature-oscar')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%s%' OR mi.info LIKE '%n%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'N%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[ru]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%201%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(Naive Actor)', '(Benjamin Roux)', '(publicist: Spain)', '(2-nd episode)')
AND cn.country_code = '[us]'
AND it.info = 'quotes'
AND k.keyword IN ('general-store', 'evening-class', 'health-fanaticism', 'male-slaps-female', 'giant-moth')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%n%' OR mi.info LIKE '%g%')
AND n.gender = 'm'
AND n.name LIKE '%t%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'independent-film', 'independent-film', 'independent-film', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')
AND n.gender = 'm'
AND n.name LIKE '%W%'
AND rt.role = 'actor'
AND t.production_year > 2003;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Sreehari Nanu)', '(as J. KrejcikovÃ¡)', '(unit nurse: Italy)', '(as Graham Blicq)')
AND cn.country_code = '[es]'
AND it.info = 'novel'
AND k.keyword IN ('weapons-research', 'fallen-idol', 'pork-sausage', 'pulp-fiction', 'gnome')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%m%' OR mi.info LIKE '%1%')
AND n.gender = 'm'
AND n.name LIKE '%r%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE '%N%'
AND rt.role = 'actress'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(supervising producer)', '(archive footage)', '(production coordinator)')
AND cn.country_code = '[gb]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'female-nudity', 'murder', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%U%' OR mi.info LIKE '%s%')
AND n.gender = 'm'
AND n.name LIKE '%Young%'
AND rt.role = 'actor'
AND t.production_year > 2006;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'female-nudity', 'murder', 'female-nudity', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%35%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Frank%'
AND rt.role = 'actor'
AND t.production_year > 2007;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(executive producer)', '(executive producer)')
AND cn.country_code = '[de]'
AND it.info = 'genres'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%mm%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 1975;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('hardcore', 'hardcore', 'hardcore', 'hardcore', 'hardcore')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%o%' OR mi.info LIKE '%Lt%')
AND n.gender = 'm'
AND n.name LIKE '%Bradley%'
AND rt.role = 'actor'
AND t.production_year > 1964;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Ignacio BruÃ±a)', '(as Cindy McCain)', '(bear double)', '(as Winfried Klaus)')
AND cn.country_code = '[se]'
AND it.info = 'printed media reviews'
AND k.keyword IN ('android', 'poster-art', 'christmas-episode', 'covered-in-tar', 'lactate-threshold')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%u%' OR mi.info LIKE '%.%')
AND n.gender = 'm'
AND n.name LIKE '%o%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as J.R.Larrath)', '(as G.Gotovchits)', '(as Robert Blood)', '(as DJ August)')
AND cn.country_code = '[es]'
AND it.info = 'weekend gross'
AND k.keyword IN ('2020s', 'workbook', 'school-integration', 'safety-catch', 'bunny-costume')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%4%' OR mi.info LIKE '%9%')
AND n.gender = 'm'
AND n.name LIKE '%A%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(producer)', '(uncredited)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('independent-film', 'based-on-novel', 'based-on-novel', 'based-on-novel', 'independent-film')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%y%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Franco%'
AND rt.role = 'actor'
AND t.production_year > 1996;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(animal coordinator)', '(voice)', '(executive producer)', '(producer)', '(creator)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'murder', 'murder')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%stay%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%C%'
AND rt.role = 'actor'
AND t.production_year > 2009;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:%200%')
AND n.gender = 'f'
AND n.name LIKE 'T%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%200%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'm'
AND n.name LIKE '%Angel%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(script supervisor)', '(uncredited)', '(production coordinator)', '(voice)', '(co-executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%mm%' OR mi.info LIKE '%o%')
AND n.gender = 'f'
AND n.name LIKE '%MacFarlane%'
AND rt.role = 'actress'
AND t.production_year > 1968;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(as Curtis Scott)', '(as Lem Pelayo)', '(theme song)', '(Patsy''s Sister)')
AND cn.country_code = '[es]'
AND it.info = 'trivia'
AND k.keyword IN ('weapons-research', 'boy', 'eisner-award', 'jewish-studies', 'alone-in-house')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%.%')
AND n.gender = 'm'
AND n.name LIKE '%h%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'A%'
AND rt.role = 'actress'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('female-nudity', 'murder', 'female-nudity', 'female-nudity', 'female-nudity')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%C%' OR mi.info LIKE '%Spherical%')
AND n.gender = 'm'
AND n.name LIKE '%Ho%'
AND rt.role = 'actor'
AND t.production_year > 2005;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(executive producer)', '(writer)', '(writer)', '(uncredited)', '(executive producer)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%E%' OR mi.info LIKE '%S%')
AND n.gender = 'm'
AND n.name LIKE '%Friedman%'
AND rt.role = 'actor'
AND t.production_year > 1986;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(supervising producer)', '(executive producer)', '(written by)', '(credit only)', '(archive footage)')
AND cn.country_code = '[us]'
AND it.info = 'genres'
AND k.keyword IN ('character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title', 'character-name-in-title')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%i%' OR mi.info LIKE '%o%')
AND n.gender = 'm'
AND n.name LIKE '%Joe%'
AND rt.role = 'actor'
AND t.production_year > 2000;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(as Charles Tamburro)', '(Mother of Mike)', '(as Ezio Cristiani)', '(as Hugh Arden)', '(as Ned Vukovich)')
AND cn.country_code = '[us]'
AND it.info = 'rentals'
AND k.keyword IN ('battle', 'tunnel-builder', 'community-media', 'disco-bar', 'weapon-collection')
AND mi.info IS NOT NULL
AND (mi.info LIKE '%9%' OR mi.info LIKE '%0%')
AND n.gender = 'm'
AND n.name LIKE '%l%'
AND rt.role = 'actor'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 200%' OR mi.info LIKE 'USA:%2008%')
AND n.gender = 'f'
AND n.name LIKE 'P%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'Japan:%2007%')
AND n.gender = 'f'
AND n.name LIKE '%F%'
AND rt.role = 'actress'
AND t.production_year > 1990;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
"SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an,
   char_name AS chn,
   cast_info AS ci,
   company_name AS cn,
   info_type AS it,
   keyword AS k,
   movie_companies AS mc,
   movie_info AS mi,
   movie_keyword AS mk,
   name AS n,
   role_type AS rt,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND t.id = mk.movie_id
AND mc.movie_id = ci.movie_id
AND mc.movie_id = mi.movie_id
AND mc.movie_id = mk.movie_id
AND mi.movie_id = ci.movie_id
AND mi.movie_id = mk.movie_id
AND ci.movie_id = mk.movie_id
AND cn.id = mc.company_id
AND it.id = mi.info_type_id
AND n.id = ci.person_id
AND rt.id = ci.role_id
AND n.id = an.person_id
AND ci.person_id = an.person_id
AND chn.id = ci.person_role_id
AND k.id = mk.keyword_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND cn.country_code = '[us]'
AND it.info = 'release dates'
AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
AND mi.info IS NOT NULL
AND (mi.info LIKE 'USA:%201%' OR mi.info LIKE 'USA:% 200%')
AND n.gender = 'f'
AND n.name LIKE 'F%'
AND rt.role = 'actress'
AND t.production_year > 2010;",80,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) SeqScan(rt) IndexScan(n name_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(an person_id_aka_name) IndexScan(chn char_name_pkey) NestLoop(k mk) NestLoop(k mk t) NestLoop(k mk t ci) HashJoin(k mk t ci rt) NestLoop(k mk t ci rt n) NestLoop(k mk t ci rt n mi) NestLoop(k mk t ci rt n mi it) NestLoop(k mk t ci rt n mi it mc) NestLoop(k mk t ci rt n mi it mc cn) NestLoop(k mk t ci rt n mi it mc cn an) NestLoop(k mk t ci rt n mi it mc cn an chn) Leading((((((((((((k mk) t) ci) rt) n) mi) it) mc) cn) an) chn)) */
