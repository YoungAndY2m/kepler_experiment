query,plan_id,plan_content
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(as Vilya Morelle)', '(as Dr. David Page)', '(as Rinnen Roland)', '(as Jacob Bresler)')
AND it1.info = 'sound mix'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'C%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as John M. Scurti)', '(laser recording)', '(hotel liaison)', '(as Mike Kallio)')
AND it1.info = 'gross'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%t%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Downey%Robert%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(associate producer)', '(associate producer)', '(writer)', '(writer)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Maurice%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Roger%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(segment ""Egavaros, egahazis/Fire! Fire!"")', '(as Michele Kidd)', '(as Nicole Lorayne)', '(episode 6) (1992)', '(as Alan Marlo)')
AND it1.info = 'tech info'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%S%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(executive producer)', '(as Michelle Harrison)', '(utility)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND n.gender = 'f'
AND n.name LIKE '%Smith%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Jim%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Jim%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Larson%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(teleplay)', '(as ary Iskak)', '(research advice)', '(as Katrin Gebelin)', '(deaf consultant)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%i%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(writer)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Steve%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'J%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(voice)', '(voice)', '(writer)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Aaron%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as Jessica Fine)', '(data optimization)', '(as Chris Simis)', '(as Joe Jauch)')
AND it1.info = 'sound mix'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'X%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Bradley%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(executive producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Frank%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%J%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Patrick Smith)', '(as Holly Woodstar)', '(stand-in: Katja)', '(as Dave Wasson)', '(as Lew Foster)')
AND it1.info = 'LD year'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%m%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(co-executive producer)', '(written by)', '(co-producer)', '(production coordinator)', '(supervising producer)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%MacFarlane%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'G%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(2005)', '(production assistant)', '(uncredited)', '(as Ioannis Ioannidis)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Judge%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Gary%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%M%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%X%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Jared%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Bradley%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Ted Smith)', '(as Lee Kwok Lun)', '(Aged 2)', '(as HelloGoodbye)', '(as Boris Konecny)')
AND it1.info = 'production process protocol'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%''%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(wrangler gang boss)', '(at age 5)', '(as Nelda Fahmy)', '(as Aggy)', '(as Harve Selsby)')
AND it1.info = 'budget'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%,%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%Timothy%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(scenes deleted)', '(as Lord Burgess)', '(Cape Cod)', '(novel ""Psyche"")', '(as Eileen Baker)')
AND it1.info = 'opening weekend'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%r%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'top 250 rank'
AND n.gender = 'f'
AND n.name LIKE 'A%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%V%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%C%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as Stolle)', '(Vice President)', '(episodes 5, 7)', '(as Sacha Nikolic)')
AND it1.info = 'taglines'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%e%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(archive footage)', '(written by)', '(co-producer)', '(written by)', '(written by)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Yu%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(supervising producer)', '(script supervisor)', '(co-executive producer)', '(creator)', '(production coordinator)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Griffin%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Soares%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Bruckheimer%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as Arthur Cheeney)', '(as Diane Fisher)', '(as Sandu Gruia)', '(as Carding Santos)')
AND it1.info = 'LD video standard'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%n%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Kohn Eugene)', '(as Luke Wright)', '(as Rosa ClarÃ )', '(as Pachi Damos)', '(as DJ Muggs)')
AND it1.info = 'languages'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%u%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Y%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(head writer)', '(voice)', '(executive producer)', '(head writer)')
AND it1.info = 'budget'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Hank%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%G%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'budget'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%S%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%J%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%W%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(garage assistant)', '(as Mark Eliot)', '(as Jamie Hook)', '(as SebÃµk KlÃ¡ra)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%,%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%Armand%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'D%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production associate)', '(actors director)', '(writer)', '(writer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Kenny%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(""Guerrieri della notte"")', '(as Anwar Husein)', '(as Brewster Twins)', '(as Allan Weeks)', '(as KyÃ´ko Tsuruno)')
AND it1.info = 'locations'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%l%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%S%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(senior associate producer)', '(executive producer)', '(executive producer)', '(production coordinator)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Stanton%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(Sushi Shop)', '(as Frau Sterr)', '(as Joseph Mallory)', '(as Frederick Solm)', '(Brati''s father)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%O%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(writer)', '(associate producer)', '(writer)', '(associate producer)')
AND it1.info = 'release dates'
AND it2.info = 'top 250 rank'
AND n.gender = 'f'
AND n.name LIKE '%L%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Rudy%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Fox%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice) (uncredited)', '(as John Fernan)', '(as Jasmine Rose)', '(as Sabina Caren)', '(as E. Dalmases)')
AND it1.info = 'printed media reviews'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%m%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Steve%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(associate producer)', '(writer)', '(associate producer)', '(associate producer)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Barrie%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(assistant: Ms. Nora Ephron)', '(writer)', '(uncredited)', '(voice-over director)', '(as La UniÃ³n) (archive footage)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Frank%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(assistant choreographer)', '(as Anne Taskinen)', '(as Charlie Chiodo)', '(stand-in: Flynn)', '(as Franck Roussel)')
AND it1.info = 'plot'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%i%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Sova) (also as Payushchie Trusy)', '(as Michele Wolff)', '(as Diane Adderly)', '(as Tim Brennan)', '(as Michel Parrier)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'Z%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(production assistant)', '(production assistant)', '(production assistant)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Michael%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE 'E%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(dancer)', '(as I.Persayev)', '(Scared Person #2)', '(Fu Gong Gwan)', '(as The Go-Go''s)')
AND it1.info = 'sound mix'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'budget'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Michael%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Downey%Robert%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%X%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'P%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(Rupa''s mother)', '(as Iwan Mosjukin)', '(segment ""Goldie"")', '(as Tony Zanlungo)')
AND it1.info = 'quotes'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%e%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'I%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(executive producer)', '(executive producer)', '(voice)', '(writer)')
AND it1.info = 'budget'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%Friedman%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE 'K%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%D%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Z%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(1995-1996, 1997-)', '(as Tina Tedeschi)', '(as Bianka Arden)', '(as Dr. Anna Pous)')
AND it1.info = 'production dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%y%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(Wonky Whistle)', '(as Vasile Grigore)', '(as Dilip Basu)', '(as Chas Wagenheim)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%y%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(puppet fabricator)', '(as Franke Hughes)', '(as Frank Anore)', '(as Wai Liu)', '(as Charlotte Wynn)')
AND it1.info = 'runtimes'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%u%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(play)', '(1999-2000, 2001)', '(as Welles Phargoe)', '(as Gabriel Swann)', '(as Ben Huissman)')
AND it1.info = 'color info'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%e%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(Michel)', '(Cowboy)', '(as DJ Neil)', '(as Val Biscoglio)')
AND it1.info = 'gross'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%r%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(writer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Dan%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as Mortimer Lodge)', '(as Cy Thompson)', '(seasons 3-4)', '(as Johnny V)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%s%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%L%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Jemima%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Paulsen%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Z%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'B%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(segment ""Mukha"")', '(remix) (2003)', '(non-sexual role)', '(novel Verter)', '(as Maya ItÃ´)')
AND it1.info = 'color info'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%l%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'E%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(adprom manager)', '(writer)', '(voice)', '(actors director)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%Aaron%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE 'L%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'B%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(as Dee Summer)', '(as Mark Curtis)', '(as Hui-Chi Chiu)', '(as Paul J. Darby)')
AND it1.info = 'locations'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%,%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(as Brittany Berry)', '(as Van Mattimore)', '(as Santosh Jadhav)', '(as Phil Simms)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%F%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(on-set interviews)', '(as Nicole Garduno)', '(as Barry M. Lando)', '(as Richard Dahm)', '(as Indriati Iskak)')
AND it1.info = 'languages'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%n%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'B%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)', '(production assistant)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Christian%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(associate producer)', '(writer)', '(associate producer)', '(writer)', '(writer)')
AND it1.info = 'genres'
AND it2.info = 'bottom 10 rank'
AND n.gender = 'f'
AND n.name LIKE '%J%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%E%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Roberts%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(Ricky The Rocket)', '(as Tom Donachie)', '(# 2) (1995-1996)', '(as Marianne Mosa)', '(3 episodes 2000)')
AND it1.info = 'gross'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%n%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Claudio Faeh)', '(as Subhi Raj)', '(#1) (1990-1992)', '(Final Incarnate)', '(as I. Ungureanu)')
AND it1.info = 'quotes'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%d%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(actors director)', '(as David PÃ©rez)', '(executive producer)', '(writer)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Sean%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%G%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'V%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'B%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Glenn%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(A-Team)', '(as Chan Chi Keung)', '(as Jeffery Scott)', '(as Scubaboy)', '(as Matsoe Matsoe)')
AND it1.info = 'runtimes'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%f%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(voice)', '(producer)', '(writer)', '(writer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Cartwright%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(body double: Sterling Knight'')', '(Aand''s Uncle)', '(as Tilman Wolff)', '(as Henney)', '(as Bowd J. Beal)')
AND it1.info = 'plot'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%,%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'J%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Q%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(assistant: Mr. Wick)', '(as Jodie Meares)', '(as Wilhelm Lund)', '(black & white art)', '(as Sartaj Garewal)')
AND it1.info = 'LD video standard'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%i%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(assistant to producer)', '(written by) (1991)', '(as Vajda LÃ¡szlÃ³)', '(as Sarisino)', '(as Otto Mellis)')
AND it1.info = 'filming dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%e%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(executive producer)', '(creator)', '(executive producer)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Jeff%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(screenplay) (as Suso)', '(as Wena Basco)', '(as Rachael Ryan)', '(as El Porreto)', '(chief engineer)')
AND it1.info = 'color info'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%i%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice: Japanese Version)', '(sound poem ""Che"")', '(as Prof Bob Brown)', '(as Anthea Wyndham)', '(puppeteer: Zeppy)')
AND it1.info = 'tech info'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%s%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Griffin%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(stand-in)', '(as Maxwell Dees)', '(as Toni PizÃ¡)', '(as Walter Stumvol)', '(as Fong Yie)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%M%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Andy%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(stills intern) (uncredited)', '(TV cameraman)', '(as Padma Chohan)', '(as Richard Rod)', '(as T. Rymaryova)')
AND it1.info = 'mpaa'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%m%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(executive producer)', '(child acting coach)', '(executive producer)', '(consulting producer)')
AND it1.info = 'budget'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Trey%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%L%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Stanislav%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Albers%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%G%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%S%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%P%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%Bradley%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'A%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Dee%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(principal: One PR)', '(shaman)', '(as Samuli Edelman)', '(as A. Kamenkova)')
AND it1.info = 'languages'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%C%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'S%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%N%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'G%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(writer)', '(associate producer)', '(associate producer)', '(writer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Craig%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Geoff%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'budget'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'O%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%An%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Dee%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Mike%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%I%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%X%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'A%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Andrew Meredith)', '(song ""Loot Gayi"")', '(as Axelle Grelet)', '(as Root Login)', '(as Mary McCann)')
AND it1.info = 'languages'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%l%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Parker%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(executive producer)')
AND it1.info = 'budget'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%T%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%Q%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'F%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(written by)', '(as Niya)', '(as A. Baturin)', '(as Yang Shu Hsi)', '(play ""The Women"")')
AND it1.info = 'alternate versions'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%i%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Downey%Robert%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(as V. Artemov)', '(as Cody Milo)', '(as Vanessa Cowan)', '(as Nick O''Dell)')
AND it1.info = 'certificates'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%e%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(caterer)', '(as George Romero)', '(as Monique La Rue)', '(Hit Man 1)', '(as PJ Avellana)')
AND it1.info = 'sound mix'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(voice)', '(voice)', '(voice)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%Jim%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as Margot Depard)', '(as Nataly Szep)', '(as N.Pazhitnov)', '(as Hally Hammond)')
AND it1.info = 'locations'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer: studio interviews)', '(stand-in: ""Kate"")', '(as Zina Dean)', '(as Kitty Moffat)', '(as Andy Basore)')
AND it1.info = 'weekend gross'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%W%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(as Haraszhy Mici)', '(as Yuyito)', '(as Hao Liu)', '(as Irma Gonzalez)')
AND it1.info = 'sound mix'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%g%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production assistant)', '(production assistant)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Mike%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Downey%Robert%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(creator)', '(co-executive producer)', '(co-executive producer)', '(script supervisor)', '(archive footage)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Armand%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE 'J%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice)', '(writer)', '(writer)', '(stage manager)')
AND it1.info = 'genres'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Victor%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(business & legal affairs: Galafilm)', '(as Opalyn Foster)', '(web department)', '(as Thomas Brooke)', '(as Nela Congiu)')
AND it1.info = 'taglines'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%c%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'countries'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Angel%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Peeya Rai Choudhuri)', '(music & songs by)', '(as Kurt Craven)', '(as Buford Hayes)', '(as Brian Monahan)')
AND it1.info = 'runtimes'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%C%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE 'D%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Roger%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(2006)', '(clearance support)', '(FÃ¸rste Offer)', '(as Demia Moore)', '(as Lisa Gerber)')
AND it1.info = 'plot'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%i%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%B%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'R%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(production secretary)', '(as George Aguilar)', '(as Phi Phi O''Hara)', '(as RyÃ´ko Ãtani)', '(The Wild Ratz)')
AND it1.info = 'runtimes'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%,%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(voice)', '(voice)', '(executive producer)', '(executive producer)')
AND it1.info = 'release dates'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Harry%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(script supervisor)', '(as Sparky Mizzro)', '(book ""Myra"")', '(as Narma Ya)', '(as Carlos Caetano)')
AND it1.info = 'weekend gross'
AND it2.info = 'votes'
AND n.gender = 'f'
AND n.name LIKE '%B%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'N%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Erik%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(producer)', '(producer)', '(producer)', '(producer)', '(producer)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Bennett%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)', '(executive producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Paulsen%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Roger%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(archive footage) (uncredited)', '(Scene''s Deleted)', '(as Yulia Volkova)', '(as E. Goryachij)', '(as Anna SahÃºn)')
AND it1.info = 'copyright holder'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%a%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(segment ""Homecoming Day"")', '(as Chrystal Lowe)', '(as Kh. Braun)', '(as L. Gaziyeva)', '(as Kirka Babitsin)')
AND it1.info = 'countries'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%W%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'release dates'
AND it2.info = 'votes'
AND n.gender = 'm'
AND n.name LIKE '%Bennett%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Armand%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'C%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%S%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'genres'
AND it2.info = 'top 250 rank'
AND n.gender = 'm'
AND n.name LIKE '%Merv%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Gorji Obadiah)', '(as John Jacquet)', '(as JoÃ© Prestia)', '(as Francis Cox)', '(as Star Chandler)')
AND it1.info = 'tech info'
AND it2.info = 'votes distribution'
AND n.gender = 'm'
AND n.name LIKE '%G%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'countries'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'Y%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE '%Stewart%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)', '(uncredited)')
AND it1.info = 'release dates'
AND it2.info = 'top 250 rank'
AND n.gender = 'f'
AND n.name LIKE '%Roger%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(associate producer)', '(associate producer)', '(writer)', '(associate producer)', '(associate producer)')
AND it1.info = 'genres'
AND it2.info = 'votes distribution'
AND n.gender = 'f'
AND n.name LIKE '%Rob%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(as Miss Lani)', '(1991,1994)', '(as Arsh)', '(as Mirajker)', '(as Stephen Windon)')
AND it1.info = 'goofs'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE '%n%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'X%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'release dates'
AND it2.info = 'rating'
AND n.gender = 'f'
AND n.name LIKE 'O%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
"SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci,
   info_type AS it1,
   info_type AS it2,
   movie_info AS mi,
   movie_info_idx AS mi_idx,
   name AS n,
   title AS t
WHERE t.id = mi.movie_id
AND t.id = mi_idx.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mi.movie_id
AND ci.movie_id = mi_idx.movie_id
AND mi.movie_id = mi_idx.movie_id
AND n.id = ci.person_id
AND it1.id = mi.info_type_id
AND it2.id = mi_idx.info_type_id
AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
AND it1.info = 'genres'
AND it2.info = 'rating'
AND n.gender = 'm'
AND n.name LIKE 'T%';",9,/*+  SeqScan(ci) SeqScan(n) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) HashJoin(ci n) NestLoop(ci n mi) HashJoin(ci n mi it1) NestLoop(ci n mi it1 mi_idx) HashJoin(ci n mi it1 mi_idx it2) NestLoop(ci n mi it1 mi_idx it2 t) Leading(((((((ci n) mi) it1) mi_idx) it2) t)) */
