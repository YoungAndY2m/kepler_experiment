{
    "29-0_testing_0": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Sailor'\nAND ci.note IN ('(uncredited)', '(as Tatjana Ilyina)', '(as Marriot Watson)', '(as John Guarnieri)', '(as Gia L''Orenzo)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD status of availablility'\nAND it3.info = 'trivia'\nAND k.keyword = 'nightclub'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%O%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%o%'\nAND rt.role = 'actor'\nAND t.title = 'The Caine Mutiny'\nAND t.production_year BETWEEN 1910 AND 1963;",
    "29-0_testing_1": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Thywill Amenya)', '(intro music)', '(assistant: Schain)', '(as Rageh Omar)')\nAND cn.country_code = '[it]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'knife-throwing'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%4%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1890 AND 2009;",
    "29-0_testing_2": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(publicity video)', '(as Hayni Hilford)', '(as Nick Atkinson)', '(as Freark Simink)')\nAND cn.country_code = '[ch]'\nAND it.info = 'release dates'\nAND it3.info = 'death notes'\nAND k.keyword = 'coma'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1907 AND 2004;",
    "29-0_testing_3": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as John Palino)', '(as Sir Max Aitken)', '(as Joseph Harris)', '(as Ted Ogden)')\nAND cn.country_code = '[de]'\nAND it.info = 'gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'library'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%8%' OR mi.info LIKE '%\u00ac%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1948 AND 2012;",
    "29-0_testing_4": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Mike Seargent)', '(as Yayo)', '(story \"The Way\")', '(play \"Skylight\")')\nAND cn.country_code = '[nl]'\nAND it.info = 'trivia'\nAND it3.info = 'death notes'\nAND k.keyword = 'two-killers'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1908 AND 2015;",
    "29-0_testing_5": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(foreman: Florida)', '(as Mithoo Miya)', '( Dagmar''s father )', '(Feed Store)')\nAND cn.country_code = '[ch]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'fire'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1892 AND 2017;",
    "29-0_testing_6": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(synergy manager)', '(as Toni Fuentes)', '(epk director)', '(as Extreme)')\nAND cn.country_code = '[de]'\nAND it.info = 'LD master format'\nAND it3.info = 'death notes'\nAND k.keyword = 'river'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%F%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1957 AND 1969;",
    "29-0_testing_7": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Eric A. Payne)', '(as Antonio Losada)', '(as Twisted Sister)', '(owner: Indy)')\nAND cn.country_code = '[nl]'\nAND it.info = 'certificates'\nAND it3.info = 'birth date'\nAND k.keyword = 'passed-out-drunk'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1995 AND 2016;",
    "29-0_testing_8": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(1974-1996)', '(as Robert Ingham)', '(as Shark)', '(as Fr P Xavier)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'birth date'\nAND k.keyword = 'severed-nose'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1904 AND 2012;",
    "29-0_testing_9": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(super looping)', '(as Edna Dore)', '(as Jack Hill)', '(as Mac Williams)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND it3.info = 'birth date'\nAND k.keyword = 'severed-head'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1979 AND 2011;",
    "29-0_testing_10": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Linda Descenna)', '(as Sujay Duttaray)', '(as Thomas Potiron)', '(as Yasutar\u00c3\u00b4 Yagi)')\nAND cn.country_code = '[ch]'\nAND it.info = 'opening weekend'\nAND it3.info = 'death notes'\nAND k.keyword = 'summer-camp'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%\u0082%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1893 AND 2017;",
    "29-0_testing_11": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Wendy Robinson)', '(as Slain Wayne)', '(as Jerome Peznel)', '(as Derick Cabrido)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'birth name'\nAND k.keyword = 'camera-focus-on-female-butt'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%f%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1924 AND 2014;",
    "29-0_testing_12": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(EPK Team)', '(????-????)', '(segment \"Allison\")', '(as Brian Parrish)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'villain'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%8%' OR mi.info LIKE '%7%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1979 AND 2005;",
    "29-0_testing_13": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(ACE Inspections)', '(hotel caretaker)', '(as Tien Fong)', '(as Alina Klimczak)')\nAND cn.country_code = '[ch]'\nAND it.info = 'trivia'\nAND it3.info = 'birth notes'\nAND k.keyword = 'deputy'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%f%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1990 AND 2015;",
    "29-0_testing_14": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Jose Prada)', '(as Gerard Kennay)', '(as Aerie Madplume)', '(chief operator)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND it3.info = 'birth date'\nAND k.keyword = 'furnace'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1944 AND 2014;",
    "29-0_testing_15": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Max John-James)', '(play \"Fling!\")', '(as Nini Ninua)', '(as L\u00c3\u00b3r\u00c3\u00a1nd Hanna)')\nAND cn.country_code = '[it]'\nAND it.info = 'certificates'\nAND it3.info = 'quotes'\nAND k.keyword = 'loaded-dice'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1925 AND 2002;",
    "29-0_testing_16": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(Sisterhood, USC)', '(as Dick Davalos)', '(as Lotte Palfi)', '(as Alma Doucet)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND it3.info = 'death notes'\nAND k.keyword = 'geek'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%z%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1939 AND 2013;",
    "29-0_testing_17": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Bernard Moodie)', '(as Marcel Auger)', '(as Hachiro Taku)', '(as Joey Pfl\u00c3\u00bcger)')\nAND cn.country_code = '[br]'\nAND it.info = 'tech info'\nAND it3.info = 'birth name'\nAND k.keyword = 'janitor'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%5%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1894 AND 1972;",
    "29-0_testing_18": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Michael Garett)', '(score music)', '(as Henry Georgi)', '(as Julio de Luca)')\nAND cn.country_code = '[ch]'\nAND it.info = 'release dates'\nAND it3.info = 'birth notes'\nAND k.keyword = 'shower'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1921 AND 2011;",
    "29-0_testing_19": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(Romeu Canjica)', '(as Angelina Yan)', '(as Enid Janes)', '(as So Katayama)')\nAND cn.country_code = '[nl]'\nAND it.info = 'trivia'\nAND it3.info = 'death notes'\nAND k.keyword = 'possession'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%E%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1988 AND 2008;",
    "29-0_testing_20": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Eicca)', '(as Hon Chun)', '(as Nicole Garduno)', '(as Barry M. Lando)')\nAND cn.country_code = '[au]'\nAND it.info = 'goofs'\nAND it3.info = 'birth name'\nAND k.keyword = 'cavalry-saber'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1937 AND 2013;",
    "29-0_testing_21": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(field cashier)', '(as K.D. Reents)', '(epk: producer)', '(as Martin Howard)')\nAND cn.country_code = '[de]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'coma'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1984 AND 2005;",
    "29-0_testing_22": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Steve Goede)', '(1995/97)', '(as Lord Levy)', '(as Gustavo Moulin)')\nAND cn.country_code = '[nl]'\nAND it.info = 'goofs'\nAND it3.info = 'death notes'\nAND k.keyword = 'high-school-student'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1926 AND 2009;",
    "29-0_testing_23": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as David Chantler)', '(as Nicole)', '(as Dilara)', '(as Alice)')\nAND cn.country_code = '[ch]'\nAND it.info = 'adaption'\nAND it3.info = 'birth notes'\nAND k.keyword = 'fight'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1988 AND 2010;",
    "29-0_testing_24": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Kenny Chua)', '(as Niki Rider)', '(as Wez)', '(as Dara Modglin)')\nAND cn.country_code = '[ch]'\nAND it.info = 'opening weekend'\nAND it3.info = 'birth date'\nAND k.keyword = 'caterpillar'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%8%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1933 AND 2009;",
    "29-0_testing_25": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(material provider)', '(as Robert Gosset)', '(as Barry Baldero)', '(as Slimane Dazy)')\nAND cn.country_code = '[au]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth date'\nAND k.keyword = '1980s'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1981 AND 1999;",
    "29-0_testing_26": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Dick Cramer)', '(as Raul Zaragoza)', '(as Joseph Paolino)', '(as Rusty Stalling)')\nAND cn.country_code = '[it]'\nAND it.info = 'trivia'\nAND it3.info = 'quotes'\nAND k.keyword = 'bomb'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1892 AND 1985;",
    "29-0_testing_27": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Ione Morino)', '(as Shandee Long)', '(moose wrangler)', '(as Cristi Borcea)')\nAND cn.country_code = '[nl]'\nAND it.info = 'trivia'\nAND it3.info = 'death notes'\nAND k.keyword = 'geek'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1905 AND 2014;",
    "29-0_testing_28": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as H. Roemheld)', '(as J.C. Forestier)', '(video \"Maxi Pad\")', '(as Will Nhongo)')\nAND cn.country_code = '[nl]'\nAND it.info = 'goofs'\nAND it3.info = 'death date'\nAND k.keyword = 'stoner'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1879 AND 2015;",
    "29-0_testing_29": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Gregory Cook)', '(as Borja Eljea)', '(as LYT)', '(First Class)')\nAND cn.country_code = '[ch]'\nAND it.info = 'goofs'\nAND it3.info = 'birth notes'\nAND k.keyword = 'head-spin'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1919 AND 2015;",
    "29-0_testing_30": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Tom Kopache)', '(as J. Mikcevic)', '(as Cindyana Lair)', '(as Carl Stallings)')\nAND cn.country_code = '[nl]'\nAND it.info = 'adaption'\nAND it3.info = 'birth date'\nAND k.keyword = 'shared-dream'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%p%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 2001 AND 2016;",
    "29-0_testing_31": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Violy Gadiola)', '(WWII weapon prep)', '(as Hanna Garbo)', '(as Aasif Shiekh)')\nAND cn.country_code = '[nl]'\nAND it.info = 'release dates'\nAND it3.info = 'birth notes'\nAND k.keyword = 'shared-dream'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%w%' OR mi.info LIKE '%z%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1966 AND 2013;",
    "29-0_testing_32": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as B. Kirby Jr.)', '(as Thomas Wander)', '(as Taylor Philips)', '(as Brittany Sky)')\nAND cn.country_code = '[de]'\nAND it.info = 'admissions'\nAND it3.info = 'birth date'\nAND k.keyword = 'springwood-ohio'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%(%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1915 AND 2017;",
    "29-0_testing_33": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Cliff Thompson)', '(as Johny Nirmal)', '(as Rodger M''bala)', '(as Prodigy)')\nAND cn.country_code = '[it]'\nAND it.info = 'certificates'\nAND it3.info = 'other works'\nAND k.keyword = 'chase-on-train-roof'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%P%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1975 AND 2010;",
    "29-0_testing_34": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(season 4) (2005)', '(\"Kama\" Episode)', '(as George Odom)', '(player planner)')\nAND cn.country_code = '[us]'\nAND it.info = 'trivia'\nAND it3.info = 'birth name'\nAND k.keyword = 'mind-game'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%m%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1908 AND 2012;",
    "29-0_testing_35": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Glenn Crone)', '(as Bobbie Sparrow)', '(as Velvet Touch)', '(as Cyz)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'death notes'\nAND k.keyword = 'burnt-body'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%,%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 2000 AND 2008;",
    "29-0_testing_36": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Douglass Burks)', '(voice) (as R.E.M.)', '(as Debbi Diamond)', '(as Rafael Accion)')\nAND cn.country_code = '[ch]'\nAND it.info = 'certificates'\nAND it3.info = 'birth date'\nAND k.keyword = 'explosion'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1983 AND 2014;",
    "29-0_testing_37": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Flesh Andrea)', '(as MC Solaar)', '(story & idea)', '(June 2003)')\nAND cn.country_code = '[nl]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'cover-up'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%9%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1962 AND 2005;",
    "29-0_testing_38": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Alvin Abrenica)', '(as Jacy Dumermuth)', '(as Charlie Gibbs)', '(Greecee)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'where now'\nAND k.keyword = 'camera-focus-on-female-butt'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%K%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%o%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1899 AND 1996;",
    "29-0_testing_39": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Marty Beavins)', '(as Lian Wen Huar)', '(as Yung Sze)', '(as Mezey Istv\u00c3\u00a1n)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'burnt-hand'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%Y%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1993 AND 2011;",
    "29-0_testing_40": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Mim Ekelund)', '(cast concierge)', '(as Edith Tanner)', '(as Mikki Magorian)')\nAND cn.country_code = '[nl]'\nAND it.info = 'gross'\nAND it3.info = 'death date'\nAND k.keyword = 'severed-nose'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%)%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1992 AND 2013;",
    "29-0_testing_41": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Billy Krall)', '(as K\u00c3\u00a9pes Gyuri)', '(as Naudia)', '(as Peter Boynton)')\nAND cn.country_code = '[au]'\nAND it.info = 'weekend gross'\nAND it3.info = 'where now'\nAND k.keyword = 'exiled-prince'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%7%')\nAND n.gender = 'm'\nAND n.name LIKE '%h%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1916 AND 1995;",
    "29-0_testing_42": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Joseph Sladek)', '(as Pat Kelley)', '(Lulu)', '(as Sam Arkoff)')\nAND cn.country_code = '[us]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'blood-on-camera-lens'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1888 AND 2010;",
    "29-0_testing_43": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(novel \"Salvage\")', '(as DC Coles)', '(as Ariel Knights)', '(as Jose Viv\u00c3\u00b3)')\nAND cn.country_code = '[ch]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'reanimated-corpse'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1902 AND 2004;",
    "29-0_testing_44": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Mr. Kirk'\nAND ci.note IN ('(segment \"Non-Fiction\")', '(as Alva D. Blake)', '(as TJ Miller)', '(as Abdul Qayyam)', '(as Sandra Baldur)')\nAND cn.country_code = '[us]'\nAND it.info = 'alternate versions'\nAND it3.info = 'height'\nAND k.keyword = 'yearbook'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%f%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%s%'\nAND rt.role = 'actor'\nAND t.title = 'Storytelling'\nAND t.production_year BETWEEN 1998 AND 2002;",
    "29-0_testing_45": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Jose Rubio)', '(as Grid Jurek)', '(as Suraiya)', '(as Jasper Dolphin)')\nAND cn.country_code = '[de]'\nAND it.info = 'tech info'\nAND it3.info = 'birth name'\nAND k.keyword = 'sadism'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%O%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1937 AND 2011;",
    "29-0_testing_46": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Armando Cortes)', '(as Hallal Sahbi)', '(as Kamel Bouakkaz)', '(as Lestelly)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'birth notes'\nAND k.keyword = 'burned-alive'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1908 AND 2014;",
    "29-0_testing_47": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as C. Jansen)', '(as Joe Brettbart)', '(as Rose Osaneye)', '(as Irvin Mosley)')\nAND cn.country_code = '[de]'\nAND it.info = 'essays'\nAND it3.info = 'birth date'\nAND k.keyword = 'tranquilizer'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%W%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1904 AND 2019;",
    "29-0_testing_48": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Morane)', '(as Carmen Morell)', '(as Eric Paturel)', '(as Raymond Barry)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'interviews'\nAND k.keyword = 'india'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1936 AND 1989;",
    "29-0_testing_49": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(novel \"Wanda\")', '(as Eva Adonaylo)', '(as Yervand Kochar)', '(as Sal Rinauro)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND it3.info = 'death date'\nAND k.keyword = 'demon'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%d%' OR mi.info LIKE '%8%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1924 AND 2017;",
    "29-0_testing_50": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Potter'\nAND ci.note IN ('(uncredited)', '(as Tina Medwara)', '(as Johnny Wiskey)', '(Welgista)', '(as Frank Bertmann)')\nAND cn.country_code = '[es]'\nAND it.info = 'goofs'\nAND it3.info = 'birth name'\nAND k.keyword = 'farce'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%d%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'The Million Pound Note'\nAND t.production_year BETWEEN 1924 AND 1992;",
    "29-0_testing_51": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as O.K. Dhar)', '(as Dennis M. Hope)', '(as Anthony Cooper)', '(voice) (as Sahil)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'birth date'\nAND k.keyword = 'chase-on-train-roof'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1894 AND 2000;",
    "29-0_testing_52": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Fra. Satorius)', '(as Quino Pueyo)', '(as Heros)', '(as Richard Bauman)')\nAND cn.country_code = '[de]'\nAND it.info = 'gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'blood-on-camera-lens'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1957 AND 2006;",
    "29-0_testing_53": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(as Jesus Navarro)', '(as Bill Morgan)', '(Li Lan)', '(as Robert Lowry)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND it3.info = 'height'\nAND k.keyword = 'reference-to-the-bee-gees'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1916 AND 1992;",
    "29-0_testing_54": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(liaison agent)', '(as Olya Esalnek)', '(as Dante Ha)', '(ca: Wowow)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'death date'\nAND k.keyword = 'skinny-dipping'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1947 AND 2016;",
    "29-0_testing_55": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as L. Neumann)', '(as Kenny Simmons)', '(as Felipe de Alva)', '(as Ramon Cuadreny)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'trivia'\nAND k.keyword = 'camera-focus-on-female-butt'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%f%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%h%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1936 AND 1998;",
    "29-0_testing_56": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(Hobo)', '(as Daniel Sarki)', '(as Dya Hauch)', '(as Bill Schilling)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND it3.info = 'death date'\nAND k.keyword = 'mother-son-relationship'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%Z%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1906 AND 2017;",
    "29-0_testing_57": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Jack Sunseri)', '(as James Gaynes)', '(dive safety)', '(as Ely McWhite)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'birth name'\nAND k.keyword = 'plane-crash'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1913 AND 2000;",
    "29-0_testing_58": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Mr. Wadsworth)', '(as Tony Masters)', '(as Lilian Rapple)', '(as Rocio Paso)')\nAND cn.country_code = '[ch]'\nAND it.info = 'trivia'\nAND it3.info = 'death date'\nAND k.keyword = 'electrocution'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1893 AND 2006;",
    "29-0_testing_59": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Shuqi Xu)', '(as Chad X Lerma)', '(as Nadege)', '(as Hap. H. Ward)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'birth date'\nAND k.keyword = 'fire'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%P%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1964 AND 2004;",
    "29-0_testing_60": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Deep Bedi)', '(as Lili Grace)', '(as Butch Cavel)', '(Wade''s Son)')\nAND cn.country_code = '[nl]'\nAND it.info = 'locations'\nAND it3.info = 'death notes'\nAND k.keyword = 'slow-motion-scene'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%C%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1993 AND 2010;",
    "29-0_testing_61": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as N. Bagdasaryan)', '(novel 1923)', '(as Pat Herman)', '(set containment)')\nAND cn.country_code = '[it]'\nAND it.info = 'trivia'\nAND it3.info = 'birth name'\nAND k.keyword = 'octopus'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%c%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1902 AND 2008;",
    "29-0_testing_62": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Wild Bill Cody)', '(software: Pi)', '(as Monique Demone)', '(as DJ Smart)')\nAND cn.country_code = '[au]'\nAND it.info = 'locations'\nAND it3.info = 'quotes'\nAND k.keyword = 'hunting'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%W%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1980 AND 1995;",
    "29-0_testing_63": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Kirka Babitsin)', '(scout: Vancouver)', '(as John Meroa)', '(as Armin Dierholf)')\nAND cn.country_code = '[ch]'\nAND it.info = 'certificates'\nAND it3.info = 'death date'\nAND k.keyword = 'two-killers'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1913 AND 2004;",
    "29-0_testing_64": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(task producer)', '(as Dr. James Otis)', '(as Peter Votrian)', '(as Steve Tibbo)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND it3.info = 'death notes'\nAND k.keyword = 'missing-person-poster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%L%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1925 AND 2014;",
    "29-0_testing_65": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(liaison: AFTRS)', '(as Anne Jordanova)', '(Yayoi Yukino)', '(as Zamurrad)')\nAND cn.country_code = '[it]'\nAND it.info = 'filming dates'\nAND it3.info = 'other works'\nAND k.keyword = 'blockbuster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1910 AND 1991;",
    "29-0_testing_66": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Bob Schleinig)', '(as G. Somohano)', '(the tailor)', '(as Sharon Mcnight)')\nAND cn.country_code = '[ch]'\nAND it.info = 'admissions'\nAND it3.info = 'death notes'\nAND k.keyword = 'weapon'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 2000 AND 2012;",
    "29-0_testing_67": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Mitzouko)', '(as Ben Townsend)', '(as Gerry M. Cohen)', '(as Jay Colman)')\nAND cn.country_code = '[nl]'\nAND it.info = 'goofs'\nAND it3.info = 'birth date'\nAND k.keyword = 'geek'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%v%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1933 AND 2015;",
    "29-0_testing_68": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Nightclub Patron'\nAND ci.note IN ('(uncredited)', '(as JC Chasez)', '(as Kylee Ferguson)', '(as Hazel Howard)', '(as H&T)')\nAND cn.country_code = '[br]'\nAND it.info = 'quotes'\nAND it3.info = 'birth notes'\nAND k.keyword = 'reference-to-rita-hayworth'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Copacabana'\nAND t.production_year BETWEEN 1893 AND 1951;",
    "29-0_testing_69": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as O. Mironova)', '(as Thomas O''Brien)', '(as Sonia Fridman)', '(episode \"Shikimu\")')\nAND cn.country_code = '[au]'\nAND it.info = 'gross'\nAND it3.info = 'trivia'\nAND k.keyword = 'martial-arts'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%5%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1966 AND 2006;",
    "29-0_testing_70": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as J. B. Biven)', '(as Jeanne Wilhelm)', '(as Pat Nolan)', '(#1) (1982-1991)')\nAND cn.country_code = '[au]'\nAND it.info = 'alternate versions'\nAND it3.info = 'birth name'\nAND k.keyword = 'iron-curtain'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%h%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1906 AND 1999;",
    "29-0_testing_71": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Danyal Cheeks)', '(as Simo Magwasa)', '(as Edward O''Keefe)', '(as Jen\u00c3\u00b5 Herczeg)')\nAND cn.country_code = '[au]'\nAND it.info = 'countries'\nAND it3.info = 'interviews'\nAND k.keyword = 'cavalry-saber'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%W%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1936 AND 1988;",
    "29-0_testing_72": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Curt Hawkins)', '(as Rosendo Ortiz)', '(as M. Viktorova)', '(as D\u00c3\u00b6rthe V\u00c3\u00b6lz)')\nAND cn.country_code = '[au]'\nAND it.info = 'copyright holder'\nAND it3.info = 'interviews'\nAND k.keyword = 'egg'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%G%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%M%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1894 AND 2017;",
    "29-0_testing_73": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as V. Gonchurov)', '(as Reimar Bo)', '(as Richard Haines)', '(as Iwan)')\nAND cn.country_code = '[it]'\nAND it.info = 'weekend gross'\nAND it3.info = 'where now'\nAND k.keyword = 'actor-shares-first-name-with-character'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1896 AND 2020;",
    "29-0_testing_74": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(teleplay) (2004)', '(special credits)', '(as Peter B.)', '(as Denver Dickson)')\nAND cn.country_code = '[au]'\nAND it.info = 'goofs'\nAND it3.info = 'where now'\nAND k.keyword = 'octopus'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%M%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1980 AND 1997;",
    "29-0_testing_75": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(''Sparks Fly'')', '(1996 -)', '(as Simbi Kali)', '(story) (as Farhad)')\nAND cn.country_code = '[au]'\nAND it.info = 'certificates'\nAND it3.info = 'quotes'\nAND k.keyword = 'snake-charmer'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%s%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1910 AND 1991;",
    "29-0_testing_76": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Bryan Brisko)', '(written by) (1979)', '(as Noah)', '(action stills)')\nAND cn.country_code = '[br]'\nAND it.info = 'LD number'\nAND it3.info = 'birth date'\nAND k.keyword = 'librarian'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%6%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1939 AND 1983;",
    "29-0_testing_77": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(contents build)', '(as Rajindar Nath)', '(as Lianna)', '(as S. Drewicz)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'birth name'\nAND k.keyword = 'clown'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1905 AND 2015;",
    "29-0_testing_78": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Jonathon Corn)', '(as Per Schytte)', '(vox producer)', '(introduction)')\nAND cn.country_code = '[nl]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'library'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%(%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1927 AND 2007;",
    "29-0_testing_79": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as David Collier)', '(as Jose Martin)', '(original writer)', '(as Armand Acosta)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'quotes'\nAND k.keyword = 'actor-shares-first-name-with-character'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%(%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1982 AND 1997;",
    "29-0_testing_80": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Dru Hill)', '(tech coordinator)', '(as Amely)', '(clearance support)')\nAND cn.country_code = '[nl]'\nAND it.info = 'locations'\nAND it3.info = 'death date'\nAND k.keyword = 'hanging-upside-down'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%C%' OR mi.info LIKE '%C%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1936 AND 2016;",
    "29-0_testing_81": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Jo-Joo)', '(as Hanna Black)', '(QA manager)', '(as Z. Trach)')\nAND cn.country_code = '[au]'\nAND it.info = 'weekend gross'\nAND it3.info = 'quotes'\nAND k.keyword = 'martial-arts'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%6%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1982 AND 1996;",
    "29-0_testing_82": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Elin Jones AM)', '(as Velimir Raji\u00c3\u00a6)', '(as Jon F. Farless)', '(as Judi Scott)')\nAND cn.country_code = '[de]'\nAND it.info = 'LD analog right'\nAND it3.info = 'death notes'\nAND k.keyword = 'mind-game'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%-%' OR mi.info LIKE '%-%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1924 AND 1997;",
    "29-0_testing_83": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Gaston Howard)', '(as Ted Reid)', '(as Roy Wilson)', '(as George Werier)')\nAND cn.country_code = '[it]'\nAND it.info = 'locations'\nAND it3.info = 'interviews'\nAND k.keyword = 'egg'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1906 AND 1993;",
    "29-0_testing_84": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Teri Aunor)', '(as Wes Carey)', '(as Sherry Arell)', '(as Banzo)')\nAND cn.country_code = '[ch]'\nAND it.info = 'certificates'\nAND it3.info = 'birth notes'\nAND k.keyword = 'geek'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1890 AND 2017;",
    "29-0_testing_85": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(entrevista)', '(as Gilbert Ferro)', '(as L. Garnitsa)', '(as Gani Nofiu)')\nAND cn.country_code = '[nl]'\nAND it.info = 'release dates'\nAND it3.info = 'death notes'\nAND k.keyword = 'skinny-dipping'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%v%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1925 AND 2011;",
    "29-0_testing_86": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Joey Ryan)', '(as Rami)', '(as Dike Ngwube)', '(as Michael Corby)')\nAND cn.country_code = '[it]'\nAND it.info = 'certificates'\nAND it3.info = 'birth name'\nAND k.keyword = 'official-james-bond-series'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1958 AND 1987;",
    "29-0_testing_87": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Alex Nadler)', '(as Mohnish Bahel)', '(as Baby Stewart)', '(as Rob Malone)')\nAND cn.country_code = '[it]'\nAND it.info = 'locations'\nAND it3.info = 'interviews'\nAND k.keyword = 'martial-arts'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1941 AND 1995;",
    "29-0_testing_88": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Nicky Margolis)', '(April - June 1952)', '(Hypochondriac)', '(as Conroy Brown)')\nAND cn.country_code = '[de]'\nAND it.info = 'crazy credits'\nAND it3.info = 'birth date'\nAND k.keyword = 'boyfriend-girlfriend-relationship'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1991 AND 2005;",
    "29-0_testing_89": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Mr. Kirk'\nAND ci.note IN ('(segment \"Non-Fiction\")', '(UBC Guard)', '(as Joi Collier)', '(as Serra Tugrul)', '(as Jon Schorle)')\nAND cn.country_code = '[us]'\nAND it.info = 'quotes'\nAND it3.info = 'birth notes'\nAND k.keyword = 'gun'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%L%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Storytelling'\nAND t.production_year BETWEEN 1907 AND 2016;",
    "29-0_testing_90": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Arancha Mart\u00c3\u00ad)', '(creator: finale)', '(as Mischa Paderin)', '(Yoshidaya maid)')\nAND cn.country_code = '[it]'\nAND it.info = 'weekend gross'\nAND it3.info = 'other works'\nAND k.keyword = 'chase-on-train-roof'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1890 AND 2013;",
    "29-0_testing_91": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Gordon Milne)', '(as Marcelo Pont)', '(as Robert Sleigh)', '(voice) (as Liz)')\nAND cn.country_code = '[au]'\nAND it.info = 'goofs'\nAND it3.info = 'birth date'\nAND k.keyword = 'blockbuster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1963 AND 2012;",
    "29-0_testing_92": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Potter'\nAND ci.note IN ('(uncredited)', '(enemy modeler)', '(as Marty Robinson)', '(as Chris Alley)', '(as John Foam)')\nAND cn.country_code = '[gb]'\nAND it.info = 'certificates'\nAND it3.info = 'other works'\nAND k.keyword = 'london-england'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%H%'\nAND rt.role = 'actor'\nAND t.title = 'The Million Pound Note'\nAND t.production_year BETWEEN 1926 AND 1980;",
    "29-0_testing_93": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(original material)', '(Age 5-12)', '(as Jim Budig)', '(as Adolf Funder)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND it3.info = 'birth notes'\nAND k.keyword = 'tranquilizer'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1895 AND 2013;",
    "29-0_testing_94": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(1984-1986/1989)', '(as V. Paschenko)', '(Young girl)', '(segment \"Blaze\")')\nAND cn.country_code = '[it]'\nAND it.info = 'locations'\nAND it3.info = 'other works'\nAND k.keyword = '1980s'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1972 AND 2001;",
    "29-0_testing_95": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Tatiana Ortiz)', '(as Ronald Recala)', '(as Christa Jones)', '(adaptation) (1970)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND it3.info = 'death notes'\nAND k.keyword = 'burned-alive'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%z%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1985 AND 2009;",
    "29-0_testing_96": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Louis A. Perez)', '(as Xany)', '(as Arthur Cooper)', '(as J.P. McGlynn)')\nAND cn.country_code = '[it]'\nAND it.info = 'weekend gross'\nAND it3.info = 'other works'\nAND k.keyword = 'cult'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%8%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1899 AND 2013;",
    "29-0_testing_97": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(caterer: Brussels)', '(video \"Everytime\")', '(as Gogoia Sampaio)', '(producer: Motlys)')\nAND cn.country_code = '[it]'\nAND it.info = 'trivia'\nAND it3.info = 'birth notes'\nAND k.keyword = 'iron-curtain'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%q%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1898 AND 1993;",
    "29-0_testing_98": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Raha Veku)', '(stand-in: \"Susan\")', '(as Julie Livesey)', '(as Jubilaires)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'birth notes'\nAND k.keyword = 'clown'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%M%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1972 AND 2009;",
    "29-0_testing_99": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Darren Dollar)', '(as Fredi Walker)', '(as \u00c3\u0080lex Mi\u00c3\u00b1ana)', '(as C. Dennis)')\nAND cn.country_code = '[us]'\nAND it.info = 'admissions'\nAND it3.info = 'birth notes'\nAND k.keyword = 'cover-up'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%(%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1988 AND 2008;",
    "29-0_testing_100": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Stuart Noone)', '(as Robina Maugham)', '(as Beverly Klein)', '(QA)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND it3.info = 'death notes'\nAND k.keyword = 'demon'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1999 AND 2020;",
    "29-0_testing_101": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Sailor'\nAND ci.note IN ('(uncredited)', '(as Josue Figueroa)', '(as Harry Jarvis)', '(as V.Sukhorukov)', '(as Ajit Vachchani)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD label'\nAND it3.info = 'article'\nAND k.keyword = 'national-book-award'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'The Caine Mutiny'\nAND t.production_year BETWEEN 1937 AND 2009;",
    "29-0_testing_102": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(novel \"That Lady\")', '(as Atill\u00c3\u00a2 Eldem)', '(as Filip Ivanov)', '(as Cheli Vara)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'where now'\nAND k.keyword = 'martial-arts'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1935 AND 2011;",
    "29-0_testing_103": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(1993-)', '(as Suzy Meng Li)', '(as T\u00c3\u00a4ielik \u00c3\u0084ss)', '(as Dudley Joker)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD disc size'\nAND it3.info = 'trivia'\nAND k.keyword = 'tokyo-japan'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1910 AND 2014;",
    "29-0_testing_104": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Gary Conway)', '(as Trev)', '(as Adam Sevani)', '(as Ashleyn Gere)')\nAND cn.country_code = '[us]'\nAND it.info = 'trivia'\nAND it3.info = 'birth date'\nAND k.keyword = 'lifting-someone-into-the-air'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1990 AND 2006;",
    "29-0_testing_105": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Tom Russell)', '(as Carlyn Wagner)', '(as Clara Vischer)', '(as Isabelle Ice)')\nAND cn.country_code = '[au]'\nAND it.info = 'locations'\nAND it3.info = 'quotes'\nAND k.keyword = 'cavalry-saber'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%c%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1943 AND 2015;",
    "29-0_testing_106": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(as Leif Bach)', '(as Laura Rocca)', '(as Tom Riley)', '(as Leony)')\nAND cn.country_code = '[us]'\nAND it.info = 'runtimes'\nAND it3.info = 'quotes'\nAND k.keyword = 'child-flying-spacecraft'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1941 AND 2006;",
    "29-0_testing_107": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(Catalu\u00c3\u00b1a)a)', '(as Timothy Bruhn)', '(as Byron Threat)', '(as J Larose)')\nAND cn.country_code = '[nl]'\nAND it.info = 'taglines'\nAND it3.info = 'birth notes'\nAND k.keyword = 'fire'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1889 AND 2015;",
    "29-0_testing_108": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(parts 4-6)', '(ghost consultant)', '(Grand-mother)', '(as Shelby Myne)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'quotes'\nAND k.keyword = 'martial-arts'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1977 AND 2013;",
    "29-0_testing_109": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Rob Durbin)', '(as Anjelica Baron)', '(as Emily Walker)', '(as Jeffrey Morris)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND it3.info = 'birth date'\nAND k.keyword = 'villain-not-really-dead-cliche'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1924 AND 2015;",
    "29-0_testing_110": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Roxxxy Andrews)', '(as Jim Miles)', '(as Zahn McClamon)', '(as Ahsia Adore)')\nAND cn.country_code = '[ch]'\nAND it.info = 'admissions'\nAND it3.info = 'birth notes'\nAND k.keyword = 'boyfriend-girlfriend-relationship'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1963 AND 2005;",
    "29-0_testing_111": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Zvi Kanar)', '(as Juan Camus)', '(as Holger Russekl)', '(as Inma Cuevas)')\nAND cn.country_code = '[nl]'\nAND it.info = 'quotes'\nAND it3.info = 'birth date'\nAND k.keyword = 'pool-of-blood'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1959 AND 2006;",
    "29-0_testing_112": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Han Soo Ong)', '(dailies syncher)', '(as Chuck Harris)', '(as Antonio Iuorio)')\nAND cn.country_code = '[br]'\nAND it.info = 'LD group genre'\nAND it3.info = 'death date'\nAND k.keyword = 'police-chief'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1918 AND 1997;",
    "29-0_testing_113": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Geoff Garratt)', '(as Ian Fingler)', '(as Harry Sanders)', '(as Wally Ward)')\nAND cn.country_code = '[de]'\nAND it.info = 'opening weekend'\nAND it3.info = 'death notes'\nAND k.keyword = 'skinny-dipping'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%5%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1926 AND 2004;",
    "29-0_testing_114": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Flip Nicklin)', '(as Danny Parker)', '(as Bretton Bowman)', '(as Uncle Larry)')\nAND cn.country_code = '[ch]'\nAND it.info = 'weekend gross'\nAND it3.info = 'death date'\nAND k.keyword = 'fight'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1894 AND 2006;",
    "29-0_testing_115": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(episode: 3, 6)', '(poem) (as CP)', '(as Phil Reid)', '(as Mary K. Peters)')\nAND cn.country_code = '[us]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'fire'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%(%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1985 AND 2017;",
    "29-0_testing_116": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(novel \"Sacrifice\")', '(as Niko Bikialo)', '(as Ana Dominguez)', '(Nightclub)')\nAND cn.country_code = '[nl]'\nAND it.info = 'goofs'\nAND it3.info = 'birth date'\nAND k.keyword = 'blood-on-camera-lens'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1997 AND 2009;",
    "29-0_testing_117": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as L. Karaush)', '(as Ray Veness)', '(as Anna Dominicis)', '(as Katia De Vale)')\nAND cn.country_code = '[au]'\nAND it.info = 'goofs'\nAND it3.info = 'where now'\nAND k.keyword = 'exiled-prince'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1929 AND 2014;",
    "29-0_testing_118": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Poitonga)', '(as Kader Setouty)', '(as Felisa Jimenez)', '(as Walt Goodrich)')\nAND cn.country_code = '[ch]'\nAND it.info = 'trivia'\nAND it3.info = 'birth notes'\nAND k.keyword = 'dragging-a-dead-body'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 2001 AND 2008;",
    "29-0_testing_119": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(Film #2)', '(as Nastya Lattka)', '(as Don McArt)', '(as Larry Hutton)')\nAND cn.country_code = '[it]'\nAND it.info = 'countries'\nAND it3.info = 'birth date'\nAND k.keyword = 'actor-shares-first-name-with-character'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1946 AND 2000;",
    "29-0_testing_120": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Sailor'\nAND ci.note IN ('(uncredited)', '(as @DannyZuker)', '(Canadian PM, 1939)', '(1981) (as Brienne)', '(as David Oca\u00c3\u00b1as)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD sound encoding'\nAND it3.info = 'article'\nAND k.keyword = 'united-states-navy'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'The Caine Mutiny'\nAND t.production_year BETWEEN 1935 AND 1959;",
    "29-0_testing_121": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Brandy Wyne)', '(as Andrea Mel)', '(as George Romero)', '(as Monique La Rue)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND it3.info = 'death notes'\nAND k.keyword = 'skinny-dipping'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%F%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1975 AND 2013;",
    "29-0_testing_122": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Ulf Evren)', '(as Gina Peluso)', '(as Tony Skios)', '(Voleur)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'death notes'\nAND k.keyword = 'police-station'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1958 AND 2019;",
    "29-0_testing_123": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Lottta Top)', '(as Toby Tyler)', '(story) (segment 5)', '(as Robert Fagg)')\nAND cn.country_code = '[us]'\nAND it.info = 'weekend gross'\nAND it3.info = 'death notes'\nAND k.keyword = 'pool-of-blood'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1938 AND 2016;",
    "29-0_testing_124": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Alla Urazbaeva)', '(as Monifa Brown)', '(on the bus)', '(as Anna Delisle)')\nAND cn.country_code = '[nl]'\nAND it.info = 'weekend gross'\nAND it3.info = 'death notes'\nAND k.keyword = 'fire'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%\u0082%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1976 AND 2017;",
    "29-0_testing_125": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Antonio Sim\u00c3\u00b3n)', '(as Phillip Neel)', '(as G\u00c3\u00a1rday L.)', '(as Kamel Abdelli)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND it3.info = 'birth notes'\nAND k.keyword = 'burnt-body'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1948 AND 2014;",
    "29-0_testing_126": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(as Dave Sitbon)', '(AKA - Wheat)', '(as Tom G\u00c3\u00bcnter)', '(as Bill Huffman)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND it3.info = 'where now'\nAND k.keyword = 'speed-of-light'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%8%' OR mi.info LIKE '%7%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1957 AND 1997;",
    "29-0_testing_127": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Ivan De Landa)', '(as Vijay Chander)', '(as David Parker)', '(as Alisha)')\nAND cn.country_code = '[de]'\nAND it.info = 'crazy credits'\nAND it3.info = 'death date'\nAND k.keyword = 'child-killer'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1972 AND 2015;",
    "29-0_testing_128": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Bob Campbell)', '(as Dipak Bose)', '(as Tiger Mask)', '(as G. Kolchinsky)')\nAND cn.country_code = '[it]'\nAND it.info = 'color info'\nAND it3.info = 'birth notes'\nAND k.keyword = 'snake-charmer'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1905 AND 2012;",
    "29-0_testing_129": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Dave Rawlings)', '(as Dylan Katz)', '(as Jamie Gills)', '(as Ka Ling Ku)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'birth name'\nAND k.keyword = 'exiled-prince'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%j%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1911 AND 1999;",
    "29-0_testing_130": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Nick Perry)', '(as Marina Lotar)', '(Prince of Wales)', '(video \"Queer\")')\nAND cn.country_code = '[nl]'\nAND it.info = 'taglines'\nAND it3.info = 'birth notes'\nAND k.keyword = 'severed-finger'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1935 AND 2004;",
    "29-0_testing_131": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Karrie Pagano)', '(as Yoginder)', '(as Louise McMurry)', '(as James Kenny)')\nAND cn.country_code = '[de]'\nAND it.info = 'LD pressing plant'\nAND it3.info = 'birth date'\nAND k.keyword = 'savannah-georgia'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%P%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1952 AND 1969;",
    "29-0_testing_132": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as David Sharp)', '(as Sally Chan)', '(as Erd\u00c3\u00b5s Ilona)', '(as Leon South)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'chase-on-train-roof'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%6%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1930 AND 1999;",
    "29-0_testing_133": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(Hospital Lawyer)', '(novel) (1986)', '(Sunday runner)', '(as Juan Garza)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'birth date'\nAND k.keyword = 'official-james-bond-series'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1949 AND 2013;",
    "29-0_testing_134": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as John Di Santi)', '(as Mitzi Morerr\u00c3\u00a9)', '(as Nat Parker)', '(as Deirdre Imus)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'where now'\nAND k.keyword = 'loaded-dice'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%4%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1938 AND 1995;",
    "29-0_testing_135": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Roger Howell)', '(as Suso de Toro)', '(as LeeAnna)', '(as Judit Di\u00c3\u00b3s)')\nAND cn.country_code = '[au]'\nAND it.info = 'gross'\nAND it3.info = 'birth name'\nAND k.keyword = 'hot-air-balloon'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%6%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1915 AND 1985;",
    "29-0_testing_136": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Gramham Moore)', '(as Don Young)', '(space packs)', '(as Grant McIlrath)')\nAND cn.country_code = '[au]'\nAND it.info = 'certificates'\nAND it3.info = 'interviews'\nAND k.keyword = 'bomb'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1945 AND 2004;",
    "29-0_testing_137": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Sailor'\nAND ci.note IN ('(uncredited)', '(assistant: author)', '(as Raphaele Godin)', '(as Danny Evans)', '(as Ksandra)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD laserdisc title'\nAND it3.info = 'spouse'\nAND k.keyword = 'united-states-navy'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%s%'\nAND rt.role = 'actor'\nAND t.title = 'The Caine Mutiny'\nAND t.production_year BETWEEN 1880 AND 2019;",
    "29-0_testing_138": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(interior designer)', '(night coordinator)', '(alien designer)', '(as Michael Holmes)')\nAND cn.country_code = '[nl]'\nAND it.info = 'trivia'\nAND it3.info = 'death date'\nAND k.keyword = 'demonic-possession'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1997 AND 2019;",
    "29-0_testing_139": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Cindy Benton)', '(as Alexander Life)', '(as Barbara Horan)', '(opera advisor)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'birth name'\nAND k.keyword = 'official-james-bond-series'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1933 AND 1986;",
    "29-0_testing_140": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Attif Mohammed)', '(as Melanie Gage)', '(as Nora N\u00c3\u00bcssner)', '(student observer)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'birth date'\nAND k.keyword = 'monster-versus-monster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1962 AND 2007;",
    "29-0_testing_141": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Roy Tuazon)', '(as Bindu Kamath)', '(as Austyn)', '(Ashley''s Dad)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'interviews'\nAND k.keyword = 'plane-crash'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%W%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1890 AND 1987;",
    "29-0_testing_142": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Lynn Hershman)', '(as Mitra Lohrasb)', '(as Sydney Golder)', '(book \"City\")')\nAND cn.country_code = '[au]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'blockbuster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%D%')\nAND n.gender = 'm'\nAND n.name LIKE '%h%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1936 AND 1990;",
    "29-0_testing_143": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Tom Nicholls)', '(as Joe Morgan)', '(as Inder Valia)', '(as Stela)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND it3.info = 'death notes'\nAND k.keyword = 'dragging-a-dead-body'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%z%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1960 AND 2015;",
    "29-0_testing_144": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(as Khurshed Khan)', '(as Eva Zora)', '(screenplay) (1972)', '(as Manuel Matos)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD release country'\nAND it3.info = 'article'\nAND k.keyword = 'alien-creature-as-pet'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1980 AND 2017;",
    "29-0_testing_145": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Yoha)', '(as Sopho)', '(March 22 2005)', '(as Tommy Harmon)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'death notes'\nAND k.keyword = 'skinny-dipping'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1976 AND 2008;",
    "29-0_testing_146": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Gonzalo Suarez)', '(as Ankie Beilke)', '(as Mykle Mariette)', '(as Bexxxy)')\nAND cn.country_code = '[au]'\nAND it.info = 'locations'\nAND it3.info = 'quotes'\nAND k.keyword = 'all-female-army'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1895 AND 1988;",
    "29-0_testing_147": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Mr. Kirk'\nAND ci.note IN ('(segment \"Non-Fiction\")', '(as Moshik Timor)', '(as Jhoana Tan)', '(as Shmulik Levy)', '(as A. Goltsov)')\nAND cn.country_code = '[us]'\nAND it.info = 'quotes'\nAND it3.info = 'height'\nAND k.keyword = 'gun'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%M%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Storytelling'\nAND t.production_year BETWEEN 1955 AND 2014;",
    "29-0_testing_148": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(segment \"Revenge\")', '(as Lenka Erdos)', '(marine painter)', '(as Nora Robert)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD group genre'\nAND it3.info = 'pictorial'\nAND k.keyword = 'backpack'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1949 AND 1999;",
    "29-0_testing_149": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(9)', '(as James Wilder)', '(as Reg Stewart)', '(drove car)')\nAND cn.country_code = '[nl]'\nAND it.info = 'release dates'\nAND it3.info = 'birth date'\nAND k.keyword = 'freddy-krueger'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1981 AND 2020;",
    "29-0_testing_150": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Abi Tarry)', '(as Suhail Khan)', '(as Sanjiva Vatsa)', '(Cathy''s Friend)')\nAND cn.country_code = '[us]'\nAND it.info = 'taglines'\nAND it3.info = 'birth date'\nAND k.keyword = 'freddy-krueger'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%!%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1889 AND 2020;",
    "29-0_testing_151": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Eugene O. Roth)', '(as G. Chelidze)', '(as Hristo Neykov)', '(as Katja Schenk)')\nAND cn.country_code = '[ch]'\nAND it.info = 'goofs'\nAND it3.info = 'death notes'\nAND k.keyword = 'severed-finger'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%J%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1956 AND 2014;",
    "29-0_testing_152": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete'\nAND chn.name = 'Max'\nAND ci.note IN ('(voice) (as Paul Mall)', '(as Devil Yamada)', '(as Polly LePorte)', '(as Erlan Buchan)', '(as HG Butzko)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD close captions-teletext-ld-g'\nAND it3.info = 'trivia'\nAND k.keyword = 'name-calling'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%C%' OR mi.info LIKE '%C%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Flight of the Navigator'\nAND t.production_year BETWEEN 1888 AND 2019;",
    "29-0_testing_153": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Mr. Kirk'\nAND ci.note IN ('(segment \"Non-Fiction\")', '(as Gyorgi Bardi)', '(as Filmimies)', '(as Omar Israel)', '(as Chan Sau Lin)')\nAND cn.country_code = '[us]'\nAND it.info = 'quotes'\nAND it3.info = 'birth notes'\nAND k.keyword = 'movie-camera'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%v%'\nAND rt.role = 'actor'\nAND t.title = 'Storytelling'\nAND t.production_year BETWEEN 1952 AND 2010;",
    "29-0_testing_154": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Hans Lucas)', '(as A. Missyura)', '(as Peeter Smakov)', '(Monique)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD number of sides'\nAND it3.info = 'birth notes'\nAND k.keyword = 'waitress'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%K%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1890 AND 2019;",
    "29-0_testing_155": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Lawrence Young)', '(as Berhard D\u00c3\u00bcbe)', '(deer supplier)', '(greedy housewife)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND it3.info = 'death notes'\nAND k.keyword = 'high-school-student'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1979 AND 2005;",
    "29-0_testing_156": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Anne McCray)', '(as Kishan Dhavan)', '(episode \"Tears\")', '(as Neith Andrina)')\nAND cn.country_code = '[au]'\nAND it.info = 'goofs'\nAND it3.info = 'other works'\nAND k.keyword = 'actor-shares-first-name-with-character'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%s%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1938 AND 2000;",
    "29-0_testing_157": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as W.S. Hart)', '(as Dr. Tim Silegy)', '(as Gunnar Knopp)', '(visualist)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND it3.info = 'birth notes'\nAND k.keyword = 'caterpillar'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%,%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1964 AND 2010;",
    "29-0_testing_158": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Janine Pen)', '(as Peggy Missi)', '(segment \"Shit!\")', '(as Joan Boundy)')\nAND cn.country_code = '[de]'\nAND it.info = 'tech info'\nAND it3.info = 'death notes'\nAND k.keyword = 'librarian'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1934 AND 1977;",
    "29-0_testing_159": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(segment \"Cialis\")', '(episodes 1-26)', '(as John Feltwell)', '(as Holly Profit)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'birth name'\nAND k.keyword = 'blockbuster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1899 AND 2001;",
    "29-0_testing_160": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Pat\u00c3\u00a9 de Fu\u00c3\u00a1)', '(as Milos Hlavak)', '(nightclub singer)', '(sequence chief)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'birth name'\nAND k.keyword = 'exiled-prince'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%(%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1910 AND 2003;",
    "29-0_testing_161": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete'\nAND chn.name = 'Communist Goon Agitator'\nAND ci.note IN ('(uncredited)', '(as Suzannah Mars)', '(as M. Karyova)', '(as Manel Serrano)', '(as Bill Mac)')\nAND cn.country_code = '[us]'\nAND it.info = 'tech info'\nAND it3.info = 'death date'\nAND k.keyword = 'bad-reputation'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%M%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'I Was a Communist for the FBI'\nAND t.production_year BETWEEN 1889 AND 2020;",
    "29-0_testing_162": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Sailor'\nAND ci.note IN ('(uncredited)', '(as Cathy Burke)', '(as Lars Berghagen)', '(as Amber Grey)', '(as Al Bradly)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD number of sides'\nAND it3.info = 'birth notes'\nAND k.keyword = 'sand'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%o%'\nAND rt.role = 'actor'\nAND t.title = 'The Caine Mutiny'\nAND t.production_year BETWEEN 1943 AND 2015;",
    "29-0_testing_163": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Sailor'\nAND ci.note IN ('(uncredited)', '(Dianna Devoe)', '(as Mrudula)', '(as Eila Teikko)', '(as Alfredo Nicola)')\nAND cn.country_code = '[us]'\nAND it.info = 'LD status of availablility'\nAND it3.info = 'interviews'\nAND k.keyword = 'strawberry'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%f%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%o%'\nAND rt.role = 'actor'\nAND t.title = 'The Caine Mutiny'\nAND t.production_year BETWEEN 1930 AND 2012;",
    "29-0_testing_164": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Eva Lai)', '(as V. Makhov)', '(featured gamer)', '(security guard)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'birth notes'\nAND k.keyword = 'clown'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1901 AND 2017;",
    "29-0_testing_165": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Charos Santos)', '(as Chandershekhar)', '(as Priyesh)', '(part 7)')\nAND cn.country_code = '[nl]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'cover-up'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%\u00e2%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1933 AND 2004;",
    "29-0_testing_166": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Gleager)', '(as Peter Scharow)', '(as Anne Sion)', '(live producer)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND it3.info = 'death date'\nAND k.keyword = 'furnace'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1931 AND 2013;",
    "29-0_testing_167": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(advance publicist)', '(as John Quijada)', '(as Hersha Parody)', '(producer: QI)')\nAND cn.country_code = '[it]'\nAND it.info = 'certificates'\nAND it3.info = 'birth name'\nAND k.keyword = 'iron-curtain'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%P%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1880 AND 2010;",
    "29-0_testing_168": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Li Keng)', '(as Nathan Diaz)', '(as Jeff Fisher)', '(as Luca Zanforni)')\nAND cn.country_code = '[it]'\nAND it.info = 'certificates'\nAND it3.info = 'birth notes'\nAND k.keyword = 'blockbuster'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%z%' OR mi.info LIKE '%z%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1934 AND 2014;",
    "29-0_testing_169": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Susi Draxler)', '(as Alex Lo)', '(as Mrs. Paul)', '(as Suzie McCoppin)')\nAND cn.country_code = '[de]'\nAND it.info = 'LD disc size'\nAND it3.info = 'birth name'\nAND k.keyword = 'rape'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1941 AND 1999;",
    "29-0_testing_170": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Greg Storm)', '(as Eduard Melotte)', '(1958-1966)', '(Pula)')\nAND cn.country_code = '[de]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth date'\nAND k.keyword = 'forest'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%)%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1936 AND 2011;",
    "29-0_testing_171": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Robert Moya)', '(as M.Prasad)', '(as Toxi)', '(as Lukas)')\nAND cn.country_code = '[it]'\nAND it.info = 'locations'\nAND it3.info = 'birth notes'\nAND k.keyword = 'hot-air-balloon'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1962 AND 2008;",
    "29-0_testing_172": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(play \"Uuuuh!\")', '(as Chee)', '(as Ferdie Mayne)', '(as Sharmila Rose)')\nAND cn.country_code = '[ch]'\nAND it.info = 'crazy credits'\nAND it3.info = 'death notes'\nAND k.keyword = 'murder'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1971 AND 2011;",
    "29-0_testing_173": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(book) (as Tiitus)', '(as Korina H.)', '(it department)', '(as Frankie Ryan)')\nAND cn.country_code = '[au]'\nAND it.info = 'weekend gross'\nAND it3.info = 'interviews'\nAND k.keyword = 'iron-curtain'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%(%' OR mi.info LIKE '%(%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1955 AND 1998;",
    "29-0_testing_174": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(9 episodes 1999)', '(as Charlie Jobson)', '(as Y.G. Chauhan)', '(as Meri-De)')\nAND cn.country_code = '[de]'\nAND it.info = 'trivia'\nAND it3.info = 'death date'\nAND k.keyword = 'electrocution'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%.%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1912 AND 2004;",
    "29-0_testing_175": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Surekha Parkar)', '(as Codie Wilbee)', '(as Danik Aubray)', '(as Katarzyna Lech)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'death notes'\nAND k.keyword = 'slow-motion-scene'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%6%' OR mi.info LIKE '%(%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1922 AND 2015;",
    "29-0_testing_176": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as M. Riehs)', '(as Robert Chan)', '(VGX producer)', '(as Anthea Rudink)')\nAND cn.country_code = '[it]'\nAND it.info = 'sound mix'\nAND it3.info = 'quotes'\nAND k.keyword = 'official-james-bond-series'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%T%' OR mi.info LIKE '%m%')\nAND n.gender = 'm'\nAND n.name LIKE '%h%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1923 AND 2008;",
    "29-0_testing_177": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Olya Kazakova)', '(as Horst Fechner)', '(as Lucky Gold)', '(as Charmaine Star)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'stoner'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%$%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1905 AND 2012;",
    "29-0_testing_178": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Baby Face)', '(as Regina Gilmore)', '(as Joshua Pollock)', '(Velji''s brother)')\nAND cn.country_code = '[it]'\nAND it.info = 'gross'\nAND it3.info = 'where now'\nAND k.keyword = 'intelligence'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%o%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1916 AND 2014;",
    "29-0_testing_179": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Bobby Scheerer)', '(as MC Green)', '(as Andy Yuncken)', '(as Debi Thompson)')\nAND cn.country_code = '[ch]'\nAND it.info = 'goofs'\nAND it3.info = 'birth date'\nAND k.keyword = 'blood-on-camera-lens'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%O%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1928 AND 2011;",
    "29-0_testing_180": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(segment \"Tara\")', '(as Harry Walters)', '(as Kanonkongen)', '(as Eion O''Shea)')\nAND cn.country_code = '[us]'\nAND it.info = 'trivia'\nAND it3.info = 'death date'\nAND k.keyword = 'murder'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%F%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1909 AND 2006;",
    "29-0_testing_181": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Malorie)', '(Farraj)', '(as Meridiane)', '(as Ortis Dealey)')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'trivia'\nAND k.keyword = 'bomb'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1910 AND 2013;",
    "29-0_testing_182": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Raahul Maharya)', '(as Angela Voughn)', '(as Axel Borghetti)', '(Fat Boys)')\nAND cn.country_code = '[au]'\nAND it.info = 'weekend gross'\nAND it3.info = 'quotes'\nAND k.keyword = 'india'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%7%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1976 AND 2017;",
    "29-0_testing_183": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(Pilot) (2008)', '(kite expert)', '(insert producer)', '(as A. Kishore)')\nAND cn.country_code = '[ch]'\nAND it.info = 'release dates'\nAND it3.info = 'birth date'\nAND k.keyword = 'furnace'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%E%')\nAND n.gender = 'm'\nAND n.name LIKE '%x%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1949 AND 2014;",
    "29-0_testing_184": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Shadow)', '(as Lyle Edge)', '(O-Tsune)', '(as Lena Nikitina)')\nAND cn.country_code = '[us]'\nAND it.info = 'trivia'\nAND it3.info = 'birth notes'\nAND k.keyword = 'murder'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1990 AND 2004;",
    "29-0_testing_185": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Doctor Dre)', '(as Samuel Chu)', '(as Bill Hanrahan)', '(aerial mount)')\nAND cn.country_code = '[it]'\nAND it.info = 'goofs'\nAND it3.info = 'interviews'\nAND k.keyword = 'egg'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%s%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1932 AND 2014;",
    "29-0_testing_186": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as John Coburn)', '(age 14-17)', '(as Danis)', '(as V. Valentinova)')\nAND cn.country_code = '[nl]'\nAND it.info = 'release dates'\nAND it3.info = 'death notes'\nAND k.keyword = 'severed-nose'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1942 AND 2006;",
    "29-0_testing_187": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Aggressive Rocker'\nAND ci.note IN ('(uncredited)', '(as Jim Helms)', '(as Eric Gaudry)', '(as Saphire Rae)', '(digital graphics)')\nAND cn.country_code = '[fr]'\nAND it.info = 'quotes'\nAND it3.info = 'spouse'\nAND k.keyword = 'bathtub'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%C%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.title = 'Quadrophenia'\nAND t.production_year BETWEEN 1897 AND 1984;",
    "29-0_testing_188": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Stephan Meyer)', '(as J\u00c3\u00balio Verme)', '(as R.A. Walsh)', '(as Jay M. Boryea)')\nAND cn.country_code = '[de]'\nAND it.info = 'taglines'\nAND it3.info = 'birth date'\nAND k.keyword = 'forest'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%.%' OR mi.info LIKE '%\"%')\nAND n.gender = 'm'\nAND n.name LIKE '%A%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1892 AND 2014;",
    "29-0_testing_189": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Beno\u00c3\u00aet)', '(as Zoubeir Bornaz)', '(as Bablu)', '(as Will McMaster)')\nAND cn.country_code = '[it]'\nAND it.info = 'certificates'\nAND it3.info = 'where now'\nAND k.keyword = 'all-female-army'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1958 AND 1993;",
    "29-0_testing_190": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(1991-1993, 1995)', '(as Rain Rives)', '(episode 1.10)', '(banking customer)')\nAND cn.country_code = '[de]'\nAND it.info = 'trivia'\nAND it3.info = 'death date'\nAND k.keyword = 'caterpillar'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1935 AND 2012;",
    "29-0_testing_191": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Dawn Kennedy)', '(as Tom Cleaver)', '(as Sandi Reagan)', '(Berry segment)')\nAND cn.country_code = '[nl]'\nAND it.info = 'weekend gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'villain-not-really-dead-cliche'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%7%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1931 AND 2013;",
    "29-0_testing_192": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(as Dr. Bruce Wade)', '(as Tony Fontaine)', '(as Willy Roggeman)', '(director: finance)')\nAND cn.country_code = '[au]'\nAND it.info = 'certificates'\nAND it3.info = 'birth date'\nAND k.keyword = 'loaded-dice'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1960 AND 2001;",
    "29-0_testing_193": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(Crislainy)', '(as Nobuo Kakuda)', '(as \u00c3\u0088lia Sol\u00c3\u00a8)', '(as Heather Kay)')\nAND cn.country_code = '[it]'\nAND it.info = 'weekend gross'\nAND it3.info = 'where now'\nAND k.keyword = 'hot-air-balloon'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%8%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1915 AND 2003;",
    "29-0_testing_194": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Larney Tupu)', '(pot smoking teen)', '(as Ashem Arkan)', '(dance coach)')\nAND cn.country_code = '[ch]'\nAND it.info = 'gross'\nAND it3.info = 'death date'\nAND k.keyword = 'passed-out-drunk'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%4%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1939 AND 2006;",
    "29-0_testing_195": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Man on Tour Boat'\nAND ci.note IN ('(uncredited)', '(eyewear supplier)', '(as Amed Luxor)', '(as Badie Khairi)', '(novel \"Sensommer\")')\nAND cn.country_code = '[au]'\nAND it.info = 'trivia'\nAND it3.info = 'trivia'\nAND k.keyword = 'chase-on-train-roof'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%E%')\nAND n.gender = 'm'\nAND n.name LIKE '%.%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1915 AND 1991;",
    "29-0_testing_196": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Soviet Security Council Member'\nAND ci.note IN ('(uncredited)', '(as Gunter Schoss)', '(as Eddie Jobson)', '(as Hans Eckhardt)', '(producer) (1965)')\nAND cn.country_code = '[au]'\nAND it.info = 'gross'\nAND it3.info = 'other works'\nAND k.keyword = 'intelligence'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%)%')\nAND n.gender = 'm'\nAND n.name LIKE '%o%'\nAND rt.role = 'actor'\nAND t.title = 'Octopussy'\nAND t.production_year BETWEEN 1977 AND 2003;",
    "29-0_testing_197": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Frisell'\nAND ci.note IN ('(Glowing Raver)', '(as Tu Xin Ran)', '(as Marfa Dervilly)', '(concept director)', '(as Jack Diehl)')\nAND cn.country_code = '[de]'\nAND it.info = 'gross'\nAND it3.info = 'birth notes'\nAND k.keyword = 'villain-not-really-dead-cliche'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.title = 'Freddy vs. Jason'\nAND t.production_year BETWEEN 1914 AND 2008;",
    "29-0_testing_198": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'crew'\nAND cct2.kind = 'complete'\nAND chn.name = 'Communist Goon Agitator'\nAND ci.note IN ('(uncredited)', '(as RJ Baretto)', '(as Todes)', '(as Skye Jolie)', '(tutoring liaison)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND it3.info = 'birth name'\nAND k.keyword = 'clapping'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%m%'\nAND rt.role = 'actor'\nAND t.title = 'I Was a Communist for the FBI'\nAND t.production_year BETWEEN 1939 AND 2013;",
    "29-0_testing_199": "SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation\nFROM aka_name AS an,\n    complete_cast AS cc,\n    comp_cast_type AS cct1,\n    comp_cast_type AS cct2,\n    char_name AS chn,\n    cast_info AS ci,\n    company_name AS cn,\n    info_type AS it,\n    info_type AS it3,\n    keyword AS k,\n    movie_companies AS mc,\n    movie_info AS mi,\n    movie_keyword AS mk,\n    name AS n,\n    person_info AS pi,\n    role_type AS rt,\n    title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND t.id = cc.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mc.movie_id = cc.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi.movie_id = cc.movie_id\nAND ci.movie_id = mk.movie_id\nAND ci.movie_id = cc.movie_id\nAND mk.movie_id = cc.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND n.id = pi.person_id\nAND ci.person_id = pi.person_id\nAND it3.id = pi.info_type_id\nAND k.id = mk.keyword_id\nAND cct1.id = cc.subject_id\nAND cct2.id = cc.status_id\nAND cct1.kind = 'cast'\nAND cct2.kind = 'complete+verified'\nAND chn.name = 'Table Extra at Bar'\nAND ci.note IN ('(uncredited)', '(as Seema Bharaova)', '(as Lena Hill)', '(as Yrina Demik)', '(as Amy D. Higgins)')\nAND cn.country_code = '[de]'\nAND it.info = 'LD analog left'\nAND it3.info = 'birth notes'\nAND k.keyword = 'savannah-georgia'\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%M%')\nAND n.gender = 'm'\nAND n.name LIKE '%G%'\nAND rt.role = 'actor'\nAND t.title = 'Cape Fear'\nAND t.production_year BETWEEN 1958 AND 1985;"
}