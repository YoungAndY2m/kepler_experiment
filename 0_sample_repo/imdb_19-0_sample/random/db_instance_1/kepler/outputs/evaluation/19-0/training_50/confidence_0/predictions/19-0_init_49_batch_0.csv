iteration,params,plan_id,confidence,plan_content
0,"[""(as Hung Ching-Pao)', '(as Gaby Zuckerman)', '(as James Gaynes)', '(as Jerome Grillon)', '(as Kona)"", '[au]', 'runtimes', '%l%', '%)%', '%o%', '%g%', 'm', '%K%', 'actor', '1971', '2004']",34,0.5466878,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Pauline Myers)', '(as Mike Nader)', '(producer) (1986)', '(as Pat Kaufman)"", '[hu]', 'quotes', '%V%', '%r%', '%u%', '%s%', 'm', '%O%', 'actor', '1925', '2009']",34,0.53513825,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(as Dino Pertzoff)', '(as America Moore)', '(as 23.45)', '(writer) (2012-)"", '[us]', 'quotes', '%0%', '%)%', '%c%', '%t%', 'm', '%d%', 'actor', '1933', '2012']",34,0.54387265,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(17 years)', '(19??-1980)', '(as Su Bhoopongsa)', '(synergy)"", '[us]', 'quotes', '%1%', '%(%', '%W%', '%o%', 'm', '%e%', 'actor', '1914', '2015']",34,0.5324492,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(Munimji)', '(as V. Yantsat)', '(subtitler) (2003)', '(as Karl Moro)"", '[us]', 'color info', '%1%', '%0%', '%l%', '%c%', 'm', '%e%', 'actor', '1908', '2007']",34,0.54473525,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(as JosÃ©)', '(as Bebe Anderson)', '(as Lauron Drapper)', '(episodes 201-210)"", '[us]', 'trivia', '%(%', '%(%', '%t%', '%n%', 'm', '%n%', 'actor', '2002', '2011']",34,0.5344561,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(as Jeff Dashnaw)\', \'(segment ""Laurie"")\', \'(as Hans Ekman)\', \'(as Josette Dagory)\', \'(as Sergi MartÃ\xad)', '[sg]', 'quotes', '%a%', '%S%', '%u%', '%s%', 'm', '%a%', 'actor', '1928', '2006']",34,0.5428761,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as William Hall)', '(as Anneke Willys)', '(as Alan Ray)', '(as Wong Ching)"", '[de]', 'quotes', '%6%', '%1%', '%s%', '%a%', 'm', '%o%', 'actor', '1912', '2011']",34,0.5477594,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Haftbefehl)', '(as Jim Wong)', '(as Monica Zelak)', '(vt editor)"", '[fi]', 'certificates', '%n%', '%a%', '%K%', '%i%', 'm', '%H%', 'actor', '1933', '1975']",34,0.55269474,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Kenneth Gilman)', '(as Big Rita)', '(Feldco)', '(as Notchi)"", '[fr]', 'languages', '%r%', '%n%', '%a%', '%r%', 'm', '%n%', 'actor', '1938', '2017']",34,0.5609447,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(season 2 onwards)', '(as Jan Dvorak)', '(as Ev Smith)', '(as Stan Davis)"", '[es]', 'tech info', '%a%', '%0%', '%:%', '%O%', 'm', '%u%', 'actor', '1945', '2015']",34,0.55841535,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(Vieja)', '(as John Major MP)', '(as Dan Manescu)', '(as Nick Musuraca)"", '[ch]', 'quotes', '%d%', '%l%', '%f%', '%e%', 'm', '%w%', 'actor', '1932', '2015']",34,0.54444045,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Kaity Irani)', '(as Philippe Simon)', '(Psychiatrist)', '(as Sharone)"", '[us]', 'production dates', '%)%', '%H%', '%e%', '%O%', 'm', '%J%', 'actor', '1901', '1964']",34,0.54422957,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Hilal Ã\x87elenk)', '(as JesÃºs Fragoso)', '(as Sheila Le Gay)', '(Love Life)"", '[at]', 'tech info', '%(%', '%)%', '%a%', '%R%', 'm', '%,%', 'actor', '1953', '2014']",34,0.5526015,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Wes Archer)', '(as Amit Gangoly)', '(as MÃ¡ria IllyÃ©s)', '(as L.O.C.)"", '[sg]', 'quotes', '%t%', '%p%', '%a%', '%e%', 'm', '%J%', 'actor', '1975', '2011']",34,0.5489625,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(account manager)', '(as C. Todd Vittum)', '(as David Eden)', '(on set medic)"", '[hu]', 'quotes', '%r%', '%(%', '%y%', '%D%', 'm', '%S%', 'actor', '1915', '2015']",34,0.53488916,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as John Oven)', '(utilities)', '(as Sarah Dunn)', '(production runner)"", '[de]', 'trivia', '%y%', '%n%', '%i%', '%)%', 'm', '%t%', 'actor', '1901', '2006']",34,0.544446,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(episodes 1 and 2)', '(as Lukas Lyko)', '(as Chris Sam)', '(as Big Country)"", '[sg]', 'trivia', '%c%', '%n%', '%(%', '%(%', 'm', '%J%', 'actor', '1958', '2006']",34,0.54851353,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Mason Marconi)', '(as Chi Tak Cheung)', '(Lydia)', '(as Aziz Kabouche)"", '[nl]', 'quotes', '%a%', '%V%', '%e%', '%?%', 'm', '%j%', 'actor', '1999', '2017']",34,0.54245746,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Nazar)', '(as Tho E. Azzari)', '(deck hand)', '(as Edward Powell)"", '[sg]', 'quotes', '%h%', '%g%', '%I%', '%:%', 'm', '%a%', 'actor', '1907', '2017']",34,0.5466224,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Uriel Emil)', '(producer: DoRo)', '(as Dell Barras)', '(as Renaud Fleury)"", '[at]', 'locations', '%V%', '%r%', '%n%', '%i%', 'm', '%a%', 'actor', '1997', '2010']",34,0.5547836,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(2004-2006)', '(as Ed King)', '(as Ryken Zane)', '(as J. Picas)"", '[de]', 'color info', '%)%', '%t%', '%n%', '%B%', 'm', '%e%', 'actor', '1907', '2010']",34,0.544311,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(KJCM)', '(as Alectra Blue)', '(as Chris Geddes)', '(as Gilbert John)"", '[gb]', 'release dates', '%2%', '%0%', '%r%', '%G%', 'm', '%g%', 'actor', '1894', '2010']",34,0.5331172,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as LuÃ\xads Salvador)', '(as Appert)', '(as Devichand)', '(as Ellery Queen)"", '[ch]', 'quotes', '%e%', '%r%', '%l%', '%e%', 'm', '%a%', 'actor', '1910', '2017']",34,0.5484943,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Tomek Bork)', '(as Z. Martincevic)', '(as Steve Fryer)', '(as Bill-Bocketts)"", '[ch]', 'trivia', '%h%', '%e%', '%o%', '%e%', 'm', '%r%', 'actor', '1935', '2013']",34,0.5452486,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(manga) (as CLAMP)', '(as Deann Korbutt)', '(as Kris Lara)', '(montage effects)"", '[us]', 'trivia', '%U%', '%)%', '%e%', '%t%', 'm', '%t%', 'actor', '1923', '1953']",34,0.5475555,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Hung Ching-Pao)', '(as Mykah)', '(as Jerry Sidell)', '(as Frank Kopyc)', '(Tel Aviv 1970)"", '[au]', 'runtimes', '%6%', '%6%', '%5%', '%9%', 'm', '%u%', 'actor', '1960', '2003']",34,0.5372845,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Irina Berezina)', '(as Patty Cakes)', '(as Vasek C. Simek)', '(decorations)"", '[at]', 'languages', '%9%', '%)%', '%a%', '%n%', 'm', '%n%', 'actor', '1989', '2017']",34,0.5563588,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Tibor KÃ¡konyi)', '(as Lortac)', '(as Kal Skinner)', '(lead analyst)"", '[fr]', 'languages', '%l%', '%(%', '%p%', '%J%', 'm', '%r%', 'actor', '1911', '2018']",34,0.5606832,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Frankie Wade)', '(as Gilou KikoÃ¯ne)', '(as J.D. Cullum)', '(as Koo Kam Wah)"", '[at]', 'release dates', '%)%', '%)%', '%a%', '%G%', 'm', '%r%', 'actor', '1953', '2015']",34,0.53907955,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(puppet maker)', '(as Maury Hurley)', '(as Jimmy Cogan)', '(as Nina Flowers)"", '[us]', 'color info', '%U%', '%(%', '%l%', '%r%', 'm', '%p%', 'actor', '1976', '1995']",34,0.5395604,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as James Burtis)', '(1954-1958)', '(as Ann Taylor MP)', '(as Neige Dolski)"", '[at]', 'trivia', '%(%', '%9%', '%a%', '%a%', 'm', '%J%', 'actor', '1922', '2004']",34,0.5524014,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(head of drama: DR)', '(as Andre Pavon)', '(as Wong Kai-Fai)', '(as Lynn Matthew)"", '[gb]', 'tech info', '%D%', '%(%', '%m%', '%l%', 'm', '%K%', 'actor', '1917', '2018']",34,0.5409029,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Laura Aryeh)', '(co-story idea)', '(as Denise Perry)', '(as Gertie Honek)"", '[de]', 'certificates', '%c%', '%9%', '%l%', '%-%', 'm', '%r%', 'actor', '1919', '2017']",34,0.5496563,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Debra Armini)', '(as King Crimson)', '(as Barry Thomas)', '(as Joseph Tennent)"", '[us]', 'quotes', '%)%', '%)%', '%:%', '%W%', 'm', '%a%', 'actor', '1995', '2017']",34,0.5483555,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(14th place)', '(as Balazs Koos)', '(commentaries)', '(as LluÃ\xads Pascual)"", '[ch]', 'trivia', '%a%', '%e%', '%(%', '%n%', 'm', '%f%', 'actor', '1919', '2008']",34,0.55152404,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as M.B. Havey)', '(as Dick Howard)', '(model)', '(as Bobby Dator)"", '[fr]', 'locations', '%)%', '%a%', '%g%', '%,%', 'm', '%d%', 'actor', '1962', '2018']",34,0.54383653,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Zubida)', '(as Rocky Rome)', '(as Barcella)', '(as N. Gritsenko)"", '[at]', 'trivia', '%l%', '%i%', '%B%', '%n%', 'm', '%a%', 'actor', '1903', '1983']",34,0.54678905,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Gabriella)', '(as Ging-man Cho)', '(as John Spence XI)', '(as Tara Smith)"", '[fr]', 'sound mix', '%r%', '%1%', '%i%', '%i%', 'm', '%u%', 'actor', '1919', '2015']",34,0.55470836,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(coordinator: cast)', '(as Memo Dorantes)', '(as Teija Auvinen)', '(as Sabina Khan)"", '[de]', 'certificates', '%)%', '%m%', '%S%', '%A%', 'm', '%f%', 'actor', '1946', '1999']",34,0.5397388,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Stephen Boyum)', '(as Eugen Werber)', '(as Robert Ragis)', '(personal chef)"", '[br]', 'trivia', '%B%', '%5%', '%s%', '%s%', 'm', '%h%', 'actor', '1950', '2011']",34,0.56250656,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Ernie Dotson)', '(as Aquistapace)', '(as Graice Kelly)', '(nautic advisor)"", '[de]', 'color info', '%(%', '%)%', '%r%', '%r%', 'm', '%h%', 'actor', '1945', '1971']",34,0.5539886,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as WF Deedes)', '(steeple-jack)', '(as Joanie)', '(as Mark Dawop)"", '[us]', 'trivia', '%0%', '%1%', '%s%', '%w%', 'm', '%y%', 'actor', '1942', '1999']",34,0.55181843,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Biff Parker)', '(as Greg Calpakis)', '(as Tom Jennings)', '(as Sarah Thurston)"", '[us]', 'certificates', '%)%', '%2%', '%I%', '%a%', 'm', '%p%', 'actor', '1908', '2007']",34,0.54161686,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Jenny Funnel)', '(as Chang-ju Kim)', '(as Gareth Bennett)', '(as Ervin Onte)"", '[ch]', 'quotes', '%)%', '%2%', '%]%', '%o%', 'm', '%f%', 'actor', '1981', '2017']",34,0.5396404,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(English adaptor)', '(as Xavier Fonti)', '(as Paul Vernon)', '(as Earl Hamner)"", '[es]', 'languages', '%a%', '%i%', '%r%', '%a%', 'm', '%M%', 'actor', '1895', '2013']",34,0.5505395,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Hunt Powers)', '(Vikram''s sister)', '(chaperone: model)', '(as Rudolf Dolezal)"", '[us]', 'certificates', '%S%', '%H%', '%d%', '%w%', 'm', '%F%', 'actor', '1914', '1983']",34,0.5488578,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Mahjoub Erraji)', '(as Uncle Frank)', '(tailor)', '(as Ryan Litzinger)"", '[at]', 'certificates', '%a%', '%1%', '%-%', '%i%', 'm', '%,%', 'actor', '1913', '1972']",34,0.54082936,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Trisha Tomasky)', '(as Ann Driscoll)', '(as Donna Collins)', '(as Platinum)"", '[us]', 'color info', '%o%', '%o%', '%l%', '%C%', 'm', '%n%', 'actor', '1924', '1967']",34,0.53283644,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Robert Lizuren)', '(as Nina Peterson)', '(as Jack Antunes)', '(as Toni Sterrett)"", '[nl]', 'languages', '%(%', '%0%', '%a%', '%h%', 'm', '%o%', 'actor', '1929', '2010']",34,0.5671409,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Chan Wai Kwong)', '(as Jan Dykstra)', '(as Hubert Kounde)', '(as Antonio McKay)"", '[us]', 'color info', '%(%', '%(%', '%a%', '%n%', 'm', '%a%', 'actor', '1933', '1952']",34,0.56537604,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Samson Leguese)', '(as Anand-Milind)', '(as Kevin D. Hill)', '(as HaydeÃ© BalzÃ¡)"", '[us]', 'trivia', '%(%', '%U%', '%f%', '%T%', 'm', '%u%', 'actor', '1903', '2014']",34,0.54038024,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Parsharam)', '(as Paco P. Romero)', '(as Leah Stanko)', '(as Sheila Manors)"", '[hu]', 'trivia', '%H%', '%)%', '%n%', '%s%', 'm', '%,%', 'actor', '1912', '2015']",34,0.53666836,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Damon Jeffrey)', '(as Peter Trenck)', '(as Helmut Grube)', '(as Candy Hackett)"", '[de]', 'trivia', '%n%', '%m%', '%w%', '%c%', 'm', '%e%', 'actor', '1939', '1978']",34,0.5364415,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as H. Verdun)', '(as Filipo Morelli)', '(as Barbara Harold)', '(as Violet Neitz)"", '[sg]', 'quotes', '%c%', '%t%', '%.%', '%n%', 'm', '%r%', 'actor', '1939', '2015']",34,0.5498243,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Tamas Kahane)', '(as Johnny Hough)', '(as Diane Cannon)', '(as K Kim)"", '[us]', 'quotes', '%7%', '%(%', '%m%', '%c%', 'm', '%r%', 'actor', '1950', '2014']",34,0.5506845,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Billy Lucas)', '(as S. Bekhterev)', '(as Kenny Peach)', '(as Rich Ruggiero)"", '[de]', 'trivia', '%t%', '%)%', '%e%', '%c%', 'm', '%,%', 'actor', '1906', '1953']",34,0.54414356,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as J. Lins)', '(as Paloma Paso)', '(as Bino)', '(as Ronja Forcher)"", '[fi]', 'quotes', '%n%', '%n%', '%s%', '%m%', 'm', '%n%', 'actor', '1960', '2008']",34,0.5550433,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Ansel Caine)', '(electric bass)', '(Kamo)', '(as Donna Roth)"", '[us]', 'printed media reviews', '%e%', '%o%', '%S%', '%b%', 'm', '%e%', 'actor', '1921', '1988']",34,0.55301434,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Lois Lindsey)', '(as Liqun Li)', '(as V. Olshansky)', '(as Lorraine)"", '[hu]', 'release dates', '%V%', '%T%', '%0%', '%m%', 'm', '%,%', 'actor', '1944', '2013']",34,0.545234,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Andrew Sharpe)', '(as Howard Vu)', '(End)', '(as MihÃ¡ly Dunai)"", '[br]', 'quotes', '%(%', '%0%', ""%''%"", '%d%', 'm', '%s%', 'actor', '1988', '2012']",34,0.54469126,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Pat Rooney)', '(as Paul Liapis)', '(as M. NademlejkÃ¡)', '(as Jack DeGovia)"", '[de]', 'trivia', '%(%', '%r%', '%k%', '%h%', 'm', '%e%', 'actor', '1936', '1998']",34,0.54089403,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(Cantos IX-XIV)', '(as Jorge Beyrute)', '(location design)', '(as Grant Lombard)"", '[us]', 'runtimes', '%0%', '%)%', '%6%', '%0%', 'm', '%t%', 'actor', '1916', '2017']",34,0.53826016,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Joshua Smith)', '(as Luce BerthomÃ©)', '(TÃ»zmanÃ³)', '(medic: Detroit)"", '[de]', 'certificates', '%l%', '%(%', '%r%', '%3%', 'm', '%a%', 'actor', '1887', '2005']",34,0.5374737,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(key set runner)', '(as Vitto Rezza)', '(as Paul Loustau)', '(as Dorte HÃ¸gh)"", '[us]', 'release dates', '%0%', '%)%', '%:%', '%8%', 'm', '%S%', 'actor', '1990', '2010']",34,0.5358337,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(as Jeff Dashnaw)\', \'(as Mutter Beimer)\', \'(as Ruy Duarte)\', \'(play ""Choknutaya"")\', \'(as Lori Rose)', '[ch]', 'trivia', '%e%', '%t%', '%o%', '%i%', 'm', '%.%', 'actor', '1903', '2010']",34,0.5585091,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Mike Green)', '(UK)/Salty (UK/US)', '(as J.C. Dumoutier)', '(as Dominique Dan)"", '[sg]', 'trivia', '%g%', '%a%', '%s%', '%H%', 'm', '%.%', 'actor', '1899', '2007']",34,0.5602399,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(as Zach)', '(staging services)', '(as Nick Asbury)', '(as David Boveen)"", '[us]', 'quotes', '%(%', '%(%', '%b%', '%e%', 'm', '%w%', 'actor', '1953', '2015']",34,0.54039335,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(news writer)\', \'(play ""Dora"")\', \'(as Joanne Manley)\', \'(as Alicia Peramo)', '[us]', 'trivia', '%S%', '%(%', '%f%', ""%''%"", 'm', '%,%', 'actor', '1932', '2004']",34,0.53049546,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Mariano Soto)', '(as Mary Federico)', '(as Bret Rockman)', '(as Claude Jourdan)"", '[fr]', 'tech info', '%F%', '%(%', '%M%', '%m%', 'm', '%n%', 'actor', '2004', '2014']",34,0.53026646,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(Young man)', '(as Admiral Byrd)', '(as Steve Elliott)', '(Thora Zeen)"", '[at]', 'languages', '%(%', '%0%', '%m%', '%a%', 'm', '%e%', 'actor', '1926', '2017']",34,0.5625623,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Aarti Chabria)', '(as Rose Perrin)', '(as Valerie McNeil)', '(as Herbert Voland)"", '[ch]', 'quotes', '%2%', '%(%', '%m%', '%a%', 'm', '%y%', 'actor', '1895', '2007']",34,0.5563362,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Maddy)', '(as Jim Driskill)', '(as A.L. Mariaux)', '(supplier: watch)"", '[at]', 'locations', '%t%', '%)%', '%i%', '%k%', 'm', '%e%', 'actor', '1975', '2014']",34,0.5390493,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Ye. Mozgovaya)', '(as Fung Siu)', '(as Daniel Farnam)', '(as LavÃ\xadnia Vila)"", '[de]', 'plot', '%n%', '%t%', '%o%', '%u%', 'm', '%r%', 'actor', '1962', '2002']",34,0.5619704,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(modiste)', '(as Tom Bellin)', '(as Samuel Lisenco)', '(as D. Gilfether)"", '[ch]', 'quotes', '%0%', '%z%', '%o%', '%o%', 'm', '%a%', 'actor', '1944', '2009']",34,0.5435771,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(as Anya Schmidt)', '(as Ann Lopez)', '(as Lee Fa Yuen)', '(ITN News)"", '[us]', 'trivia', '%)%', '%0%', ""%''%"", '%s%', 'm', '%r%', 'actor', '1937', '2012']",34,0.54570764,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(engineer: VT)', '(as Cowboy)', '(as Nikki Nights)', '(as Vincent Cox)"", '[de]', 'certificates', '%y%', '%t%', '%d%', '%F%', 'm', '%q%', 'actor', '1904', '2013']",34,0.54005665,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(trainee rigger)', '(''Arrowhead'')', '(as Barry Kugler)', '(Lynx center field)"", '[sg]', 'quotes', '%5%', '%g%', '%g%', '%x%', 'm', '%J%', 'actor', '1974', '2016']",34,0.5389519,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Kim Bong Il)', '(as Isabel Salazar)', '(as Tak-han Yip)', '(as Denise Miller)"", '[de]', 'production dates', '%(%', '%n%', '%D%', '%c%', 'm', '%J%', 'actor', '1925', '1996']",34,0.5541927,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Debbi DiPietro)', '(as Ellen Verhoeff)', '(as Brian Hogg)', '(as David Whatley)"", '[br]', 'quotes', '%B%', '%)%', '%d%', '%n%', 'm', '%f%', 'actor', '2001', '2015']",34,0.5431149,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(story developer)', '(Kissing boy #1)', '(runner: Belgium)', '(Culture)"", '[us]', 'taglines', '%(%', '%(%', '%h%', ""%''%"", 'm', '%e%', 'actor', '1897', '2012']",34,0.53097713,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as A.C. Stephens)', '(as John Mailer)', '(as Henry de Bray)', '(as Juno Lee)"", '[fi]', 'certificates', '%)%', '%n%', '%a%', '%a%', 'm', '%e%', 'actor', '1906', '1986']",34,0.5445168,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(dialects)', '(as Ben Soutten)', '(producer) (1970s)', '(as Arnold Gregg)"", '[sg]', 'quotes', '%(%', '%t%', '%c%', '%a%', 'm', '%J%', 'actor', '1925', '2010']",34,0.5520472,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(book ""Herra Huu"")\', \'(as Ajay Rohilla)\', \'(as Johnny P.)\', \'(as Anja)', '[gb]', 'languages', '%(%', '%V%', '%n%', '%M%', 'm', '%y%', 'actor', '1957', '2014']",34,0.5540755,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Gregg Hinton)', '(as Lillian Bond)', '(as Kader Setouty)', '(as Komal)"", '[fr]', 'tech info', '%1%', '%r%', '%y%', '%G%', 'm', '%J%', 'actor', '1922', '2012']",34,0.5305039,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Daniella Zuvic)', '(as Irving Weiss)', '(as Jaimes Gaines)', '(as Susan Gaedke)"", '[fr]', 'languages', '%F%', '%a%', '%e%', '%n%', 'm', '%J%', 'actor', '1973', '2015']",34,0.54335,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as PV Lehtinen)', '(as Macario)', '(as Jim Steuart)', '(as Patti Hastie)"", '[sg]', 'trivia', '%p%', '%r%', '%i%', '%l%', 'm', '%J%', 'actor', '1926', '2013']",34,0.54393935,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Galyn Gorg)', '(as Cliff Pellow)', '(as Caspe Brian)', '(as Helen Bubbles)"", '[gb]', 'locations', '%(%', '%(%', '%n%', '%i%', 'm', '%u%', 'actor', '1982', '2013']",34,0.5375552,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Devyn)', '(Amber Diva)', '(as V. Ivanov)', '(as Brendan Suhr)"", '[us]', 'quotes', '%T%', '%V%', '%e%', '%i%', 'm', '%m%', 'actor', '1980', '2010']",34,0.5472531,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(Joan)', '(as Inmate Sheri)', '(as Hakan Soyka)', '(as L. Barber)"", '[br]', 'quotes', '%)%', '%(%', '%s%', '%.%', 'm', '%,%', 'actor', '1972', '2016']",34,0.54189503,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Eric J. Haase)', '(as HÃ©lÃ¨ne Joy)', '(programme three)', '(as Patrick Currie)"", '[de]', 'certificates', '%(%', '%5%', '%e%', '%:%', 'm', '%r%', 'actor', '1899', '1966']",34,0.5561789,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(as Jeff Dashnaw)\', \'(as Joe Picorri)\', \'(as Gordon Stern)\', \'(manager: Cher)\', \'(novel ""The Pack"")', '[br]', 'quotes', '%(%', '%2%', '%e%', '%a%', 'm', '%f%', 'actor', '1973', '2017']",34,0.5565225,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Carmel)', '(video link)', '(as Alysha Laine)', '(as Mike Stemmle)"", '[sg]', 'trivia', '%)%', '%p%', '%a%', '%t%', 'm', '%,%', 'actor', '1929', '2014']",34,0.5519574,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Susan Barrett)', '(unit security)', '(as Stefan Schad)', '(intern: New York)"", '[ch]', 'trivia', '%(%', '%i%', '%t%', '%)%', 'm', '%e%', 'actor', '1994', '2013']",34,0.52580917,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Walter Lewis)', '(as Lisa DeMarco)', '(Innenarchitektin)', '(as The Macho Man)"", '[us]', 'gross', '%0%', '%1%', '%)%', '%4%', 'm', '%y%', 'actor', '1937', '2014']",34,0.5509146,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Melanie Venne)', '(as Jim Lewis)', '(as Albert Closas)', '(as Kristina Marks)"", '[br]', 'trivia', '%0%', '%a%', '%k%', '%d%', 'm', '%h%', 'actor', '1906', '2016']",34,0.53325534,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Ron Brownstein)', '(as Rob Robertson)', '(as Mike Reeves)', '(as Cory Everson)"", '[at]', 'tech info', '%(%', '%)%', '%a%', '%a%', 'm', '%i%', 'actor', '1967', '2017']",34,0.54580665,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(promotion video)', '(as Teese Gohl)', '(as H. Gonnermann)', '(as Susie Misner)"", '[ch]', 'quotes', '%i%', '%n%', '%h%', '%i%', 'm', '%f%', 'actor', '1912', '2014']",34,0.54232824,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(as Jeff Dashnaw)\', \'(as Nick Georgiade)\', \'(as Joey Gnoffo)\', \'(as Bob Ayers)\', \'(novel ""Blokada"")', '[br]', 'trivia', '%5%', '%0%', '%a%', '%e%', 'm', '%h%', 'actor', '1996', '2008']",34,0.5728632,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Ping Shek)', '(as Rachel Rothman)', '(as Laureen Kiss)', '(revision director)"", '[us]', 'trivia', '%)%', '%)%', '%.%', '%r%', 'm', '%r%', 'actor', '1906', '2008']",34,0.5417938,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(1990-1992)\', \'(as Warkop D.K.I.)\', \'(as Abbas-Mustan)\', \'(segment ""Kid"")', '[nl]', 'tech info', '%N%', '%r%', '%9%', '%1%', 'm', '%S%', 'actor', '1933', '2015']",34,0.5371829,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Jason Robards)', '(as Tami Anderson)', '(as Sheila)', '(story source)"", '[br]', 'quotes', '%)%', '%0%', '%t%', '%n%', 'm', '%y%', 'actor', '1909', '2008']",34,0.5632135,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Liu Zhang Mu)', '(as Dave Reid)', '(as Les Carlson)', '(as Seppo MerviÃ¤)"", '[at]', 'sound mix', '%r%', '%t%', '%i%', '%D%', 'm', '%g%', 'actor', '1962', '2011']",34,0.5421364,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(one segment)', '(voice) (as Debray)', '(as Sylvain Strike)', '(as Sylvia Vas)"", '[de]', 'copyright holder', '%n%', '%t%', '%)%', '%i%', 'm', '%u%', 'actor', '1896', '1993']",34,0.5587688,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as The Yardbirds)', '(as Steff Prescott)', '(as Cathy Bray)', '(as Mark Gray)"", '[ch]', 'trivia', '%r%', '%w%', '%a%', '%p%', 'm', '%a%', 'actor', '1897', '2016']",34,0.54567826,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Jeni LeGon)', '(as Ashley Adams)', '(as Melanie Sugar)', '(as Hengky Nero)"", '[br]', 'quotes', '%0%', '%)%', ""%''%"", '%t%', 'm', '%J%', 'actor', '1937', '2009']",34,0.5308529,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Marit Kile)', '(as Artur Eugens)', '(as Don Douglas)', '(as A. Radunsky)"", '[gb]', 'tech info', '%K%', '%)%', '%:%', '%e%', 'm', '%g%', 'actor', '1933', '2017']",34,0.53826714,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Pal Mahendra)', '(as Tad Nolen)', '(as Paola Salonga)', '(as Steven Spender)"", '[us]', 'trivia', '%(%', '%S%', '%w%', '%n%', 'm', '%,%', 'actor', '1926', '2001']",34,0.5466769,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(as Jeff Dashnaw)\', \'(book ""Satyricon"")\', \'(as Dr. Hugh Wirth)\', \'(as Phil Anderson)\', \'(as Alex Pastor)', '[br]', 'trivia', '%0%', '%z%', '%B%', '%r%', 'm', '%J%', 'actor', '1892', '2008']",34,0.5441172,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as King-Wei)', '(as SerafÃ\xadn)', '(as Harapos)', '(as TÃ¢nia Kalil)"", '[us]', 'plot', '%)%', '%1%', '%h%', '%e%', 'm', '%J%', 'actor', '1899', '1982']",34,0.54014367,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as B. Nagnaidorj)', '(as Aaron Tager)', '(chief researcher)', '(as Ian Bantiar)"", '[ch]', 'quotes', '%0%', '%(%', '%u%', '%t%', 'm', '%J%', 'actor', '1894', '2011']",34,0.5315515,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as G. Musrepov)', '(as Vivi Brunstein)', '(as Adriana Laham)', '(as Jason Hassell)"", '[ch]', 'quotes', '%)%', '%a%', '%o%', '%b%', 'm', '%w%', 'actor', '1941', '2006']",34,0.5495791,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as JC Zapanta)', '(production it)', '(as Al Pearce)', '(as A.J. Johnson)"", '[br]', 'trivia', '%0%', '%V%', '%t%', '%b%', 'm', '%.%', 'actor', '1931', '2017']",34,0.5400476,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as S. Recznicek)', '(as Doug Evans)', '(Comanchero)', '(as Claus Hartmann)"", '[gb]', 'languages', '%)%', '%U%', '%n%', '%n%', 'm', '%r%', 'actor', '1970', '2015']",34,0.5518708,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Graham Sooty)', '(as Lau Shun)', '(as Dr. Gad Levy)', '(as Warde Butler)"", '[sg]', 'quotes', '%i%', '%o%', '%u%', '%u%', 'm', '%a%', 'actor', '1909', '2016']",34,0.52958095,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Alvin J. Neitz)', '(economy assistant)', '(as Tony Jones)', '(as Georges NÃ©ri)"", '[nl]', 'certificates', '%a%', '%h%', '%e%', '%N%', 'm', '%t%', 'actor', '1894', '2012']",34,0.53903395,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Carl Barry)', '(as Hugh Smith)', '(as Dick Jeffries)', '(as Tyler M.)"", '[nl]', 'languages', '%)%', '%l%', '%n%', '%s%', 'm', '%,%', 'actor', '1954', '2013']",34,0.5569877,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Daniel Takacs)', '(as Poli Reshef)', '(aboard ship)', '(UI development)"", '[ch]', 'quotes', '%h%', '%r%', '%e%', '%e%', 'm', '%y%', 'actor', '1944', '2008']",34,0.55470693,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as L. Lavrovsky)', '(as Gabby Anderman)', '(as Rob Bouchard)', '(as Alano Massi)"", '[fi]', 'certificates', '%l%', '%n%', '%d%', '%:%', 'm', '%y%', 'actor', '1962', '2015']",34,0.5545285,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(film editing by)', '(as DC Reg Leonard)', '(as Barbara Grant)', '(as Barbarella)"", '[de]', 'quotes', '%6%', '%(%', '%f%', '%g%', 'm', '%h%', 'actor', '1901', '2012']",34,0.52990526,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Reri)', '(as Iulius Liptac)', '(as Ronald Rodger)', '(as Randy Roetman)"", '[ch]', 'quotes', '%r%', '%t%', '%o%', '%a%', 'm', '%s%', 'actor', '1988', '2014']",34,0.5596852,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Rudolfo Hoyos)', '(as Audra Smith)', '(as FaÃ¯za Kaddour)', '(as Joe Badalucco)"", '[nl]', 'tech info', '%t%', '%i%', '%2%', '%.%', 'm', '%e%', 'actor', '1920', '2017']",34,0.5295404,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Milky Diva)', '(as Hiroko Oogi)', '(as MiSt)', '(as Meaghan Davis)"", '[ch]', 'trivia', '%w%', '%t%', '%l%', '%J%', 'm', '%r%', 'actor', '1949', '2014']",34,0.56028295,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Christie)', '(-1996)', '(as Rosie & Carlos)', '(as O. Khromenkov)"", '[fi]', 'quotes', '%(%', '%(%', '%:%', '%t%', 'm', '%h%', 'actor', '1958', '2004']",34,0.55154955,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(young deaf girl)', '(creator) (1987)', '(as Rosu Benetto)', '(as Shabina Khan)"", '[at]', 'trivia', '%A%', '%2%', '%r%', '%o%', 'm', '%e%', 'actor', '1901', '1964']",34,0.55620086,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Illana Shoshan)', '(as Soon Teck-Oh)', '(as Ric New)', '(as Davedd Heitner)"", '[br]', 'trivia', '%a%', '%0%', ""%''%"", '%r%', 'm', '%f%', 'actor', '1941', '2013']",34,0.54697937,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(art & assets p.a.)', '(as k-os)', '(as Gloria Pires)', '(as Mattew Murphy)"", '[de]', 'plot', '%G%', '%r%', '%e%', '%p%', 'm', '%o%', 'actor', '1959', '1996']",34,0.54003036,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Delta)', '(as Su-Mei Jin)', '(as Ernie Clark)', '(as Joe Smith)"", '[us]', 'trivia', '%(%', '%V%', '%p%', '%r%', 'm', '%B%', 'actor', '1939', '2010']",34,0.54258376,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Harry Vallejo)', '(publicist: France)', '(as Lisl Handl)', '(senior advisor)"", '[ch]', 'quotes', '%r%', '%i%', ""%''%"", '%a%', 'm', '%n%', 'actor', '1887', '2015']",34,0.5341864,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Lucien Bratu)', '(as David Jones)', '(as Cuntre Loc)', '(as Richard Kline)"", '[de]', 'genres', '%i%', '%)%', '%e%', '%l%', 'm', '%o%', 'actor', '1952', '2008']",34,0.5335941,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(line tester)', '(as B. Eagle)', '(as Ted Melfi)', '(Silver Fox)"", '[ch]', 'quotes', '%0%', '%i%', '%b%', '%t%', 'm', '%D%', 'actor', '1993', '2018']",34,0.5401606,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Dale Butts)', '(as Yosef Shiloa)', '(as Eleanor Wild)', '(as Henry Sala)"", '[de]', 'certificates', '%r%', '%8%', '%1%', '%e%', 'm', '%n%', 'actor', '1958', '2014']",34,0.5392399,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(final editor: NPS)', '(as Gregg)', '(as Bob Conder)', '(as Dutch Lunak)"", '[sg]', 'quotes', '%r%', '%(%', '%d%', '%i%', 'm', '%e%', 'actor', '1998', '2013']",34,0.53466725,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Dave Frigerio)', '(as V. Pokrovsky)', '(as James Gaynes)', '(as Davide Tonelli)"", '[gb]', 'languages', '%)%', '%1%', '%p%', '%p%', 'm', '%l%', 'actor', '1888', '2015']",34,0.5440279,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Henrik Iversen)', '(as Hugo Barradas)', '(as William DeSeta)', '(as Fabian Conde)"", '[br]', 'quotes', '%r%', '%5%', '%r%', '%m%', 'm', '%w%', 'actor', '1966', '2012']",34,0.5487024,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(novel ""Rome Haul"")\', \'(as Carles Jover)\', \'(as Arch McDonell)\', \'(as Gwendolyn Roth)', '[de]', 'trivia', '%(%', '%(%', '%t%', '%p%', 'm', '%n%', 'actor', '1891', '1990']",34,0.5303793,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Doc Antle)', '(as Jernard Burkes)', '(1979-2001)', '(as Paul Hardmuth)"", '[sg]', 'trivia', '%2%', '%)%', ""%''%"", '%d%', 'm', '%e%', 'actor', '1908', '2018']",34,0.5384976,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(ranch owner)', '(lead screenwriter)', '(as Magda Pollak)', '(extra dialogue)"", '[fr]', 'runtimes', '%c%', '%1%', '%3%', '%3%', 'm', '%i%', 'actor', '1955', '2010']",34,0.5544314,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Herbert Yost)', '(as Clemens)', '(mountaineer)', '(as Chico Martinez)"", '[at]', 'trivia', '%)%', '%l%', '%e%', '%a%', 'm', '%n%', 'actor', '1898', '2015']",34,0.5575574,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Jennifer Kern)', '(for Best Story)', '(as Faith Stevens)', '(as Vickie Jo)"", '[sg]', 'trivia', '%t%', '%a%', '%y%', '%d%', 'm', '%e%', 'actor', '1916', '2010']",34,0.5352102,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(band - bass)', '(suggested by)', '(producer: Five)', '(as Wayne Cull)"", '[de]', 'trivia', '%(%', '%)%', '%t%', '%,%', 'm', '%y%', 'actor', '1935', '2008']",34,0.53574735,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Scott Alan)', '(as Jerry Epstein)', '(as Lax ''n'' Busto)', '(AKA Julie Morgan)"", '[us]', 'filming dates', '%2%', '%S%', '%8%', '%8%', 'm', '%n%', 'actor', '1978', '2013']",34,0.5271818,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Peitra Caston)', '(as Roxxxy Rush)', '(technical team)', '(as Hsiao-I Yeh)"", '[de]', 'genres', '%t%', '%(%', '%W%', '%a%', 'm', '%,%', 'actor', '1913', '1981']",34,0.5426058,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Jon Tams)', '(as Sanel Budlimic)', '(as James Howe)', '(as Goga)"", '[fi]', 'certificates', '%t%', '%r%', '%r%', '%s%', 'm', '%o%', 'actor', '1907', '1999']",34,0.5505422,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Sam Lemarquand)', '(host assistant)', '(as Pedja Jesic)', '(as J. Troyano)"", '[us]', 'color info', '%S%', '%0%', '%o%', '%o%', 'm', '%O%', 'actor', '1888', '2011']",34,0.5521714,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Reve)', '(as Zach Snygg)', '(as Hank Daniels)', '(as Dik-fai So)"", '[de]', 'certificates', '%(%', '%l%', '%i%', '%P%', 'm', '%f%', 'actor', '1888', '1996']",34,0.5348077,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Zanna Roberts)', '(subtitler) (2004)', '(as Robert Duncan)', '(as Aaron Noble)"", '[us]', 'plot', '%V%', '%(%', '%e%', '%t%', 'm', '%a%', 'actor', '1928', '1951']",34,0.5463425,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as A. Mikutenas)', '(as Julia Garro)', '(as Spagna)', '(as Julie Stoddard)"", '[ch]', 'quotes', '%n%', '%a%', '%s%', '%h%', 'm', '%h%', 'actor', '1913', '2008']",34,0.55602914,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Thi Dinh Hoang)', '(as Bob Arterburn)', '(as Richard Poston)', '(producer: EIF)"", '[fi]', 'countries', '%a%', '%l%', '%U%', '%S%', 'm', '%a%', 'actor', '1894', '1980']",34,0.5517784,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Esther Andre)', '(as Anil-Arun)', '(as Sam Burke)', '(suit fabricator)"", '[gb]', 'tech info', '%B%', '%l%', '%u%', '%e%', 'm', '%e%', 'actor', '1942', '2018']",34,0.5455043,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Rick Marlow)', '(harmony process)', '(crowd warmer)', '(master at arms)"", '[de]', 'quotes', '%t%', '%G%', '%I%', '%e%', 'm', '%t%', 'actor', '1908', '2001']",34,0.51809686,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(comic segments)', '(as Karl T. Pflock)', '(as J. Gec)', '(as James Baird)"", '[hu]', 'quotes', '%T%', '%T%', '%e%', '%l%', 'm', '%n%', 'actor', '1975', '2017']",34,0.5420832,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Dr John Nunn)', '(in ''Funny Girl'')', '(as Ken Warren)', '(honky handler)"", '[de]', 'countries', '%)%', '%)%', '%A%', '%A%', 'm', '%o%', 'actor', '1896', '2016']",34,0.532023,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Tore Svanerud)', '(letters)', '(as Nancy DeShon)', '(as Tony Ellis)"", '[us]', 'quotes', '%S%', '%(%', '%l%', '%e%', 'm', '%J%', 'actor', '1917', '1996']",34,0.53459203,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Daniel Epper)', '(as Israel Aduramo)', '(as Coach)', '(as Luke Wyatt)', '(as Cathy Evan)"", '[us]', 'certificates', '%(%', '%S%', '%A%', '%A%', 'm', '%n%', 'actor', '1938', '1997']",34,0.53822637,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(as Edmund Glibert)', '(story) (as Mura)', '(as Nick S. Woods)', '(as Goblin)"", '[us]', 'quotes', '%0%', '%D%', '%h%', '%n%', 'm', '%G%', 'actor', '1922', '2017']",34,0.5490493,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(unconfirmed)', '(as Horacio Lannes)', '(as Marc GarcÃ\xada)', '(as Shigeyuki Sato)', '(as Big Jon Fallus)"", '[us]', 'runtimes', '%(%', '%a%', '%1%', '%1%', 'm', '%l%', 'actor', '1888', '1910']",34,0.542357,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as AndrÃ© White)', '(The Burgomaster)', '(as Roy M. Hughes)', '(as Nina S. Matter)"", '[sg]', 'trivia', '%g%', '%e%', '%l%', '%e%', 'm', '%e%', 'actor', '1989', '2008']",34,0.55008405,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(unconfirmed)', '(as George Price)', '(as Ben Allanoff)', '(as Susie Nyby)', '(as Marko Lovas)"", '[us]', 'tech info', '%r%', '%)%', '%F%', '%m%', 'm', '%C%', 'actor', '1895', '1997']",34,0.5424822,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Chris Lloyd)', '(as F. Nikitin)', '(as Josh Lauri)', '(as Neil Burns)"", '[us]', 'taglines', '%S%', '%S%', '%f%', '%F%', 'm', '%l%', 'actor', '1928', '1958']",34,0.53169334,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(episode ""Hungary"")\', \'(key set runner)\', \'(as Nayab - Raja)\', \'( Italian Waiter )', '[de]', 'quotes', '%1%', '%a%', '%l%', '%:%', 'm', '%o%', 'actor', '1895', '2017']",34,0.54598093,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(as DJ Kid Capri)\', \'(as Vikram)\', \'(as Patrick Rieger)\', \'(play ""La Tosca"")', '[de]', 'quotes', '%(%', '%h%', '%e%', '%f%', 'm', '%e%', 'actor', '1913', '2004']",34,0.5407087,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Mualla Firat)', '(as Rose Gore)', '(as Bob Easton)', '(as Dan Zukovick)"", '[de]', 'novel', '%m%', '%e%', '%d%', '%g%', 'm', '%r%', 'actor', '1892', '1991']",34,0.5512513,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(ombudsman)', '(as ZaSu Pitts)', '(producer: inserts)', '(as Gabi Gubas)"", '[de]', 'quotes', '%a%', '%2%', '%e%', '%n%', 'm', '%,%', 'actor', '1931', '1969']",34,0.5617903,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Lore Moor)', '(main operator)', '(a cura di)', '(as Ashok Bantia)"", '[ch]', 'trivia', '%i%', '%(%', '%a%', '%e%', 'm', '%a%', 'actor', '1991', '2008']",34,0.5484572,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Doug Frost)', '(as A. Frausto)', '(as Syed Ali Rizvi)', '(as Miss Darling)"", '[nl]', 'release dates', '%l%', '%0%', '%u%', '%0%', 'm', '%e%', 'actor', '1977', '2017']",34,0.5457469,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Jaime Natche)', '(as Debbie Watling)', '(as Don LeMond)', '(as Deep Purple)"", '[at]', 'trivia', '%e%', '%r%', '%a%', '%b%', 'm', '%a%', 'actor', '1910', '1969']",34,0.5495167,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Rizwan)', '(as Dr. Tony Payan)', '(as Mitra Lohrasb)', '(misguidance)"", '[gb]', 'tech info', '%)%', '%)%', '%O%', '%m%', 'm', '%e%', 'actor', '1971', '2016']",34,0.5373018,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Jill Conner)', '(as Paco Aguilera)', '(lead scripter)', '(as Danni Nolan)"", '[us]', 'countries', '%(%', '%2%', '%S%', '%A%', 'm', '%K%', 'actor', '1906', '1965']",34,0.5514559,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Elin Jones AM)', '(stunt boater)', '(as Alistair Reid)', '(audience manager)"", '[at]', 'trivia', '%i%', '%t%', '%s%', '%J%', 'm', '%e%', 'actor', '1947', '2008']",34,0.55116886,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Al Salvani)', '(as Surendranath)', '(deckcam logger)', '(non-sexual)"", '[de]', 'copyright holder', '%i%', '%9%', '%s%', '%t%', 'm', '%a%', 'actor', '1956', '1983']",34,0.54564685,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Maria Pankau)', '(Yuuichiro''s wife)', '(as Neil McInven)', '(as Shayna Storm)"", '[nl]', 'quotes', '%(%', '%(%', '%a%', '%.%', 'm', '%a%', 'actor', '1928', '2010']",34,0.55231446,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Ralph Mauro)', '(as Tareena Patel)', '(as Adam Eichhorst)', '(as Vito Ansalone)"", '[es]', 'runtimes', '%a%', '%)%', '%3%', '%1%', 'm', '%e%', 'actor', '1967', '2010']",34,0.5559942,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Texas)', '(as Jim Newill)', '(as Judith Z)', '(epk: producer)"", '[br]', 'trivia', '%D%', '%l%', '%h%', '%e%', 'm', '%y%', 'actor', '1917', '2012']",34,0.5522758,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(voice)', '(as Vincent Kuk)', '(Guitar)', '(as Bertha Hart)', '(as Dora Ferreiro)"", '[us]', 'quotes', '%0%', '%D%', '%d%', '%t%', 'm', '%a%', 'actor', '1991', '2012']",34,0.5478145,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Wolf Lindner)', '(wolves trainer)', '(as Paty Shepard)', '(crowd coordinator)"", '[at]', 'trivia', '%h%', '%a%', '%s%', '%e%', 'm', '%t%', 'actor', '1934', '1991']",34,0.54250103,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Elsa Camarda)', '(as Nikki Allison)', '(as William Sloane)', '(as Anne SÃ©e)"", '[ch]', 'trivia', '%z%', '%n%', '%i%', '%o%', 'm', '%,%', 'actor', '1972', '2017']",34,0.5550545,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Willard Pugh)', '(as Lise Barto)', '(as Bert Rutteman)', '(age 20)"", '[us]', 'tech info', '%2%', '%1%', '%h%', '%c%', 'm', '%,%', 'actor', '1896', '2018']",34,0.5475607,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as St. Rev. Jen)', '(as Tamar Feinkind)', '(as Daysie)', '(short films)"", '[at]', 'certificates', '%(%', '%e%', '%5%', '%n%', 'm', '%q%', 'actor', '1918', '1984']",34,0.5414762,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(puppeteer #2)', '(as Harley Knowles)', '(as Misri Lal)', '(as Achim Grubel)"", '[fr]', 'tech info', '%e%', '%)%', '%t%', '%g%', 'm', '%,%', 'actor', '1930', '2014']",34,0.5356366,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(Lead Fireman)', '(as Cindy Lynn)', '(as Dr Chris McKay)', '(as Gabe)"", '[de]', 'trivia', '%G%', '%)%', '%e%', '%1%', 'm', '%k%', 'actor', '1933', '2014']",34,0.5534267,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(unconfirmed)', '(as Andrew R. Gill)', '(as Judy Blue)', '(developing)', '(talent relations)"", '[us]', 'genres', '%t%', '%t%', '%n%', '%o%', 'm', '%e%', 'actor', '1896', '2014']",34,0.55190885,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(U/5)', '(as Brandon Barre)', '(as Lidi Lisboa)', '(as Corina May)"", '[us]', 'tech info', '%r%', '%t%', '%m%', '%F%', 'm', '%n%', 'actor', '1894', '2001']",34,0.5372362,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Shant Bejanian)', '(as Floriana Nucci)', '(as Xavier Maza)', '(as Faye Griffin)"", '[us]', 'alternate versions', '%3%', '%3%', '%o%', '%i%', 'm', '%k%', 'actor', '1910', '1976']",34,0.5526717,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as MÃ¡rio ferro)', '(as James Lydon)', '(as Mie Nemoto)', '(as Erin Hicock)"", '[de]', 'printed media reviews', '%(%', '%i%', '%6%', '%i%', 'm', '%t%', 'actor', '1949', '1970']",34,0.5315698,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(uncredited)\', \'(as Sanjay Sankala)\', \'(as Greta Antoine)\', \'(as Anne Carroll)\', \'(segment ""SIDA"")', '[us]', 'release dates', '%V%', '%V%', '%2%', '%1%', 'm', '%m%', 'actor', '1932', '2017']",34,0.5370701,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"['(as Jeff Dashnaw)\', \'(as Katie Hawkins)\', \'(as Kassey)\', \'(play ""Dora"")\', \'(writer) (1952)', '[ch]', 'quotes', '%i%', '%(%', '%a%', '%e%', 'm', '%r%', 'actor', '1953', '2010']",34,0.56244874,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Alba Mesa)', '(producer: chapman)', '(as Sanae Toda)', '(as Eddie Hodson)"", '[fr]', 'tech info', '%c%', '%1%', '%M%', '%m%', 'm', '%n%', 'actor', '1962', '2015']",34,0.53853655,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Miriam Diop)', '(Police Detective)', '(as Billy Kipp)', '(as Harkan Dan)"", '[br]', 'trivia', '%a%', '%a%', '%s%', '%l%', 'm', '%r%', 'actor', '1965', '2012']",34,0.5495165,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Srinivas K.)', '(as Luise Bennett)', '(as Terri Garr)', '(as Travis Nester)"", '[at]', 'trivia', '%l%', '%i%', '%n%', '%.%', 'm', '%F%', 'actor', '1939', '1976']",34,0.54473114,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Hugo Esquinca)', '(as C. Kock)', '(as GisÃ¨le Frery)', '(tour assistant)"", '[at]', 'genres', '%c%', '%a%', '%m%', '%D%', 'm', '%,%', 'actor', '1946', '1984']",34,0.55491483,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Michael Arnold)', '(as Ron House)', '(as Coutet)', '(as Shina)"", '[sg]', 'quotes', '%a%', '%S%', '%v%', '%k%', 'm', '%n%', 'actor', '1969', '2013']",34,0.52869123,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as YÃ»ki Kawakami)', '(as Susan Cheung)', '(as Joel J. Kramer)', '(as Douglas Cuomo)"", '[de]', 'certificates', '%n%', '%a%', '%:%', '%d%', 'm', '%l%', 'actor', '1934', '2003']",34,0.5454808,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(as Jeff Dashnaw)', '(as Fatima)', '(as Pat Johnson)', '(as Sonia Segal)', '(as D.I.P. Project)"", '[ch]', 'trivia', '%a%', '%e%', '%h%', '%s%', 'm', '%J%', 'actor', '1972', '2006']",34,0.54602474,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(since 2002)', '(as Maggie Lynsky)', '(as Ben Granger)', '(as Jack Campbell)"", '[gb]', 'tech info', '%)%', '%)%', '%:%', '%2%', 'm', '%g%', 'actor', '2001', '2016']",34,0.5331384,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Ruth Golden)', '(as Curt CondÃ©)', '(as Dupe Jayesinmi)', '(MPEG compression)"", '[us]', 'tech info', '%)%', '%(%', '%O%', '%3%', 'm', '%e%', 'actor', '1887', '1963']",34,0.5424777,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Vanna)', '(1979-????)', '(user testing lead)', '(2005-2013)"", '[hu]', 'locations', '%)%', '%n%', '%C%', '%N%', 'm', '%o%', 'actor', '1983', '2014']",34,0.5551914,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Barry McCollum)', '(as Sybyl Lewis)', '(as B. Bachurin)', '(voice) (as Hbi2k)"", '[us]', 'color info', '%)%', '%(%', '%t%', '%a%', 'm', '%k%', 'actor', '1898', '1975']",34,0.5407463,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(ship profiles)', '(as U. Lombardi)', '(as Julia Adams)', '(as A.M. Mallett)"", '[de]', 'quotes', '%t%', '%a%', '%n%', '%s%', 'm', '%e%', 'actor', '1927', '2001']",34,0.5500031,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
0,"[""(uncredited)', '(as Anny Duperrey)', '(as Bill Neenan)', '(pervert)', '(as Sophia Lomeli)"", '[at]', 'plot', '%t%', '%(%', '%n%', '%t%', 'm', '%n%', 'actor', '1913', '2000']",34,0.53742975,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t random_title_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexOnlyScan(an person_id_aka_name_random_1) IndexScan(rt random_role_type_1_pkey) IndexOnlyScan(chn random_char_name_1_pkey) IndexScan(n random_name_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it random_info_type_1_pkey) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci an) NestLoop(mc cn t ci an rt) NestLoop(mc cn t ci an rt chn) NestLoop(mc cn t ci an rt chn n) NestLoop(mc cn t ci an rt chn n mi) NestLoop(mc cn t ci an rt chn n mi it) Leading((((((((((mc cn) t) ci) an) rt) chn) n) mi) it)) */
