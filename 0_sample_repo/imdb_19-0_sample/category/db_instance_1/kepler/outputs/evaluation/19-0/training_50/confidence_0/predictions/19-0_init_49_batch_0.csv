iteration,params,plan_id,confidence,plan_content
0,"[""(uncredited)', '(Dee Vasquez)', '(as Arturo Moran)', '(as Jade Marx)', '(costume chief)"", '[us]', 'trivia', '%l%', '%2%', '%u%', '%s%', 'm', '%l%', 'actor', '1937', '1980']",384,0.50065386,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Mrs. La Varnie)', '(animal services)', '(as Anne Randall)', '(as Carol Schlecht)"", '[us]', 'release dates', '%y%', '%)%', '%l%', '%v%', 'm', '%r%', 'actor', '1933', '2012']",384,0.51889074,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Ravi Shankar)\', \'(as RocÃ\xado Freixe)\', \'(novel ""Law Man"")\', \'(vocal coach)', '[us]', 'alternate versions', '%a%', '%(%', '%y%', '%r%', 'm', '%l%', 'actor', '1929', '1983']",384,0.5124967,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Raul Merced)', '(cheese consultant)', '(as Lalita Powar)', '(legal: music)"", '[us]', 'release dates', '%e%', '%i%', '%2%', '%d%', 'm', '%m%', 'actor', '1964', '2010']",384,0.51325524,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Kevin Blair)', '(as Sammy Fry)', '(as Hal Moore)', '(as Tony Zita)"", '[fi]', 'goofs', '%)%', '%l%', '%h%', '%K%', 'm', '%F%', 'actor', '1947', '1990']",384,0.51855,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Sammy Chow)', '(as Teddy Li)', '(as I. Sokolovskiy)', '(as Tin Kaiman)"", '[fi]', 'quotes', '%(%', '%F%', '%z%', '%h%', 'm', '%R%', 'actor', '1900', '2010']",384,0.5207447,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Wong Yat Ping)', '(as Stefan Verne)', '(as Jo Marie Ward)', '(as Doug Hamilton)"", '[us]', 'sound mix', '%t%', '%i%', '%T%', '%T%', 'm', '%m%', 'actor', '1931', '2016']",384,0.5015282,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as ZoÃ© Trope)', '(as R. Kurkina)', '(as Pick & Pat)', '(as Dan Ronin)"", '[us]', 'trivia', '%(%', '%n%', '%o%', '%t%', 'm', '%E%', 'actor', '1931', '1995']",384,0.5106299,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as John Rousaris)', '(as Nick Terry)', '(as Manuel Caro)', '(as Liza Moreno)"", '[nl]', 'certificates', '%3%', '%1%', '%:%', '%a%', 'm', '%J%', 'actor', '1909', '1955']",384,0.51576024,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Bea)', '(adr talent)', '(as Bhanu Mati)', '(as Jack C. Huang)"", '[de]', 'quotes', '%e%', '%0%', '%p%', '%?%', 'm', '%o%', 'actor', '1958', '2009']",384,0.5115097,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Lili Boulogne)', '(as Henneley)', '(as Jeffrey Levine)', '(as Sasha Lebedev)"", '[fi]', 'goofs', '%1%', '%(%', '%h%', '%t%', 'm', '%e%', 'actor', '1944', '1962']",384,0.51957464,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Robert Burns)', '(as PÃ¡ll PÃ¡lsson)', '(as V. Chekmaryev)', '(as Daniel Orskes)"", '[us]', 'locations', '%n%', '%t%', '%U%', '%e%', 'm', '%m%', 'actor', '2003', '2009']",384,0.49914917,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Paul Simmion)', '(as Chris Hansen)', '(as Patt Parker)', '(studio secretary)"", '[us]', 'trivia', '%1%', '%a%', '%t%', '%s%', 'm', '%l%', 'actor', '1907', '1983']",384,0.5137913,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(Episode #9)', '(as Sam CupÃ¡e)', '(21 Club Greeter)', '(as Jeff Balinski)"", '[nl]', 'budget', '%t%', '%t%', '%0%', '%5%', 'm', '%,%', 'actor', '1901', '1964']",384,0.51290375,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(as James M. King)\', \'(as Richard Lair)\', \'(novel ""The Dream"")\', \'(as Marta Roth)\', \'(caravan)', '[us]', 'tech info', '%e%', '%u%', '%R%', '%:%', 'm', '%g%', 'actor', '1949', '2011']",384,0.50012535,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Todd Mooney)', '(as Gloria Rudolf)', '(as V. Shalevich)', '(as Alex Barrios)"", '[us]', 'tech info', '%n%', '%)%', '%:%', '%M%', 'm', '%y%', 'actor', '1967', '2015']",384,0.52049905,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Marco BretÃ³n)', '(as Joe Dowling)', '(project leader)', '(as Brian Carlson)"", '[us]', 'trivia', '%)%', '%0%', '%y%', '%l%', 'm', '%w%', 'actor', '1900', '2020']",384,0.5148935,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Nadezhda Kail)', '(as Giorgio Rossi)', '(end titles theme)', '(as A. Barushnoy)"", '[ca]', 'countries', '%a%', '%(%', '%A%', '%S%', 'm', '%W%', 'actor', '1931', '1998']",384,0.5169134,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as TetsurÃ´ Tamba)', '(as Robia La Morte)', '(as Teddi Moore)', '(as Jack Chute)"", '[nl]', 'color info', '%m%', '%9%', '%r%', '%o%', 'm', '%n%', 'actor', '1888', '2002']",384,0.50832987,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Bachan Pachera)', '(as James Kleeman)', '(as Surinder Sodhi)', '(as Sasha Prodan)"", '[us]', 'release dates', '%d%', '%d%', '%w%', '%t%', 'm', '%y%', 'actor', '1945', '2009']",384,0.49890366,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Duane BouttÃ©)', '(as M. Galkin)', '(as Angel Caprice)', '(as Zaheer)"", '[us]', 'locations', '%n%', '%u%', '%t%', '%r%', 'm', '%,%', 'actor', '1952', '2009']",384,0.4941554,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Shannon Walsh)', '(firearms)', '(Veterinario)', '(as Frankie Nasso)"", '[us]', 'release dates', '%)%', '%U%', '%c%', '%5%', 'm', '%n%', 'actor', '1907', '1967']",384,0.51142275,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(""Earth"")\', \'(as Ciprian Gilles)\', \'(stand-in: R. Lowe)\', \'(Michael\'\'s Son)', '[us]', 'release dates', '%S%', '%(%', '%1%', '%o%', 'm', '%,%', 'actor', '1929', '2002']",384,0.5000223,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(diving engineer)', '(rushes contact)', '(telefon operator)', '(Shaw)"", '[fi]', 'quotes', '%)%', '%H%', '%a%', '%y%', 'm', '%y%', 'actor', '1968', '2008']",384,0.52509886,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Zell Covington)', '(voice: US version)', '(Luisa)', '(as James Hilbun)"", '[nl]', 'alternate versions', '%)%', '%r%', '%o%', '%t%', 'm', '%i%', 'actor', '1891', '2020']",384,0.5096019,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(voice) (uncredited)\', \'(segment ""Bone"")\', \'(Boss 2)\', \'(as Sonja Clifton)\', \'(as Lu Yang)', '[de]', 'quotes', '%0%', '%t%', '%y%', '%w%', 'm', '%o%', 'actor', '1920', '2011']",384,0.5131126,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Ed Lewis)', '(as Bela Karolyi)', '(as Miguel Deeney)', '(as Hoyt Smith)"", '[us]', 'trivia', '%r%', '%6%', '%.%', '%H%', 'm', '%i%', 'actor', '1916', '2019']",384,0.52522844,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Tonia Dimou)', '(as Gianni Glori)', '(as Roscoe DeSpain)', '(as Teo Corban)"", '[us]', 'release dates', '%V%', '%(%', '%c%', '%e%', 'm', '%l%', 'actor', '1905', '1961']",384,0.4919729,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Rajinder Nath)', '(as Phil Cahn)', '(Dan''s sister)', '(leader)"", '[us]', 'color info', '%)%', '%A%', '%o%', '%o%', 'm', '%i%', 'actor', '1932', '2012']",384,0.5260046,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Bartha JÃ¡nos)', '(assistant: DIT)', '(as Lil Bob McCall)', '(as Bjorn Piron)"", '[us]', 'locations', '%n%', '%i%', '%S%', '%h%', 'm', '%m%', 'actor', '1891', '2015']",384,0.51791537,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Jules KrÃ¼ger)', '(as ArtÃ\xadz Gener)', '(as Lise Brial)', '(as Dimitri Bitenc)"", '[nl]', 'tech info', '%(%', '%(%', '%3%', '%P%', 'm', '%j%', 'actor', '1965', '2015']",384,0.50231993,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Tommy Born)', '(as Yuliis Ruval)', '(as Rose M. Abdoo)', '(Dead)"", '[us]', 'goofs', '%l%', '%t%', '%p%', '%o%', 'm', '%e%', 'actor', '1934', '1989']",384,0.5147332,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(voice) (uncredited)\', \'(as Jorg Fockele)\', \'(as Michael Dayton)\', \'(story ""Klin"")\', \'(as Matt Saldivar)', '[fi]', 'quotes', '%4%', '%D%', '%y%', '%l%', 'm', '%d%', 'actor', '1933', '2011']",384,0.51792383,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Volodya Savin)', '(as Anthony Meyer)', '(as Roy D''arcy)', '(as Giblets)"", '[us]', 'locations', '%(%', '%d%', '%S%', '%A%', 'm', '%n%', 'actor', '1891', '2008']",384,0.501953,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Ferrara)', '(as Stephen Day)', '(as Josmar)', '(as Zion Baruch)"", '[us]', 'release dates', '%n%', '%d%', '%0%', '%i%', 'm', '%m%', 'actor', '1934', '2015']",384,0.51091826,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Brian Schaefer)', '(as Kayla Keatley)', '(as Jeremy Shern)', '(as Matthew Yuan)"", '[us]', 'release dates', '%o%', '%g%', '%m%', '%e%', 'm', '%B%', 'actor', '1918', '1968']",384,0.522966,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Raj Kishor)', '(as Eric Neve)', '(Ecologist)', '(9.)"", '[fi]', 'quotes', '%i%', '%0%', '%r%', '%i%', 'm', '%n%', 'actor', '1956', '2015']",384,0.49988464,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Jess De Gouw)', '(as Cesar Burgos)', '(as James Christy)', '(as Theresa Sheer)"", '[fi]', 'goofs', '%l%', '%)%', '%n%', '%u%', 'm', '%u%', 'actor', '1927', '1968']",384,0.50183606,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Michael Gates)', '(as Rob Reimer)', '(as Lazaro Perez)', '(as Rajiv Grover)"", '[us]', 'goofs', '%a%', '%t%', '%a%', '%r%', 'm', '%m%', 'actor', '1951', '1967']",384,0.5118581,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(Beulah Bass)', '(as Tory Maurer)', '(as Bob Osborne)', '(as Edward Zammit)"", '[fi]', 'quotes', '%(%', '%V%', '%a%', '%e%', 'm', '%R%', 'actor', '1897', '2011']",384,0.51198876,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Martin Slipack)', '(BCI Banker)', '(as Shawna Riley)', '(as Greg Pace)"", '[us]', 'trivia', '%1%', '%r%', '%Y%', '%d%', 'm', '%i%', 'actor', '1947', '1981']",384,0.500762,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Sophie Pycroft)', '(as Esther Vazquez)', '(as JirÃ\xad Krejcik)', '(Pablo''s Rider)"", '[us]', 'taglines', '%1%', '%(%', '%i%', '%n%', 'm', '%r%', 'actor', '1895', '1967']",384,0.50730634,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(triffid puppeteer)', '(as Ashley Potts)', '(as Chris Simpson)', '(labor coordinator)"", '[us]', 'quotes', '%D%', '%)%', '%s%', '%t%', 'm', '%i%', 'actor', '1902', '2011']",384,0.50375307,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Dee Plakas)', '(general)', '(as Wolfgang Hofer)', '(as Marisa Stober)"", '[fi]', 'quotes', '%(%', '%(%', '%n%', '%""%', 'm', '%y%', 'actor', '1917', '2012']",384,0.512292,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Leopold Silos)', '(photoballerism)', '(as Andrea Renda)', '(as Gloria Brown)"", '[nl]', 'LD sound encoding', '%a%', '%i%', '%a%', '%t%', 'm', '%l%', 'actor', '1923', '1940']",384,0.512163,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(lead stand in)', '(field researcher)', '(as Giorgos Palios)', '(as Sidney Kearns)"", '[us]', 'alternate versions', '%(%', '%l%', '%e%', '%(%', 'm', '%l%', 'actor', '1905', '2020']",384,0.5061323,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(nÂ°1005/1988)\', \'(as Sherry Cloth)\', \'(novel ""Moths"")\', \'(as Gudrun Rammler)', '[us]', 'tech info', '%C%', '%1%', '%c%', '%c%', 'm', '%B%', 'actor', '1945', '1991']",384,0.5123207,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Marco)', '(as Hans W. Pemmer)', '(as JP Marston)', '(as Tajia Rae)"", '[nl]', 'certificates', '%n%', '%N%', '%W%', '%n%', 'm', '%n%', 'actor', '1964', '2011']",384,0.5043996,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Himaliya Wala)', '(as Vojta Jasny)', '(as Fanny Gonties)', '(as Pat Becket)"", '[ca]', 'quotes', '%a%', '%4%', '%:%', '%o%', 'm', '%d%', 'actor', '1963', '2011']",384,0.5058118,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(computer playback)', '(as Toi Svane)', '(as George DeVries)', '(as Julien St. Jox)"", '[us]', 'release dates', '%e%', '%r%', '%I%', '%0%', 'm', '%K%', 'actor', '1910', '2012']",384,0.5082134,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(talent buyer)', '(as Eivind Harum)', '(as Premee)', '(as Susie Vernon)"", '[us]', 'certificates', '%0%', '%)%', '%e%', '%n%', 'm', '%J%', 'actor', '1896', '1997']",384,0.5015642,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Niels Hansen)', '(young man)', '(broadcast rf)', '(as Robert Page)"", '[us]', 'release dates', '%)%', '%c%', '%a%', '%2%', 'm', '%,%', 'actor', '1910', '2008']",384,0.49187002,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Shamar Drew)\', \'(segment ""Oh G!"")\', \'(as Zeus Quijano)\', \'(as Baobao Feng)', '[us]', 'locations', '%n%', '%(%', '%i%', '%S%', 'm', '%,%', 'actor', '1922', '1983']",384,0.4949391,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(anda delegate)', '(as Yelena Petrova)', '(as Ginger Griep)', '(as Martha Milan)"", '[us]', 'release dates', '%e%', '%d%', '%A%', '%7%', 'm', '%g%', 'actor', '1956', '2014']",384,0.511648,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Steve Tannen)', '(as Ellen Woodston)', '(tank technician)', '(as Anja Sovagovic)"", '[us]', 'budget', '%r%', '%2%', '%$%', '%0%', 'm', '%B%', 'actor', '1953', '2015']",384,0.5120784,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Wiliam Carroll)\', \'(Raghav)\', \'(as Vic Belano)\', \'(stand-in: ""Joe"")', '[us]', 'locations', '%)%', '%(%', '%a%', '%,%', 'm', '%r%', 'actor', '1902', '1959']",384,0.49180335,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Selma GÃ¼neri)', '(as S. Borodokin)', '(as Greenstreet)', '(as Angel Satre)"", '[us]', 'locations', '%d%', '%r%', '%k%', '%Y%', 'm', '%m%', 'actor', '1928', '2015']",384,0.51713693,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Dieter Cole)', '(as Erich Onasch)', '(as Kriti Pant)', '(as V. Kupcha)"", '[ca]', 'quotes', '%a%', '%2%', '%y%', '%D%', 'm', '%n%', 'actor', '1906', '2017']",384,0.49057955,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Simon Valcroze)', '(as Roberto Spriu)', '(as Peter Taite)', '(as Rudy Adams)"", '[us]', 'copyright holder', '%(%', '%B%', '%i%', '%u%', 'm', '%l%', 'actor', '1908', '1972']",384,0.50640446,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Shriman Partha)', '(as Joy Narayan)', '(as Edwin Roseman)', '(as Jessica R.p.)"", '[de]', 'quotes', '%a%', '%r%', '%a%', '%:%', 'm', '%r%', 'actor', '2000', '2017']",384,0.4854536,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Jose Sola)', '(as Baboo Rao)', '(as Lalo Pabano)', '(crianÃ§a 1)"", '[us]', 'locations', '%c%', '%(%', '%s%', '%,%', 'm', '%i%', 'actor', '1999', '2007']",384,0.5089253,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(guardrobe)', '(as Lucille Ewing)', '(as ThÃ©o Meurisse)', '(as Chang Leih)"", '[fi]', 'quotes', '%i%', '%)%', '%h%', '%.%', 'm', '%B%', 'actor', '1911', '2014']",384,0.5174889,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Ivar Kantz)', '(as Esther Oldham)', '(as Avent Christie)', '(as Eddie Mann)"", '[us]', 'tech info', '%)%', '%(%', '%A%', '%.%', 'm', '%l%', 'actor', '1890', '1961']",384,0.52156806,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Noro Ejaita)', '(as Jankidass)', '(as Dan Zanghi)', '(as P. Morskoi)"", '[us]', 'release dates', '%e%', '%n%', '%1%', '%l%', 'm', '%g%', 'actor', '1906', '2013']",384,0.50525194,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Alex Wells)', '(as Michael Weeks)', '(as Bhupinder)', '(executive: CBC)"", '[us]', 'budget', '%)%', '%6%', '%0%', '%0%', 'm', '%l%', 'actor', '1917', '1974']",384,0.5181208,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(the poet)', '(as Zhongwen Zhang)', '(as Angela Herrera)', '(as Gabrielle West)"", '[us]', 'locations', '%(%', '%n%', '%u%', '%S%', 'm', '%J%', 'actor', '1999', '2016']",384,0.50298226,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Jorge Fegan)', '(as H. Asmus)', '(Agathon)', '(as Saget)"", '[us]', 'languages', '%g%', '%)%', '%s%', '%h%', 'm', '%n%', 'actor', '1910', '1963']",384,0.50082517,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Dejean)', '(as Wong Long Ki)', '(as Dondon Aligaya)', '(as Brenda Hale)"", '[nl]', 'printed media reviews', '%e%', '%e%', '%s%', '%a%', 'm', '%A%', 'actor', '1916', '1958']",384,0.4987123,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Jill Martin)', '(as Pepe Aguilar)', '(''CT'')', '(as Cesc Candini)"", '[us]', 'tech info', '%e%', '%n%', '%b%', '%a%', 'm', '%m%', 'actor', '1934', '2019']",384,0.5179242,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Zoe McConnel)', '(as Louie Moreno)', '(as Tang Kung Jen)', '(caterer: Rajkamal)"", '[gb]', 'quotes', '%)%', '%c%', '%a%', '%l%', 'm', '%y%', 'actor', '1992', '2017']",384,0.49918652,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Natalie Iwanow)', '(as W. Semitjov)', '(as Angelo Montano)', '(as Henry Goddard)"", '[us]', 'release dates', '%)%', '%D%', '%:%', '%g%', 'm', '%,%', 'actor', '1941', '1976']",384,0.5119537,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Helan)', '(as Puneet Ishar)', '(as Sandra Luna)', '(as Jaylin)"", '[nl]', 'LD number of sides', '%i%', '%h%', '%4%', '%4%', 'm', '%e%', 'actor', '1918', '1936']",384,0.5081855,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Pablo Garcia)', '(as Ko Chun-Kit)', '(as Chris Ayista)', '(''Misery'')"", '[us]', 'release dates', '%u%', '%(%', '%9%', '%U%', 'm', '%i%', 'actor', '1924', '1966']",384,0.50602746,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Lefebvre-Bell)', '(as Tom Lee Jones)', '(as MÃ³nica Randel)', '(as Sophie Engelke)"", '[us]', 'locations', '%r%', '%r%', '%e%', '%N%', 'm', '%i%', 'actor', '1985', '2019']",384,0.5120532,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Kaburi)', '(oscr operator)', '(worm farmer)', '(as Vithal Banker)"", '[us]', 'trivia', '%U%', '%r%', '%r%', '%e%', 'm', '%n%', 'actor', '1948', '1973']",384,0.48833853,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Kenneth Garcia)', '(as Greta Schmid)', '(Morse''s sister)', '(SABC News Report)"", '[nl]', 'tech info', '%S%', '%(%', '%3%', '%O%', 'm', '%j%', 'actor', '1894', '2016']",384,0.5066151,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(Robin)', '(as Zodia Mclean)', '(as Tim Carhart)', '(as Z. Sheineman)"", '[nl]', 'genres', '%d%', '%1%', '%e%', '%C%', 'm', '%i%', 'actor', '1928', '2002']",384,0.5118278,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(as James M. King)\', \'(security: U.S.)\', \'(as Archie Hall)\', \'(segment 1 ""Enoch"")\', \'(as Hugo Baron)', '[us]', 'release dates', '%i%', '%r%', '%J%', '%u%', 'm', '%n%', 'actor', '1961', '2008']",384,0.49053147,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Glen Pruett)', '(lead developer)', '(neighbor girl)', '(as Nick Yardley)"", '[fi]', 'quotes', '%2%', '%l%', '%n%', '%d%', 'm', '%o%', 'actor', '1948', '2012']",384,0.5163173,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as RenÃ©e Sanz)', '(as Julio Braga)', '(as Sadique)', '(as Jean Sylvere)"", '[us]', 'trivia', '%(%', '%1%', '%l%', '%f%', 'm', '%E%', 'actor', '1918', '2002']",384,0.5109318,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Eralp HÃ¼seyin)', '(as Mahesh Kanwal)', '(as Chie Sawaguchi)', '(as Fadi Abi Samra)"", '[us]', 'release dates', '%(%', '%V%', '%9%', '%M%', 'm', '%n%', 'actor', '1915', '1960']",384,0.51282173,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as William Wenkle)', '(risk manager)', '(Filmmaker)', '(as James Lipetsky)"", '[us]', 'trivia', '%1%', '%)%', '%t%', '%n%', 'm', '%B%', 'actor', '1904', '1997']",384,0.51949775,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Rie Matsubara)', '(as Ken Matsumori)', '(as Lew Cooper)', '(as Josh Tickell)"", '[us]', 'release dates', '%n%', '%i%', '%i%', '%A%', 'm', '%n%', 'actor', '1939', '2011']",384,0.5013656,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(director: USA)', '(as Cupid Morgan)', '(as Ayumu Tokito)', '(as B. Aar Ishara)"", '[us]', 'release dates', '%1%', '%u%', '%e%', '%1%', 'm', '%n%', 'actor', '1898', '2005']",384,0.5047001,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Alexey Uchitel)\', \'(as Donald Galaher)\', \'(as Titus Poutanen)\', \'(""Yanagi"")', '[fi]', 'alternate versions', '%(%', '%)%', '%m%', '%s%', 'm', '%a%', 'actor', '1920', '1957']",384,0.5012342,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(lead screenwriter)', '(as Davidelfin)', '(as Kineret Hai)', '(making of: Turkey)"", '[us]', 'adaption', '%0%', '%S%', '%i%', '%1%', 'm', '%,%', 'actor', '1955', '1960']",384,0.52375025,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Sinisa Sraga)', '(The Phantom Rider)', '(75 years old)', '(as James Shanahan)"", '[us]', 'budget', '%V%', '%n%', '%0%', '%0%', 'm', '%l%', 'actor', '1913', '1986']",384,0.5160544,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as A.Licitis)', '(as Christain Kila)', '(as Jr. Mahmood)', '(as Razan)"", '[fi]', 'goofs', '%(%', '%h%', '%m%', '%c%', 'm', '%r%', 'actor', '1926', '1985']",384,0.5106845,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(la triste)', '(floor runner)', '(Pegamento)', '(as Teli Stalone)"", '[gb]', 'quotes', '%e%', '%n%', '%]%', '%o%', 'm', '%o%', 'actor', '1938', '2011']",384,0.5051694,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(on radio)', '(as Penny Ashcroft)', '(shipping services)', '(as Russell Hardy)"", '[us]', 'release dates', '%A%', '%i%', '%i%', '%1%', 'm', '%n%', 'actor', '1901', '1992']",384,0.5024706,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Madhu Achrya)', '(as Savita)', '(as Ben Taylor)', '(Don Atanasio)"", '[nl]', 'runtimes', '%9%', '%1%', '%8%', '%8%', 'm', '%F%', 'actor', '1914', '2011']",384,0.5032368,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as George Siougas)', '(as Andrew George)', '(as Mike Pavone)', '(as Greg Brazzel)"", '[us]', 'trivia', '%(%', '%C%', '%e%', '%s%', 'm', '%r%', 'actor', '1914', '1982']",384,0.50070715,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Maire Karila)', '(Thailand unit)', '(as Liquid)', '(Benny)"", '[de]', 'quotes', '%(%', '%)%', '%f%', '%h%', 'm', '%n%', 'actor', '1903', '2010']",384,0.50995594,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as David Barnes)', '(as Conrad Corral)', '(as Ratanmala)', '(as Vijay Bhatodia)"", '[us]', 'locations', '%V%', '%i%', '%n%', '%i%', 'm', '%i%', 'actor', '1931', '1964']",384,0.5101609,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as A. Hossein)', '(basic story)', '(as Hanne Kuyt)', '(as Whong In Sik)"", '[us]', 'release dates', '%r%', '%d%', '%0%', '%0%', 'm', '%,%', 'actor', '1925', '2015']",384,0.5226056,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Jay-M Perillo)', '(as Rao Gopal Rao)', '(as GB Sampedro)', '(as Cobra)"", '[nl]', 'release dates', '%(%', '%F%', '%1%', '%t%', 'm', '%h%', 'actor', '1901', '2010']",384,0.50624824,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as C. Cron)', '(as Lee Whey)', '(Man in Wheelchair)', '(as Alex Diamond)"", '[us]', 'tech info', '%D%', '%(%', '%T%', '%e%', 'm', '%i%', 'actor', '1907', '2003']",384,0.513447,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(Nancy)', '(as J.R. Zdvorak)', '(1970 version)', '(as AndrÃ© Colbert)"", '[us]', 'locations', '%e%', '%e%', '%o%', '%d%', 'm', '%m%', 'actor', '1911', '2007']",384,0.52247566,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as JÃ¤ppi)', '(as Bill Martins)', '(as Gordon Downie)', '(as Peter Smyth)"", '[us]', 'runtimes', '%)%', '%)%', '%9%', '%1%', 'm', '%l%', 'actor', '1896', '2011']",384,0.5212333,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(security sergeant)', '(as Dick Klinger)', '(as D. Balkovic)', '(as William Mahr)"", '[us]', 'copyright holder', '%S%', '%(%', '%a%', '%i%', 'm', '%r%', 'actor', '1957', '2016']",384,0.49598715,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Parks Jones)', '(as Antoine)', '(as Eric Sharkey)', '(as Von Vibar)"", '[us]', 'release dates', '%1%', '%)%', '%e%', '%t%', 'm', '%B%', 'actor', '1904', '1990']",384,0.5184015,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(Girl at Oak Park)', '(as Luca Cortese)', '(as Sofa Basirzada)', '(as Chin Tong Mai)"", '[us]', 'quotes', '%D%', '%a%', '%t%', '%i%', 'm', '%E%', 'actor', '1913', '1998']",384,0.50410783,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Joey Travolta)', '(as D.Velasquez)', '(as Nabeela)', '(as Mark Ranger)"", '[us]', 'sound mix', '%c%', '%i%', '%D%', '%D%', 'm', '%y%', 'actor', '1899', '2016']",384,0.49671587,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Lee Brown)', '(as Mehdi)', '(as Raoul Gelsini)', '(as Trever Hopper)"", '[nl]', 'sound mix', '%?%', '%L%', '%o%', '%l%', 'm', '%o%', 'actor', '1947', '2019']",384,0.5097672,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Gerry Briceno)', '(as Veerinder)', '(as Hamilton)', '(as Prasad Babu)"", '[us]', 'quotes', '%1%', '%(%', '%e%', '%r%', 'm', '%w%', 'actor', '1931', '1978']",384,0.5124412,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Dave Fordham)', '(as Jack Gorman)', '(as N.T.G.)', '(as Arron Gage)"", '[us]', 'tech info', '%)%', '%1%', '%P%', '%5%', 'm', '%i%', 'actor', '1944', '1978']",384,0.52615625,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(Bad Man)', '(as D. Batuyev)', '(as Pete Sarimo)', '(as Piin Huah Lii)"", '[nl]', 'languages', '%n%', '%i%', '%i%', '%g%', 'm', '%i%', 'actor', '1919', '1995']",384,0.525365,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(hi-con processing)', '(as Ken Apache)', '(as William Platt)', '(stand-in: Sickan)"", '[us]', 'locations', '%e%', '%u%', '%Y%', '%Y%', 'm', '%m%', 'actor', '1940', '2007']",384,0.499987,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Myra Stennet)', '(as Roeland Radier)', '(as Vera Illesu)', '(as The Crickets)"", '[us]', 'trivia', '%a%', '%2%', '%r%', '%e%', 'm', '%,%', 'actor', '1917', '1980']",384,0.5062029,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Lolo Navarro)', '(as Dante D''Paulo)', '(as Twyla Volkins)', '(as Jacas)"", '[ca]', 'quotes', '%C%', '%0%', '%h%', '%o%', 'm', '%y%', 'actor', '2001', '2007']",384,0.5161396,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Hallal Sahbi)', '(as Eta Bartolazzi)', '(as Eve Fizz)', '(as Lai Xi)"", '[nl]', 'certificates', '%a%', '%L%', '%w%', '%N%', 'm', '%j%', 'actor', '1958', '1992']",384,0.5017854,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(play ''Die Ratten'')', '(as Deepraz Rana)', '(as Marthe Mellot)', '(co-story writer)"", '[gb]', 'quotes', '%e%', '%a%', '%g%', '%t%', 'm', '%o%', 'actor', '1985', '2009']",384,0.4969,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Niko Hill)', '(as Pito Lungo)', '(as William Hunt)', '(as Robert O''Neill)"", '[nl]', 'genres', '%)%', '%H%', '%c%', '%c%', 'm', '%n%', 'actor', '1888', '2016']",384,0.50754815,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Virginia Reid)', '(as Gomez Ramiro)', '(as Saroja Devi)', '(as Roger Dantis)"", '[us]', 'locations', '%u%', '%c%', '%,%', '%,%', 'm', '%n%', 'actor', '1988', '2015']",384,0.5114329,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(story) (as Fine)\', \'(LaMaide)\', \'(Die Unbekannte)\', \'(segment ""Egypt"")', '[us]', 'quotes', '%)%', '%a%', '%l%', '%b%', 'm', '%i%', 'actor', '1893', '2019']",384,0.5152214,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Mikey Fox)', '(as Bobby Houston)', '(as Adam Coop)', '(as Kathy Spitz)"", '[fi]', 'quotes', '%i%', '%i%', '%i%', '%a%', 'm', '%B%', 'actor', '1996', '2015']",384,0.52794623,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Mya Akerling)', '(as Taras Kostyuk)', '(catering: Halfweg)', '(as Ehat Alince)"", '[us]', 'release dates', '%e%', '%e%', '%7%', '%u%', 'm', '%i%', 'actor', '1954', '2007']",384,0.5088625,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Amelie)', '(as Herta Dolezal)', '(IT lead)', '(as Mervyn Le Roy)"", '[us]', 'novel', '%)%', '%9%', '%0%', '%n%', 'm', '%B%', 'actor', '1955', '2005']",384,0.5075997,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Luisa Colpeyn)\', \'(play ""Karriere"")\', \'(as Ravi Kant)\', \'(as Olli Gebauer)', '[us]', 'release dates', '%-%', '%a%', '%t%', '%W%', 'm', '%i%', 'actor', '1916', '1976']",384,0.50997996,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(story ""The Cop"")\', \'(Posse)\', \'(as Rosaline Oscar)\', \'(as Ye. Kolegova)', '[us]', 'certificates', '%0%', '%S%', '%:%', '%A%', 'm', '%m%', 'actor', '1935', '1984']",384,0.4965719,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Jin Namkung)', '(as Stanford Price)', '(as FÃ¡bio Canale)', '(as Shobhan Hunter)"", '[fi]', 'quotes', '%F%', '%)%', '%n%', '%s%', 'm', '%b%', 'actor', '1996', '2013']",384,0.5044608,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Mateo Guez)', '(as Harish Magan)', '(1969-1970)', '(as Cathy Larson)"", '[us]', 'trivia', '%1%', '%r%', '%e%', '%o%', 'm', '%E%', 'actor', '1926', '2019']",384,0.507805,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Henry Bry)', '(as Michelle Baile)', '(as Tema Staig)', '(as Robert Nesh)"", '[fi]', 'goofs', '%a%', '%)%', '%E%', '%e%', 'm', '%R%', 'actor', '1920', '1979']",384,0.5328751,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as C. Ram Prasad)', '(as Juian Barnes)', '(as Dylan Roy)', '(production medic)"", '[us]', 'release dates', '%0%', '%d%', '%t%', '%t%', 'm', '%E%', 'actor', '1930', '1960']",384,0.50891113,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as G. Ployer)', '(as Regina Lee)', '(as Agnes Herring)', '(as Gadi Fur)"", '[us]', 'tech info', '%n%', '%)%', '%:%', '%o%', 'm', '%B%', 'actor', '1892', '1995']",384,0.5223907,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(as James M. King)\', \'(as Samantha Grey)\', \'(Phatu)\', \'(as TÃ¶rzs JenÃµ)\', \'(story ""Road Show"")', '[us]', 'release dates', '%i%', '%i%', '%d%', '%e%', 'm', '%i%', 'actor', '1916', '2008']",384,0.5113651,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Besart Kallaku)', '(as Yin Chien-ping)', '(Mother)', '(as Chris Meehan)"", '[us]', 'tech info', '%S%', '%B%', '%5%', '%5%', 'm', '%l%', 'actor', '1891', '2013']",384,0.5278954,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Starr Andreff)', '(catering: Lyon)', '(military trainer)', '(as Winfried Elste)"", '[us]', 'locations', '%)%', '%t%', '%e%', '%R%', 'm', '%,%', 'actor', '1952', '2020']",384,0.5201709,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Sek Yu)', '(as RenÃ© Rivera)', '(as Kaka Dalpat)', '(Mohit''s Friend)"", '[nl]', 'genres', '%N%', '%s%', '%e%', '%r%', 'm', '%F%', 'actor', '1950', '1995']",384,0.5030209,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as G.P. Hamilton)', '(as Chun-erh Lung)', '(as Carlos MoyÃ\xa0)', '(as Harry Newmann)"", '[us]', 'novel', '%a%', '%)%', '%e%', '%r%', 'm', '%i%', 'actor', '1911', '1987']",384,0.5059748,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as LeylÃ¢ Sayar)', '(as Tutta Berntzen)', '(as Lito Anzurez)', '(film director)"", '[fi]', 'quotes', '%D%', '%(%', '%!%', '%e%', 'm', '%,%', 'actor', '1924', '2012']",384,0.5034956,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(episode 1)', '(as Shen Junran)', '(as Will Plyer)', '(as Marv Engles)"", '[us]', 'release dates', '%)%', '%u%', '%u%', '%7%', 'm', '%i%', 'actor', '1965', '2017']",384,0.510783,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Domino)\', \'(Voiceover)\', \'(as Zap)\', \'(play ""Taifun"")', '[us]', 'locations', '%n%', '%r%', '%l%', '%n%', 'm', '%B%', 'actor', '1893', '1969']",384,0.5057225,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(voice) (uncredited)\', \'(as John Goldman)\', \'(as Robert Dolle)\', \'(novel ""An Exile"")\', \'(as Bob Bidaman)', '[fi]', 'quotes', '%V%', '%a%', ""%''%"", '%t%', 'm', '%y%', 'actor', '1914', '2017']",384,0.51331115,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Evan Messaros)', '(as Richard Allen)', '(nurse: Australia)', '(as Daryl Parsons)"", '[us]', 'release dates', '%1%', '%)%', '%t%', '%l%', 'm', '%i%', 'actor', '1930', '2004']",384,0.50955516,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Mathew Taylor)', '(as Jeremy Xu)', '(as Agustin Contel)', '(as Kishin)"", '[us]', 'tech info', '%u%', '%r%', '%S%', '%p%', 'm', '%i%', 'actor', '1903', '2017']",384,0.5161534,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Susan Shifrin)', '(as Ody Tolentino)', '(as Manolo Bravo)', '(as Bhiman Raghu)"", '[us]', 'tech info', '%u%', '%r%', '%t%', '%C%', 'm', '%i%', 'actor', '1915', '1993']",384,0.5137529,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Paco de Osca)', '(as Bret O''Hara)', '(as Nancy Sakovich)', '(as Natalie)"", '[us]', 'locations', '%a%', '%(%', '%o%', '%L%', 'm', '%B%', 'actor', '1944', '1962']",384,0.5221964,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Chan Kit Yan)', '(as Ji-hye Han)', '(Therapist)', '(as Fritz Neumann)"", '[nl]', 'certificates', '%(%', '%9%', '%d%', '%1%', 'm', '%o%', 'actor', '1931', '2017']",384,0.51683867,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Eloise Broady)', '(as Dan Lounsberry)', '(publicist: MVSP)', '(im 2. Teil)"", '[fi]', 'quotes', '%H%', '%(%', '%I%', '%l%', 'm', '%,%', 'actor', '1933', '2007']",384,0.5198535,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Philip Selway)\', \'(novel ""Grelu"")\', \'(as Walt Lantz)\', \'(as Rob Malone)', '[us]', 'goofs', '%e%', '%h%', '%n%', '%s%', 'm', '%a%', 'actor', '1908', '1996']",384,0.50981355,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as Pedro Azorin)\', \'(bvi marketing)\', \'(as Ellen Nance)\', \'(story ""Mar\'\'ka"")', '[us]', 'release dates', '%1%', '%)%', '%o%', '%e%', 'm', '%E%', 'actor', '1921', '2017']",384,0.514502,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Gobi)', '(media liaison)', '(as Chou Shih)', '(as TomÃ¡s ZorÃ\xad)"", '[us]', 'locations', '%t%', '%e%', '%t%', '%a%', 'm', '%i%', 'actor', '1962', '2020']",384,0.49809617,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Lois de Banzie)', '(as Nikita Myhran)', '(as Jim Carabatsos)', '(as M. Yezepov)"", '[us]', 'trivia', '%g%', '%U%', '%p%', '%w%', 'm', '%B%', 'actor', '1946', '2010']",384,0.5184142,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Jarek Zawadko)', '(as Suresh Krissna)', '(as John H. Allen)', '(as Diana Agostini)"", '[us]', 'release dates', '%i%', '%e%', '%7%', '%a%', 'm', '%J%', 'actor', '1945', '2017']",384,0.49914792,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Lee Grimanis)', '(as W.C. Hauber)', '(as Anna Howard)', '(as Miss Mayo)"", '[de]', 'quotes', '%)%', '%m%', '%u%', '%c%', 'm', '%d%', 'actor', '1966', '2011']",384,0.51141334,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Liu Chi-yu)', '(10 ans)', '(as T. Yeremeyeva)', '(as Alfred Howston)"", '[us]', 'sound mix', '%u%', '%(%', '%o%', '%n%', 'm', '%B%', 'actor', '1951', '1982']",384,0.49825338,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Marieli Valero)', '(as Bojan Bazeli)', '(as Christine Ke)', '(as Daniel HuSong)"", '[us]', 'languages', '%t%', '%n%', '%h%', '%l%', 'm', '%J%', 'actor', '2001', '2016']",384,0.5281465,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Dauzun)', '(bullrider)', '(Majnu)', '(as Nicole Abis)"", '[us]', 'quotes', '%S%', '%r%', '%b%', '%C%', 'm', '%l%', 'actor', '1936', '1989']",384,0.49804294,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Doug Purver II)', '(as Bill Black)', '(as Lugosi GyÃ¶rgy)', '(as Kumar Mangat)"", '[us]', 'tech info', '%D%', '%(%', '%P%', '%P%', 'm', '%i%', 'actor', '1927', '1978']",384,0.53250456,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(Corporal)', '(as Victor Debor)', '(as Li Shiang)', '(Luisa)"", '[nl]', 'certificates', '%N%', '%m%', '%R%', '%S%', 'm', '%j%', 'actor', '1972', '2016']",384,0.4907119,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Florence McGee)', '(as Sean McHeny)', '(dvd artwork)', '(loop group)"", '[us]', 'trivia', '%i%', '%i%', '%h%', '%l%', 'm', '%r%', 'actor', '1896', '1971']",384,0.5057226,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Carl Moos)', '(as Steffany Ward)', '(as Jitender)', '(as Medusa)"", '[us]', 'locations', '%U%', '%y%', '%A%', '%s%', 'm', '%l%', 'actor', '1898', '1971']",384,0.5167621,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(story ""Lugu"")\', \'(source: video)\', \'(as Chung Fat)\', \'(as Mathew Jacobs)', '[us]', 'copyright holder', '%)%', '%i%', '%b%', '%p%', 'm', '%l%', 'actor', '1931', '1969']",384,0.5173863,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Joshua Ferrell)', '(as A. Kamagarova)', '(as Gay Cowley)', '(as Leslie Boivee)"", '[us]', 'locations', '%)%', '%1%', '%s%', '%a%', 'm', '%n%', 'actor', '1901', '1994']",384,0.50215006,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Lyn Cole)', '(guest director)', '(as Fred Forrester)', '(as Mandy Highton)"", '[nl]', 'certificates', '%9%', '%9%', '%n%', '%:%', 'm', '%A%', 'actor', '1879', '1958']",161,0.48738718,/*+  SeqScan(mc) SeqScan(cn) IndexScan(t cat_title_1_pkey) IndexScan(ci movie_id_cast_info_cat_1) IndexScan(rt cat_role_type_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) IndexScan(n cat_name_1_pkey) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) HashJoin(mc cn) NestLoop(mc cn t) NestLoop(mc cn t ci) NestLoop(mc cn t ci rt) NestLoop(mc cn t ci rt chn) NestLoop(mc cn t ci rt chn n) NestLoop(mc cn t ci rt chn n an) NestLoop(mc cn t ci rt chn n an mi) HashJoin(mc cn t ci rt chn n an mi it) Leading((((((((((mc cn) t) ci) rt) chn) n) an) mi) it)) */
0,"[""(as James M. King)', '(as J. Noyes Scher)', '(as Ewing M. Brown)', '(as Ron Skuron)', '(as Katja Fedulova)"", '[us]', 'locations', '%u%', '%t%', '%n%', '%d%', 'm', '%g%', 'actor', '1902', '2007']",384,0.5148225,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(grass suit maker)', '(Secrets)', '(event manager)', '(IV) (Krijumcar)"", '[fi]', 'goofs', '%o%', '%o%', '%i%', '%s%', 'm', '%r%', 'actor', '1939', '1976']",384,0.50737745,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Oscar Bosch)', '(as PJ Byrne)', '(as Luitz Morat)', '(as J Larose)"", '[us]', 'tech info', '%(%', '%V%', '%5%', '%m%', 'm', '%i%', 'actor', '1933', '1977']",384,0.5313442,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as A.A. Methley)', '(Kurdish Advisor)', '(as Andrew Harvey)', '(as Hugh Stange)"", '[us]', 'trivia', '%l%', '%(%', '%w%', '%n%', 'm', '%i%', 'actor', '1933', '1996']",384,0.4932482,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Bruno Bossio)', '(as Gil Parra)', '(the glassy eye)', '(as Sidney Deane)"", '[us]', 'tech info', '%a%', '%(%', '%8%', '%1%', 'm', '%l%', 'actor', '1954', '2010']",384,0.52118456,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(uncredited)\', \'(as F. Krol)\', \'(as Claud Ennis)\', \'(segment ""Lewis"")\', \'(as M. Teisseire)', '[fi]', 'alternate versions', '%a%', '%)%', '%t%', '%f%', 'm', '%a%', 'actor', '1904', '1977']",384,0.5007853,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Oana Pelea)', '(as Suk-lan Chan)', '(as Olita Otis)', '(as Sona Haciyeva)"", '[us]', 'tech info', '%(%', '%n%', '%3%', '%M%', 'm', '%l%', 'actor', '1927', '1977']",384,0.5098736,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Alice Barry)', '(Toshiko)', '(as Jim Burtis)', '(as Bhavna Munim)"", '[us]', 'trivia', '%(%', '%a%', '%t%', '%i%', 'm', '%B%', 'actor', '1889', '1990']",384,0.5111512,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as GÃ©za Weisz)', '(as Kristin Birch)', '(as Sreeraman)', '(comic series)"", '[ca]', 'quotes', '%)%', '%(%', '%n%', '%o%', 'm', '%d%', 'actor', '1969', '2015']",384,0.5264313,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Jacques Murel)', '(as Jack Humphreys)', '(as Luchy Lopez)', '(as Alexandra Kelm)"", '[nl]', 'printed media reviews', '%c%', '%9%', '%.%', '%e%', 'm', '%e%', 'actor', '1879', '1963']",384,0.4935172,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Shahinda Baig)', '(big cheese)', '(as Jack Blystone)', '(as Gary Owen)"", '[ca]', 'certificates', '%d%', '%t%', '%e%', '%5%', 'm', '%n%', 'actor', '1923', '1976']",384,0.49710482,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Jo Anna Storm)', '(as Maria Bayo)', '(as Sharyn Ross)', '(as BBP)"", '[us]', 'trivia', '%)%', '%n%', '%.%', '%k%', 'm', '%r%', 'actor', '1917', '1987']",384,0.50439435,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Rob Hoffman)', '(intern director)', '(tech supervisor)', '(as Shigaya Fujita)"", '[us]', 'taglines', '%A%', '%U%', '%a%', '%-%', 'm', '%B%', 'actor', '1946', '1991']",384,0.52296835,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Ulf Risell)', '(as Marie Bosch)', '(as Gianni De Luca)', '(as Mike Ferris)"", '[us]', 'adaption', '%(%', '%i%', '%z%', '%a%', 'm', '%w%', 'actor', '1908', '1991']",384,0.5201918,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(Agent 000)', '(as RomÃ©o Bosetti)', '(as Sid Olcott)', '(as Garland L. Yee)"", '[us]', 'tech info', '%)%', '%1%', '%:%', '%T%', 'm', '%n%', 'actor', '1905', '2012']",384,0.5159326,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Elliott Fisher)', '(as Dorothy Haddon)', '(as Lucy)', '(as Gamy Viray)"", '[us]', 'trivia', '%a%', '%(%', '%f%', '%d%', 'm', '%E%', 'actor', '1951', '1968']",384,0.5117597,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(as James M. King)\', \'(as Xiong Lang)\', \'(story ""Road Work"")\', \'(as RenÃ©e Wedel)\', \'(as A. Leach)', '[us]', 'release dates', '%)%', '%d%', '%e%', '%F%', 'm', '%J%', 'actor', '1891', '2008']",384,0.49989656,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as J. Companeez)', '(as Master Jeetu)', '(as Greg Grover)', '(as Veri)"", '[nl]', 'copyright holder', '%a%', '%m%', '%l%', '%P%', 'm', '%y%', 'actor', '1985', '2004']",384,0.489743,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as JÃ¶ns Pappila)', '(as Alex Kudritsky)', '(as Tang Chu Yau)', '(DJ lady)"", '[us]', 'runtimes', '%(%', '%(%', '%1%', '%9%', 'm', '%,%', 'actor', '1899', '2003']",384,0.51545197,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Richard Svehla)', '(as Robert Dern)', '(as Jacob Klatfke)', '(as C. B. Tuite)"", '[nl]', 'release dates', '%)%', '%)%', '%S%', '%l%', 'm', '%o%', 'actor', '1919', '1997']",384,0.5114358,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Syd de Grey)', '(as Jeffrey Bemiss)', '(as Durga Prasad)', '(as Sampath)"", '[us]', 'release dates', '%)%', '%1%', '%2%', '%b%', 'm', '%E%', 'actor', '1915', '2020']",384,0.5167193,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(cast trainer)', '(as Matt Waite)', '(as Jill Maddin)', '(as Jayshri Gadkar)"", '[us]', 'sound mix', '%a%', '%i%', '%o%', '%M%', 'm', '%w%', 'actor', '1943', '1963']",384,0.5001987,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Gustav Nervil)', '(as Fito Yanelli)', '(as Azaan R. Shah)', '(as Valerie)"", '[ca]', 'certificates', '%f%', '%i%', '%2%', '%y%', 'm', '%i%', 'actor', '1910', '1997']",384,0.50245255,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as Anthony Fridjhon)', '(as Frank Liu)', '(as Jerold Ward)', '(as Jeff Zinn)', '(as Alan Parker)"", '[nl]', 'countries', '%t%', '%t%', '%U%', '%A%', 'm', '%d%', 'actor', '1975', '2015']",384,0.51522756,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as A. Shvedersky)', '(as D. Boschero)', '(wrap party: dj)', '(as Mike Dufays)"", '[us]', 'tech info', '%n%', '%d%', '%g%', '%I%', 'm', '%i%', 'actor', '1894', '2019']",384,0.5229834,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as M. Derzhavin)', '(album cover)', '(as Jenn Rivell)', '(as Philipp Wolter)"", '[us]', 'release dates', '%u%', '%d%', '%e%', '%1%', 'm', '%m%', 'actor', '1934', '2010']",384,0.48774913,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Rafael Corio)', '(segment 12)', '(Suzy)', '(as Ramarasila)"", '[us]', 'novel', '%)%', '%)%', '%Y%', '%t%', 'm', '%r%', 'actor', '1942', '2001']",384,0.49626362,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Bonita)', '(as Ken Farrington)', '(as Bill Jackson)', '(livestock trainer)"", '[us]', 'trivia', '%)%', '%n%', '%u%', '%r%', 'm', '%,%', 'actor', '1930', '1968']",384,0.5184272,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Felba Dragomir)', '(as Onse)', '(as Shekhar Kapoor)', '(as Crystal Liu)"", '[us]', 'tech info', '%i%', '%)%', '%m%', '%1%', 'm', '%m%', 'actor', '1969', '2007']",384,0.51616186,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Vinay)', '(as Bert Frank)', '(continuity: (U.S))', '(as ClÃ\xa0udia Abate)"", '[us]', 'languages', '%u%', '%0%', '%h%', '%l%', 'm', '%l%', 'actor', '1936', '1961']",384,0.5173155,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(voice) (uncredited)', '(as Lew Musser)', '(as M. Santos)', '(archive stuff)', '(Memo)"", '[fi]', 'quotes', '%(%', '%4%', '%o%', '%m%', 'm', '%,%', 'actor', '1986', '2012']",384,0.52478945,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Roxana Pope)', '(epk sound: Israel)', '(as Pinky Thompson)', '(as Mostepha Stiti)"", '[us]', 'goofs', '%s%', '%i%', '%Y%', '%i%', 'm', '%e%', 'actor', '1930', '1999']",384,0.49423876,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Edward J. Peil)', '(Acme Temp Guy)', '(as Henry De Vere)', '(roommate)"", '[us]', 'tech info', '%e%', '%u%', '%F%', '%3%', 'm', '%y%', 'actor', '1940', '2010']",384,0.51018953,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"['(as Chong Ti Bo-Chu)\', \'(voice: ""Review"")\', \'(as Alberto Diaz)\', \'(as MartÃ\xadn Aslan)\', \'(runner: Helsinki)', '[nl]', 'release dates', '%9%', '%e%', '%s%', '%t%', 'm', '%a%', 'actor', '1895', '1992']",384,0.5049263,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as J. Worth)', '(Friend 1)', '(as John Valent)', '(karate advisor)"", '[us]', 'release dates', '%)%', '%a%', '%6%', '%c%', 'm', '%,%', 'actor', '1951', '1972']",384,0.5101231,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as John Montoya)', '(as S. Basagic)', '(as Jack Cheese)', '(as Gioula Gavala)"", '[us]', 'trivia', '%-%', '%r%', '%n%', '%l%', 'm', '%i%', 'actor', '1904', '1992']",384,0.5160129,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Tim Hanson)', '(as Jagirdar)', '(as Mike Malfitano)', '(as Yin-Man Choi)"", '[us]', 'release dates', '%(%', '%d%', '%B%', '%u%', 'm', '%,%', 'actor', '1950', '2016']",384,0.5056235,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as IchijirÃ´ Ã\x94ya)', '(as Kari Seekins)', '(as Ameet Gaur)', '(as Josh Dov)"", '[fi]', 'goofs', '%F%', '%n%', '%i%', '%i%', 'm', '%R%', 'actor', '1929', '1971']",384,0.5278188,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Jose C. Mendez)', '(as Loren Mead)', '(Tiger Rose)', '(loader #3)"", '[us]', 'release dates', '%(%', '%u%', '%e%', '%7%', 'm', '%K%', 'actor', '1964', '2014']",384,0.5116565,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(as James M. King)', '(as Jack Jozephson)', '(as Members)', '(as Ersi Pitta)', '(as Carrol Baker)"", '[us]', 'release dates', '%n%', '%(%', '%O%', '%2%', 'm', '%i%', 'actor', '1897', '2017']",384,0.5195223,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Biel)', '(as Marcel Moreau)', '(as Barry Boldero)', '(as Brian Newett)"", '[us]', 'sound mix', '%)%', '%B%', '%o%', '%n%', 'm', '%E%', 'actor', '1947', '2015']",384,0.5068375,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Mehmood Ali)', '(as O. Demidov)', '(as Lynn Mess)', '(as Jerry Jacobs)"", '[us]', 'languages', '%B%', '%D%', '%l%', '%s%', 'm', '%n%', 'actor', '1923', '1987']",384,0.5131796,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Ira Bobkova)', '(as Odette Bedogni)', '(as Big Matthews)', '(as Robert Corddry)"", '[us]', 'release dates', '%T%', '%T%', '%5%', '%e%', 'm', '%w%', 'actor', '1957', '2001']",384,0.5030325,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
0,"[""(uncredited)', '(as Judith Gibson)', '(as Timothy Perez)', '(as Zhenya Serikov)', '(as Arthur Foster)"", '[us]', 'release dates', '%o%', '%r%', '%5%', '%5%', 'm', '%,%', 'actor', '1900', '2014']",384,0.5128146,/*+  SeqScan(n) IndexOnlyScan(an person_id_aka_name_cat_1) IndexScan(ci person_id_cast_info_cat_1) SeqScan(rt) IndexScan(t cat_title_1_pkey) IndexScan(mi movie_id_movie_info_cat_1) SeqScan(it) IndexScan(mc movie_id_movie_companies_cat_1) IndexScan(cn cat_company_name_1_pkey) IndexOnlyScan(chn cat_char_name_1_pkey) NestLoop(n an) NestLoop(n an ci) HashJoin(n an ci rt) NestLoop(n an ci rt t) NestLoop(n an ci rt t mi) HashJoin(n an ci rt t mi it) NestLoop(n an ci rt t mi it mc) NestLoop(n an ci rt t mi it mc cn) NestLoop(n an ci rt t mi it mc cn chn) Leading((((((((((n an) ci) rt) t) mi) it) mc) cn) chn)) */
