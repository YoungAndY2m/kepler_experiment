{
    "24-0_training_51_0": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(voice)', '(as Scott Ressler)', '(dvd meister)', '(as Brittany Fox)', '(as Debbie Hupp)')\nAND cn.country_code = '[us]'\nAND it.info = 'budget'\nAND k.keyword IN ('machinima', 'credulousness', 'arrow-in-neck', 'strapping-young-lad', 'liquor')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%l%'\nAND rt.role = 'actor'\nAND t.production_year > 2005;",
    "24-0_training_51_1": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(2009)', '(as Chris Boyes)', '(as Arianna Jolie)', '(as Marino Rogers)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('abbreviation-in-title', 'arm-ripped-off', 'twin-babies', 'starter-pistol', 'vegetable')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_2": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sweet Treesa)', '(as Lorian James)', '(as Kevin Hewitt)', '(as Pam Nimo)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('atlantic-city-new-jersey', 'earache-records', 'aids', 'nude-bicycling', 'rape-joke')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_3": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Peter Peck)', '(as Kelly Hoana)', '(as David S.)', '(as Ken Chukwu)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('animal-in-title', 'cheating-husband', 'finger-bitten-off', 'pharaoh', 'jumping-from-a-boat')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_4": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(special guest)', '(as Jack LaFonte)', '(as Krista Lynn)', '(as Eva Bond)')\nAND cn.country_code = '[de]'\nAND it.info = 'sound mix'\nAND k.keyword IN ('disco', 'universe', 'walk-on-the-beach', 'ozark-mountains', 'colleague')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_5": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ronald Gordon)', '(as Clifford Stone)', '(as Steven Wong)', '(as Tatjana)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('train-station', 'charleston', 'chest', 'magic-mirror', 'breaking')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_6": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tunde Bamgbode)', '(as Laetitia)', '(as Ted Hunter)', '(as Jemstone)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('blonde', 'muscle-car', 'stone', 'short-filmmaking', 'photocopier')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%C%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_7": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Selly Elson)', '(fighter handler)', '(as Rikki)', '(as Koronbia Toppu)')\nAND cn.country_code = '[de]'\nAND it.info = 'languages'\nAND k.keyword IN ('scientist', 'blow-up-doll', 'horus', 'nomad', 'traffic')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_8": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rolf Kristen)', '(as Liana Smiss)', '(as Rene Bar)', '(as Stacy Nichol)')\nAND cn.country_code = '[de]'\nAND it.info = 'color info'\nAND k.keyword IN ('flame-thrower', 'stand-of-birch', 'comicon', 'crypt', 'lizard-monster')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_9": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tatiyana Fox)', '(as Barret Blade)', '(lab supervisor)', '(as Thomas Jeno)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('soldier', 'trapped-in-a-car', 'swiss-alps', 'pot', 'skipping-rope')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%f%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_10": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Juli)', '(as Ron Smith)', '(on-set doctor)', '(as CJ Bennett)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('flame-thrower', 'tejano', 'lucky-charm', 'corrupt-soldier', 'caught-from-falling')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%M%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_11": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Cinabunz)', '(as Misty Raines)', '(as Ilona Tihase)', '(as Puma)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('abbreviation-in-title', 'porno-film', 'satanic-book', 'roman', 'bentwaters')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%k%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_12": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(head accountant)', '(adapted by)', '(executive: VVL)', '(Mia Starr)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('corpse', 'payment-in-kind', 'u.s.-civil-war', 'legislation', 'high-octane')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_13": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kathy Bouch)', '(as Lauren Bryce)', '(as Mira)', '(as Richard Carole)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('flame-thrower', 'history-student', 'gay-acceptance', 'wrestler-hero', 'dramatization')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_14": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Episode #3)', '(as Sharin Wood)', '(as Michaela Raabe)', '(as Deana Demko)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('python', 'college-life', 'scavenger-hunt', 'high-school-reunion', 'morning-coffee')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_15": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(colourist)', '(as Miki)', '(as Candice)', '(as Denjarasu)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('scientist', 'wound', 'exploding-ball', 'surprise-attack', 'shiloh')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%W%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_16": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Sienna)', '(as Dawn Davies)', '(as Ellie Gottwald)', '(as Carie)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('animal-in-title', 'demolition-derby', 'dark-power', 'talking-to-a-dog', 'iranian')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_17": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as J. Morgan)', '(as Ade Aderle)', '(as Zig Le Bric)', '(as Roy Denanie)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('subway', 'time-warp', 'indian-canadian', 'popular-music', 'bricklin')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%M%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_18": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mat Scollon)', '(as Lucille Darcy)', '(head of promotion)', '(as Bob Ezrin)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('shot-to-death', 'gutting', 'syringe', 'farm-hand', 'tantra')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_19": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Taylor Starr)', '(as Warren DeRosa)', '(as Ace Elliott)', '(as Candice Heart)')\nAND cn.country_code = '[ca]'\nAND it.info = 'countries'\nAND k.keyword IN ('accidental-killing', 'lesion', 'critically-bashed', 'male-friendship', 'lamp-post')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_20": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as John Glazer)', '(marketing: Pixion)', '(as Kameron Styles)', '(as Alexandru Cuza)')\nAND cn.country_code = '[us]'\nAND it.info = 'languages'\nAND k.keyword IN ('betting', 'hollywood-records', 'sarcasm', 'spacedog', 'appetite')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_21": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ryan De Rouen)', '(as Sandra Nova)', '(as Savannah)', '(as Selly Elson)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('philadelphia-pennsylvania', 'loss-of-powers', 'soiling-pants', 'product-endorsement', 'public')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%d%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_22": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Dakota Dare)', '(as Anaya Leon)', '(news reporter)', '(as Angelica)')\nAND cn.country_code = '[us]'\nAND it.info = 'tech info'\nAND k.keyword IN ('pubic-hair', 'burnt-hand', 'confessional', 'motorcycle-chase', 'pandora''s-box')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%m%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_23": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Diego Rivera)', '(as Dean G.)', '(as Miss Sad\u00c3\u00a9)', '(opening titles)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('military', 'gender-confusion', 'inner-city', 'necromancer', 'old-bailey')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_24": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(film clips)', '(eic: Unitel)', '(Blues Traveler)', '(as Sindy Cummings)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('abbreviation-in-title', 'diabolical-laugh', 'gryphon''s-egg', 'pollack', 'wooden-stake')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_25": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mark Curtis)', '(personnel manager)', '(Beautiful Pussy)', '(as Ryan Litzinger)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('scientist', 'runner-up', 'feeling-cold', 'female-manager', 'lunar-rover')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_26": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kerry Cooper)', '(as Scorpion)', '(The Host)', '(as Tom Bradley)')\nAND cn.country_code = '[de]'\nAND it.info = 'locations'\nAND k.keyword IN ('blonde', 'witches-horror', 'interrogation', 'breast-pump', 'bent-over')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_27": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Susan Serena)', '(as Vanessa K)', '(as Lisa Breeze)', '(production head)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('scientist', 'bra-burning', 'filmed-killing', 'rogue', 'female-singer')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_28": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Malaysia)', '(as Ericka Fontes)', '(as Kirk Heflin)', '(Miss May 1991)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('airport', 'make-out', 'menstruation', 'underage-drinking', 'aphrodisiac')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_29": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as S.G. Tarjoto)', '(as Rene Foxxe)', '(before)', '(as Zoe Mathews)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('reptile', 'whisky', 'stepsister', 'sky-trails-ranch', 'mystic')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_30": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Stina)', '(as Julia Jones)', '(as Denni)', '(as Kaylie)')\nAND cn.country_code = '[ar]'\nAND it.info = 'filming dates'\nAND k.keyword IN ('buttocks', 'universe', 'car-park', 'invisible-man', 'paintball-gun')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_31": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as J.C. Andrews)', '(as Jim Bataglia)', '(as Steven Drake)', '(video programmer)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('announcer', 'supernatural-rape', 'karmapa', 'ethiopian', 'idol')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_32": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(additional medic)', '(line-up)', '(dvd meister)', '(as Hakan Dan)')\nAND cn.country_code = '[ar]'\nAND it.info = 'taglines'\nAND k.keyword IN ('blood', 'check-up', 'drug-runner', 'rednecks', 'hula-dancer')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_33": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Gy\u00c3\u00b6ngyi)', '(as Pat Pedraza)', '(as Jenni Loveitt)', '(Guitar & Vocals)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('thong-swimsuit', 'excalibur', 'detour', 'set-up', 'm\u00c3\u00a9nage-\u00c3\u00a0-quatre')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_34": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Harry Murphy)', '(as Nikkie Vixon)', '(Ring Announcer)', '(as C.J. Bennet)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('period-in-title', 'woman-singer', 'esa', 'grounded-flight', 'mecha')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_35": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Emanuelle Rios)', '(as Nick Springer)', '(as Valerie)', '(as Autumn Angel)')\nAND cn.country_code = '[ca]'\nAND it.info = 'tech info'\nAND k.keyword IN ('dancing', 'frat-boy', 'survival-skills', 'dead-baby', 'railway')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%m%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_36": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Judge)', '(as Pavel)', '(as Camili)', '(video watchdog)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('second-part', 'harvard-university', 'pillar', 'hula-hoop', 'prayer')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_37": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Atilla Bravoso)', '(as Naudia Hilton)', '(producer) (EPK)', '(as Bernie Deleo)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('blood', 'car-brakes', 'angry-customer', 'rabbit''s-foot', 'disability')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_38": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Joanne Storm)', '(as Dorian Grant)', '(as Scott Forsina)', '(as Cayenne)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('train-station', 'coal-industry', 'publicity', 'amputation', 'virtual-set')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%N%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_39": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Thomas Yu)', '(as Tommy B.)', '(as Alison Star)', '(as Caroline Leone)')\nAND cn.country_code = '[ca]'\nAND it.info = 'genres'\nAND k.keyword IN ('military', 'drug-deal', 'shotgun-guitar', 'fight', 'raf')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_40": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Luisa Rosso)', '(as Zahari Baharov)', '(as Miso)', '(as Larisa)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('explosion', 'lost-father', 'sex-in-school', 'foot-pedal', 'midget-sex')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_41": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Miko Lee)', '(bay producer)', '(as Michael Dacri)', '(as Susan Froemke)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('announcer', 'rage', 'children', 'bald-man', 'purple-clothing')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%B%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_42": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Holly Howard)', '(as Cathy Brown)', '(as Val Agwulonu)', '(as Darren Burrows)')\nAND cn.country_code = '[us]'\nAND it.info = 'genres'\nAND k.keyword IN ('antivenin', 'gangster-woman', 'naturalist', 'car-tuning', '20th-century')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_43": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Uschi Digart)', '(as Fallon)', '(as Paul Smith)', '(as Diana Wynn)')\nAND cn.country_code = '[de]'\nAND it.info = 'color info'\nAND k.keyword IN ('betting', 'all-female-army', 'sins-from-the-past', 'underwater-scene', 'street-performer')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_44": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(\"Come and Go\")', '(as Jessika)', '(diver)', '(as Saimon Simonet)')\nAND cn.country_code = '[ca]'\nAND it.info = 'mpaa'\nAND k.keyword IN ('atlantic-city-new-jersey', 'ice-cream-truck', 'run', 'fox', 'swim-meet')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_45": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Johnny Slim)', '(as Stacy Nichols)', '(as Gabor Roberts)', '(as Silvya Lauren)')\nAND cn.country_code = '[us]'\nAND it.info = 'genres'\nAND k.keyword IN ('third-part', 'secret-development', 'dental-wax', 'weeping', 'amniotic-fluid')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%F%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_46": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Deon)', '(as Emmanuael Mark)', '(as Sharron Wilde)', '(as R .Tomy)')\nAND cn.country_code = '[ar]'\nAND it.info = 'tech info'\nAND k.keyword IN ('betting', 'romantic-novel', 'lock-combination', 'stunt-driver', 'broken-glasses')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_47": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mrs. V. Vail)', '(as Yasimine Lee)', '(tour security)', '(rendering artist)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('pubic-hair', 'soprano', 'crystal-meth', 'theologian', 'nurse''s-aide')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%.%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_48": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(news article)', '(as Pal Tengeri)', '(as Eric Johanson)', '(as Ricky Free)')\nAND cn.country_code = '[ar]'\nAND it.info = 'runtimes'\nAND k.keyword IN ('reference-to-jeff-goldblum', 'land-developer', 'computer-dating', 'general''s-daughter', 'stand-alone-sequel')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_49": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Bob Hakan)', '(as Steffy Kraft)', '(as Maryann)', '(as Marcos Ferraez)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('investigation', 'ramones', 'braces', 'trombo', 'katana')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_training_51_50": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ebele Okaro)', '(as Rocco Sifreddi)', '(as Nikky Blu)', '(as Pussy Girl Or)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('python', 'girl-detective', 'morning-sex', 'pigalle-paris', 'corporatocracy')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;"
}