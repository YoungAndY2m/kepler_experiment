{
    "24-0_testing_0": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Naeveh Givens)', '(as Jerrica Fox)', '(as Roy LeRoi)', '(as Ben Schmitt)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('antivenin', 'exploding-ball', 'herbs', 'tv', 'mysterious-death')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%w%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_1": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(design stylist)', '(as Joe Damato)', '(as Talen)', '(as Ladislav J.)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('pubic-hair', 'american-navy', 'original-story', 'cap', 'qi-gong')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%O%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_2": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Bianca)', '(nude cooking)', '(as Charles Knox)', '(as Bamb\u00c3\u00b9)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('pubic-hair', 'fishing-line', 'nightlife', 'armpit', 'passing')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_3": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Brian Tuley)', '(as Cassie Lane)', '(video \"Whoa!\")', '(as Bhaskar)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('atlantic-city-new-jersey', 'coverup-plot', 'trance-state', 'latin-lover', 'secret-codes')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%O%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_4": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment \"Sucker\")', '(as Ca See)', '(music video)', '(operator: IQ)')\nAND cn.country_code = '[de]'\nAND it.info = 'countries'\nAND k.keyword IN ('period-in-title', 'overalls', 'urinating-on-ground', 'do-nothing-farming', 'taunt-police')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_5": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Paul Igwe)', '(as Jamiee Cooley)', '(as Maria Belucci)', '(as Corry Everson)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('news-report', 'music-business', 'absurdism', 'cattle-rustling', 'financing')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_6": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Damn Davies)', '(as Viktori)', '(as Elexis)', '(as Ines Reber)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('blonde', 'year-2006', 'bond-girl', 'throwing-paper-ball', 'no-wave')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_7": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Eva Cristaldi)', '(as Brandon Irons)', '(as David Green)', '(as Itzik Aloni)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('second-part', 'risk-taking', 'hand-maiden', 'dung', 'lafayette-louisiana')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_8": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Zenobia Rose)', '(as Raven Mc Call)', '(as R. Bender)', '(as Daniela Tinti)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('announcer', 'fluffer', 'chibi', 'air-force-base', 'mortal-kombat')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_9": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Torrid)', '(as Pat Oseni)', '(as Dixie)', '(as Bik Lawless)')\nAND cn.country_code = '[us]'\nAND it.info = 'copyright holder'\nAND k.keyword IN ('python', 'yo-yo', 'blood-sucking', 'mini-mart', 'volcanic-eruption')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%z%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_10": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Poison Ivy)', '(as Franck Gun)', '(as Karin Jonsson)', '(as Stephen Heller)')\nAND cn.country_code = '[de]'\nAND it.info = 'plot'\nAND k.keyword IN ('reference-to-jeff-goldblum', 'wrestling-promoter', 'creepy-neighbor', 'cotton-swab', 'wrong-choices')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_11": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment: Rabbit)', '(as Rawling Curtis)', '(as Mallicia)', '(head of promotion)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('hunt', 'falling-apple', 'masked-killer', 'bandaged-leg', 'news-satire')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_12": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ken Calman)', '(as Spanky)', '(facility manager)', '(as Lonnie Colon)')\nAND cn.country_code = '[de]'\nAND it.info = 'color info'\nAND k.keyword IN ('hunt', 'military-career', 'hand-in-mouth', 'imitating-someone', 'police-commissioner')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_13": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Koko B. Ware)', '(designed by)', '(Between Floors)', '(as Mack Thomas)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('subway', 'banjo', 'surf-film', 'presentation', 'romantic-obsession')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%I%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_14": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as D-Shay)', '(as Rick Pons)', '(as Tume Uusitalo)', '(as Bob Ayers)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('abbreviation-in-title', 'infantilism', 'bivouac', 'edison', 'pedicure')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_15": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lexxi)', '(as Niky Bellucci)', '(as Rachel Roxxx)', '(as Vikki Vogue)')\nAND cn.country_code = '[ca]'\nAND it.info = 'genres'\nAND k.keyword IN ('thong-swimsuit', 'pump', 'beheading', 'delivery-woman', 'space-alien')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_16": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kristal Summer)', '(as Kam Koushan)', '(as Kristy Redford)', '(as F.J. Lincoln)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('pubic-hair', 'skater', 'traffic-jam', 'forced-abortion', 'pakistan')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%v%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_17": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Anders Stemno)', '(video segments)', '(camera)', '(website producer)')\nAND cn.country_code = '[ar]'\nAND it.info = 'tech info'\nAND k.keyword IN ('military', 'korean', 'extramarital-affair', 'eternal-life', 'buddha')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_18": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Zarena Zapico)', '(as Mayara)', '(as Sporty Spice)', '(as Layla Hill)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('punched-in-the-face', 'pro-wrestling', 'u.s.-marine', 'military-training', 't-square')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%,%' OR mi.info LIKE '%m%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_19": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Amanda Winn)', '(as Corey Taylor)', '(as Katja Love)', '(as Rick Shawn)')\nAND cn.country_code = '[ar]'\nAND it.info = 'genres'\nAND k.keyword IN ('philadelphia-pennsylvania', 'jensen-interceptor', 'mac', 'belly-dancer', 'human-autopsy')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_20": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lira Rose)', '(runner: segments)', '(as Bobbie Barron)', '(drums))')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('reference-to-jeff-goldblum', 'hipster', 'bicycle-race', 'body-mutilation', 'bagpipes')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%K%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_21": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Debbie Ross)', '(guitar & keyboard)', '(as Vivei)', '(as Mauve)')\nAND cn.country_code = '[us]'\nAND it.info = 'taglines'\nAND k.keyword IN ('flame-thrower', 'conservatism', 'armed-robbery', 'caesarean-birth', 'hyperspace')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_22": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Luc von B)', '(as Bill Hinzman)', '(background score)', '(live tour footage)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('betting', 'cardiac-arrest', 'dream-lover', 'rifle', 'conference-table')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_23": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(singing coach)', '(voice effects)', '(as Tommie)', '(as Rico Lowry)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('thong-swimsuit', 'centaur', '3d-in-title', 'national-hero', 'queer-cinema')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_24": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as William B. Jackson)', '(as Zoly Mirlos)', '(as Don Davis)', '(as Timon Kyle)', '(as Martin)')\nAND cn.country_code = '[us]'\nAND it.info = 'languages'\nAND k.keyword IN ('place-name-in-title', 'adventure-hero', 'red-state', 'gunfight', 'sonar')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%J%'\nAND rt.role = 'actor'\nAND t.production_year > 1991;",
    "24-0_testing_25": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Saidi Balogun)', '(as Amy Easton)', '(as Leo Rocco)', '(as Crissy M.)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('reference-to-jeff-goldblum', 'grandparent', 'literary-adaptation', 'foxtrot', 'hangover')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_26": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Cornellia)', '(as Donald O''Brian)', '(as S.G. Tarjoto)', '(as Tonee Bell)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('snake', 'physical-abuse', 'hourglass', 'female-protagonist', 'reference-to-ac-dc')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%,%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_27": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mickey Danson)', '(as Rich McHugh)', '(as Timothy Griepp)', '(as Stan Lubrick)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('blood', 'wyatt-earp', 'rune', 'toilet-plunger', 'cover-song')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_28": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Nyeema Knoxxx)', '(as Gina Gultier)', '(as Tae)', '(as Nadia Moore)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('spectator', 'worry', '1610s', 'capital-punishment', 'armenia')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_29": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Luda)', '(as Mickey Lynn)', '(as Odisea)', '(as Mana\u00c3\u00afs)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('abbreviation-in-title', 'head-coach', 'over-budget', 'hallway', 'sex-drive')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%7%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_30": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Angeliqu\u00c3\u00a9)', '(as Lawrence David)', '(as Inmas Mach)', '(as Misty Mc Kayn)')\nAND cn.country_code = '[ca]'\nAND it.info = 'languages'\nAND k.keyword IN ('animal-in-title', 'emo', 'english-teacher', 'green-beans', 'classic-bareback')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%E%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_31": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kelsey Landry)', '(as Alicia Allure)', '(as Shelby Mine)', '(as Mark Moore)')\nAND cn.country_code = '[ca]'\nAND it.info = 'genres'\nAND k.keyword IN ('punched-in-the-face', 'cake-in-the-face', 'scout', 'kicked-in-the-back', 'noah''s-ark')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_32": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mike Manley)', '(tour agent)', '(as Michael Eshaq)', '(as Zolt\u00c3\u00a1n Hess)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('dancing', 'open-window', 'little-league', 'great-dane', 'gay-athlete')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_33": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lily)', '(as Elliot Gould)', '(as St. Rev. Jen)', '(as Nikki Allison)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('flame-thrower', 'disneyworld', 'totem', 'women''s-basketball', 'skipping')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%w%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_34": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(dvd extra)', '(as DJ Dope D-Shay)', '(as June Bower)', '(as J. Beazy)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('explosion', 'click', 'fighting-women', 'world-record', 'running-gag')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%H%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_35": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Regan Star)', '(as Sharon Darling)', '(as Gabriel Lantos)', '(as Z Catal)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('python', 'dog-on-bed', 'flower-in-title', 'rapper', 'army-brat')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%w%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_36": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment \"Painted\")', '(as Tony Erickson)', '(visas)', '(fire marshal)')\nAND cn.country_code = '[us]'\nAND it.info = 'sound mix'\nAND k.keyword IN ('punched-in-the-face', 'deep-purple', 'archaeology', 'blame', 'un-scripted')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_37": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Nick Parsons)', '(as Tyron Pinkham)', '(as H. Rustan)', '(as Senza Raggi)')\nAND cn.country_code = '[ca]'\nAND it.info = 'genres'\nAND k.keyword IN ('subway', 'quarter', 'bahamas', 'trapped-in-space', 'czechploitation')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_38": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Nick Stoppani)', '(as Rusty Smith)', '(as Long Chainy)', '(as Emma Redd)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('second-part', 'talking-clock', 'founder', 'intentional-goof', 'original-songwriter')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_39": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(mythology)', '(as Farshad Kholgi)', '(as Karly Sweet)', '(as Paphwie)')\nAND cn.country_code = '[ar]'\nAND it.info = 'sound mix'\nAND k.keyword IN ('corpse', 'deleted-scene', 'pavese', 'tin-can', 'fake-accident')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%D%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_40": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rita Aruma)', '(as Joseph Tennent)', '(as Eduarda)', '(as Ariane Giselle)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('shot-in-the-chest', 'freddie-mercury', 'songwriter', 'shrunken-head', 'aboriginal-tribe')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_41": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Bridgette)', '(extra) (as Ezra)', '(safety director)', '(as Tim Webber)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('reptile', 'father-thomas', 'diabetes', 'sarcasm', 'eternal-life')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_42": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Linzi Fogarty)', '(as Dick Richards)', '(as Africa Sexx)', '(as Y\u00c3\u00bbdai Kat\u00c3\u00b4)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('betting', 'valet', 'eyepatch', 'hare', 'sking-fall')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_43": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ry\u00c3\u00b4 Takanishi)', '(as Kohei Yamamoto)', '(as Rich Correll)', '(as Stella Del Mar)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('reptile', 'death-of-reporter', 'scottish-stereotype', 'electro-shock', 'womens-rights')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_44": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Aza)', '(as Reka)', '(as Skye Ransome)', '(as Candice Von)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('news-report', 'corporate-warfare', 'designated-driver', 'ncaa', 'hanged-child')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%m%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_45": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as David Makin)', '(as Pat Moran)', '(as Andy Robinson)', '(animation)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('military', 'stabbed', 'neon-light', 'extortionist', 'machete-in-the-head')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_46": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Julio Alonzo)', '(as Sandra Romaine)', '(as Jazmine LLeigh)', '(as Gregory Webb)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('shot-to-death', 'peace-movement', 'priest-with-a-gun', 'cartwheel', 'uncensored')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_47": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Pandora)', '(as Nathalie)', '(as Mike Bacon)', '(as Jennifer S.)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('atlantic-city-new-jersey', 'gay-panic', 'woman-hits-a-man', 'anti-heroine', 'alien-planet')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_48": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Chris Williams)', '(as Tajia Rae)', '(as Sweet Treesa)', '(as Ariel Day)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('investigation', 'back-massage', 'punk-rocker', 'nuclear-test', 'under-sea')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_49": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Jay Ash)', '(location trainee)', '(as David)', '(as Lacy Tom)')\nAND cn.country_code = '[de]'\nAND it.info = 'color info'\nAND k.keyword IN ('antivenin', 'trident', 'barefoot', 'django', 'ecw')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_50": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Isabelle Snow)', '(as Michael Howard)', '(as Mercedez Lynn)', '(as Elen Diesel)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('corpse', 'social-rejection', 'gun-duel', 'triple-crown', 'call-of-the-wild')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_51": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(script reader)', '(as Lacey Clark)', '(scenic p.a.)', '(as Tony Toscani)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('blonde', 'sex-education', 'running-gag', 'comedy-of-errors', 'media-coverage')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_52": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(road manager)', '(as Randy Potes)', '(as Michal Berky)', '(as D.J. Morgan)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('announcer', 'black-mass', 'snowboarding', 'television-station', 'sex-in-a-gym')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_53": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(mastering)', '(as Carla)', '(as Kamila)', '(accounts)')\nAND cn.country_code = '[us]'\nAND it.info = 'copyright holder'\nAND k.keyword IN ('buttocks', 'german-occupation', 'siblings', 'part-stop-motion', 'hand-to-hand-combat')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%C%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_54": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Yugomir Lonich)', '(as Marcie)', '(as Jim Jarosz)', '(as Takuya Sato)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('spectator', 'turncoat', 'ammunition-belt', 'locker-room', 'sponsorship')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%q%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_55": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as D.O.)', '(as Tysen D''Eston)', '(video \"Bedshaped\")', '(as Edwige)')\nAND cn.country_code = '[us]'\nAND it.info = 'runtimes'\nAND k.keyword IN ('announcer', 'plane-crash-victim', 'seductress', 'bible-college', 'snowboard')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_56": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment \"Touch\")', '(as Suzanne Tegman)', '(as Danica Grey)', '(as Daytona)')\nAND cn.country_code = '[ar]'\nAND it.info = 'sound mix'\nAND k.keyword IN ('punched-in-the-face', 'jungle-book', 'captain-crunch', 'humorous', 'ftm')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_57": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Emanuelle)', '(as Luca Spyder)', '(as Paco Pasquel)', '(as Shelia Stone)')\nAND cn.country_code = '[de]'\nAND it.info = 'taglines'\nAND k.keyword IN ('explosion', 'carp', 'life-insurance', 'female-dj', 'religious-sacrifice')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_58": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rod Hopkins)', '(series producer)', '(as Jewel De'' Nyle)', '(as Neo)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('philadelphia-pennsylvania', 'rubber-duckie', 'footman', 'duke', 'white-shirt')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_59": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Colleen Guest)', '(as Dominica Dolce)', '(as Gary Cohen)', '(as Jake Gutman)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('snake', 'moderization', 'stitching-a-wound', 'statuette', 'warlord')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%6%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_60": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Thomas Rosales)', '(as Asia Blondie)', '(as Dinos Lyras)', '(as Phoenix Rae)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('airport', 'smut', 'party-planner', 'brain-cut-in-half', 'ceremony')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_61": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mr. 2Nite)', '(as Naoya \u00c3\u0094shima)', '(as Lorenz Popkov)', '(as Dr. Earl Grant)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('shot-in-the-chest', 'revue', 'choral-music', 'big-tobacco', 'anti-communism')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%f%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_62": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Gina Giannetti)', '(as Kelli Richards)', '(as Giselle)', '(Leprechaun)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND k.keyword IN ('airport', 'arms-tied-overhead', 'gay-bashing', 'creator', 'luggage')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_63": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Redd)', '(as Melissa Petro)', '(as Tim Nabong)', '(as Johan Schwartz)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('dancing', 'anecdotal-evidence', 'sicilian', 'community-college', 'government-agency')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_64": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rob Cook)', '(as Deacon Batista)', '(as Leos Hrzal)', '(video \"Cocoon\")')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('shot-to-death', 'eating-intestines', 'abu-ghraib', 'frankenstein-baby', 'voice-changer')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_65": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sir Tim Rice)', '(as Eva Mendez)', '(as Robert New)', '(pitcher)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('thong-swimsuit', 'death-threat', 'car-chase-on-ice', 'infidelity', 'jumping-jacks')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%k%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_66": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sera Bastian)', '(plays)', '(as Frank)', '(as Yomi Fash)')\nAND cn.country_code = '[ca]'\nAND it.info = 'countries'\nAND k.keyword IN ('corpse', 'respect', 'eye-tumor', 'splash', 'explanation')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_67": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Steve Waddy)', '(as Kira Lynn)', '(as Ric Plaine)', '(as Joey Carolan)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('scientist', 'computer-cracker', 'grave-site', 'sex-with-ex-wife', 'shuffle')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%4%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_68": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Bigbubs)', '(as Jim Hundhausen)', '(as Chris Cardona)', '(as Gene Whitham)')\nAND cn.country_code = '[us]'\nAND it.info = 'sound mix'\nAND k.keyword IN ('subway', 'ethnographic-film', 'vampire-staked', 'crayon-drawing', 'fat-joke')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_69": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Karlo Puente)', '(as Mr. Jack)', '(as Jean P. Armand)', '(as Mikayla Mendez)')\nAND cn.country_code = '[ar]'\nAND it.info = 'countries'\nAND k.keyword IN ('philadelphia-pennsylvania', 'escort-girl', 'commandos', 'columbia-station', 'nose')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_70": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Leading Comedian)', '(as Horace Hogan)', '(as Jakob Kolb)', '(as Hardkore Inc..)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('animal-in-title', 'infernal', 'caf\u00c3\u00a9', 'lonely-man', 'diving')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_71": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Miss Daniels)', '(US)/Ferdinand (US)', '(as Jeikobu Kotoku)', '(as Dave Workman)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('flame-thrower', 'big-city', 'columbia-university', 'avante-garde-artist', 'pale-faced')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_72": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sybel)', '(as Mark Shy)', '(as Matt Walker)', '(as Capri Cavali)')\nAND cn.country_code = '[de]'\nAND it.info = 'locations'\nAND k.keyword IN ('punched-in-the-face', 'crack-smoking', 'dc-comics', 'lunch-in-the-park', 'snow')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%,%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_73": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rita Kosoko)', '(as Mike Steel)', '(as Cumisha Amato)', '(Kimberly)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('shot-to-death', 'inflatable-doll', 'ohio-state', 'sorority-sister', 'police-chief')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_74": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Paul Nevitt)', '(watchdog)', '(as The Zombies)', '(as Nissa)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('announcer', 'body-in-a-dumpster', 'inter-cultural', 'fur-coat', 'south')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_75": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as George Madaraz)', '(as Renee Tyffany)', '(as James Gaynes)', '(as Ron E. Yoshida)')\nAND cn.country_code = '[us]'\nAND it.info = 'color info'\nAND k.keyword IN ('punched-in-the-face', 'playgirl-magazine', 'slasher-homage', 'dead-body', 'cheat')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%C%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_76": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lauren Vaughn)', '(as Fred Amugi)', '(segment \"Touched\")', '(as Maurizio Hogan)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND k.keyword IN ('investigation', 'chicon', 'tango-dancing', 'ski-bunny', 'robert-oppenheimer')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_77": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as L. Lewis Stout)', '(as Scrunter)', '(as Aaliyah Jollie)', '(as Richard Duran)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('airport', 'masked-wrestling', 'observation', 'splice-graft', 'barricade-the-door')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%!%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_78": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Merone DaNola)', '(Childhood)', '(parking)', '(A2)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('period-in-title', 'grape-juice', 'shrinking', 'zorro', 'albania')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_79": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Kacey)', '(German)', '(as Jimmy Gestapo)', '(as Roberto Aponte)')\nAND cn.country_code = '[us]'\nAND it.info = 'plot'\nAND k.keyword IN ('abbreviation-in-title', 'third-in-tetralogy', 'female-rapist', 'sexual-sadism', 'rugby')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_80": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kristi)', '(as Vinay Fort)', '(the Cat)', '(as Hero)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('pubic-hair', 'kangaroo', 'pump', 'holidays', 'extreme-sport')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_81": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lil'' X)', '(as Vally)', '(as BLUSH)', '(as Monique Perry)')\nAND cn.country_code = '[ca]'\nAND it.info = 'countries'\nAND k.keyword IN ('snake', 'iraq', 'female-villain', 'excavator', 'open-hydrant')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_82": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Elinor)', '(as Dru Barry)', '(as Kina Tai)', '(as Szabina)')\nAND cn.country_code = '[de]'\nAND it.info = 'runtimes'\nAND k.keyword IN ('dancing', 'mountain-climbing', 'year-1492', 'radio-program', 'capture-the-flag')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_83": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Mia Smiles)', '(as Veronica Lee)', '(as Patrick Tubach)', '(as Drica Brascuik)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('thong-swimsuit', 'sweaty-sheriff', 'pine-barrens', 'fdny', 'mcf')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_84": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sazzy Calhoun)', '(as Charlie Chase)', '(music clearances)', '(as Sam West)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('explosion', 'napoleonic', 'horseriding-naked', 'outcast', 'numbers-racket')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_85": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Ring Announcer)', '(as Nikky Randal)', '(written by)', '(book)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('punched-in-the-face', 'pumpkin', 'repressed-memory', 'daruma-doll', 'saline-injection')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%2%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_86": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as William Weaver)', '(as Valy Verdy)', '(as Bob Cunniff)', '(as Akos G.)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('betting', 'barcelona-spain', 'greenie', 'virtue', 'michael-bubl\u00c3\u00a9')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_87": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Noro)', '(as Richard Ault)', '(as Mikey Butders)', '(as Sean Doherty)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('third-part', 'long-title', 'vocalist', 'penguin', 'op-art')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%4%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_88": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as V.C. Dupree)', '(as Lauren)', '(as Brian Wade)', '(as Booty Licious)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('hunt', 'morbid-angel', 'drop-in-center', 'crime-writer', 'uxoricide')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_89": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Philippines)', '(as Nikki Sixx)', '(as Drea)', '(as Lisa Crosato)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('betting', 'mein-kampf', 'grimm''s-fairy-tales', 'drug-abuser', 'dead-prostitute')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_90": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Erica Rhodes)', '(as Diamond 4Ever)', '(as Jim W. Barhett)', '(Bareback Rider)')\nAND cn.country_code = '[us]'\nAND it.info = 'budget'\nAND k.keyword IN ('punched-in-the-face', 'pack-of-dogs', 'atitlan', 'sense-of-taste', 'barrricaded-door')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%$%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_91": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sake)', '(as Nicole Elane)', '(Queen guitarist)', '(as Heather Leer)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('investigation', 'robot-woman', 'ghoul', 'olympic-medal', 'ten-commandments')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%g%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_92": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Ororo Munroe)', '(as Swedlana)', '(as Arnau Valls)', '(as Nick Hurwitch)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('period-in-title', 'sex-degenerate', 'political-primary', 'girl-with-glasses', 'american-eagle')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%m%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_93": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sandra Stern)', '(as Haley Gilbert)', '(as August Warwick)', '(set medic)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('blonde', 'streaking', 'harvard-university', 'suitcase', 'throat-ripping')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%M%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_94": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Olga Mattei)', '(as Eric Reinholdt)', '(as Carlee)', '(as Tom Friedman)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('accidental-killing', 'mercilessness', 'fig-leaf', 'murder-of-husband', 'amateur-pornography')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_95": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ida Ivanovic)', '(as Chad E. Rook)', '(as Lillian Tiger)', '(Poison)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('military', 'blowing-kiss', 'wrecking-ball', 'cooking-oil', 'fried-chicken')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%1%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_96": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Dennis Irwin)', '(as PH Debies)', '(as Pat Moran)', '(as Mai Lynn)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('third-part', 'ghostly-sound', 'absent-father', 'washed-up-star', 'tied-in-a-bathtub')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_97": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Joe Taurus)', '(as Mily Jay)', '(video \"Loreen\")', '(as Maxx Blacque)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('explosion', 'indoctrination', 'bleeding-mouth', 'videodance', 'lunar-lander')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_98": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(16mm)', '(as Suzanna April)', '(as Anna Nass)', '(as Nautica Thorne)')\nAND cn.country_code = '[de]'\nAND it.info = 'languages'\nAND k.keyword IN ('period-in-title', 'monster', 'fireplace', 'gig', 'futurama')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_99": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as David Siegel)', '(as Selene)', '(as Haileey James)', '(quotes)')\nAND cn.country_code = '[de]'\nAND it.info = 'color info'\nAND k.keyword IN ('python', 'keyhole', 'captain', 'tenor', 'never')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%C%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_100": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(content manager)', '(as Leigh Slawner)', '(as Gabor Nagy)', '(as Kimber Winters)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('investigation', 'sketch-comedy', 'tabloid', 'slave-boy', 'comedy-troupe')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_101": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Bruno)', '(as Sylvie Sinner)', '(as Brooke Parker)', '(as Richard Largin)')\nAND cn.country_code = '[ca]'\nAND it.info = 'tech info'\nAND k.keyword IN ('disco', 'vallone', 'underage-girl', 'fight-with-self', 'altar')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%c%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_102": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(\"Ashes to Ashes\")', '(as Bob LaGrange)', '(as Andreas Hof)', '(as Sony Forbes)')\nAND cn.country_code = '[ca]'\nAND it.info = 'tech info'\nAND k.keyword IN ('snake', 'indiana-university', 'conundrum', 'georges-melies', 'poison-apple')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_103": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Daisey McClane)', '(as Lauren Knust)', '(as Lianna)', '(as Leda Parish)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('flame-thrower', 'walking-cane', 'hysterical-female', 'car-run-over', 'laser-cannon')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%,%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_104": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Marcy Goldberg)', '(office caterer)', '(as Dann T. Mann)', '(as John Lloyd)')\nAND cn.country_code = '[ca]'\nAND it.info = 'genres'\nAND k.keyword IN ('soldier', 'joseph-campbell', '11-year-old', 'creepshow', 'windmill')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%H%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_105": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Dr. Feelgood)', '(as Vienna)', '(as Sabine)', '(as Chuck Zane)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('period-in-title', 'tarantula', 'drone-crash', 'hand', 'nipples')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_106": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tony Cordiero)', '(as Angie)', '(as Bobby Dazzler)', '(as Ronald Gates)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('punched-in-the-face', 'arrogance', 'mortuary', 'tough-cop', 'male-sexuality')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_107": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sean Fenton)', '(as Hope Carlton)', '(as Ben Stephens)', '(as Nicki Randall)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('soldier', 'children''s-favorite', 'hong-kong', 'gun-safety', 'beach-life')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%4%' OR mi.info LIKE '%4%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_108": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(with Hull)', '(as Brian Spence)', '(film transfer)', '(as Matt Johnson)')\nAND cn.country_code = '[ar]'\nAND it.info = 'genres'\nAND k.keyword IN ('pubic-hair', 'apollo-13', 'murder-of-lover', 'paralytic', 'animated-nudity')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_109": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(chat)', '(as Amy Damkroger)', '(as Bakey)', '(as Lenny Walsh)')\nAND cn.country_code = '[de]'\nAND it.info = 'genres'\nAND k.keyword IN ('flame-thrower', 'northern-ireland', 'pet-owner', 'dead-woman', 'cameos')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_110": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Werner)', '(episode 1 and 3)', '(as Mo Flam)', '(security head)')\nAND cn.country_code = '[us]'\nAND it.info = 'runtimes'\nAND k.keyword IN ('disco', 'movie-clip', 'incest-joke', 'pigtails', 'yokohama-japan')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_111": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kristin Bryant)', '(as Brooke Taylor)', '(manager: it)', '(as Zoli)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND k.keyword IN ('announcer', 'scotland-yard', 'bowie-knife', 'gay-70s', 'car-racing')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_112": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Miss May 1996)', '(as Nick Livesey)', '(as Eugene Osment)', '(as Ashley Morgan)')\nAND cn.country_code = '[ar]'\nAND it.info = 'tech info'\nAND k.keyword IN ('third-part', 'rape-fantasy', 'witness-to-a-crime', 'live-bait', 'food-fight')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_113": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Kajsa''s brother)', '(source cues)', '(as Kate Maloney)', '(as Oshun)')\nAND cn.country_code = '[de]'\nAND it.info = 'copyright holder'\nAND k.keyword IN ('blonde', 'self-empowerment', 'lindsay-lohan', 'self-narration', 'japanese-food')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%4%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_114": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kahfee)', '(as Rafael Sanchez)', '(as Wade Hardmen)', '(as Kira Black)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('train-station', 'cartoon-company', 'santa', 'saliva', 'visual-comedy')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%:%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_115": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Hong Wah)', '(Vista)', '(as Ebony Ayres)', '(voice and hand)')\nAND cn.country_code = '[us]'\nAND it.info = 'plot'\nAND k.keyword IN ('blood', 'dog-bite', 'post-nuclear', 'pyramid-scheme', 'twitter')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_116": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(vision control)', '(as Lukas Vostry)', '(as Jorge Reyna)', '(as Scott Irsh)')\nAND cn.country_code = '[de]'\nAND it.info = 'release dates'\nAND k.keyword IN ('disco', 'girl-covered-in-cum', 'anthropology', 'humor', 'episodic-structure')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_117": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Jazmin Ryder)', '(as Messy)', '(as Raitis)', '(as Lynn Rae)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('dancing', 'mitsubishi-eclipse', 'formula-1', 'plastic-wrap', 'report')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_118": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Eva Nera)', '(as Klaus)', '(segment \"Abadon\")', '(as The Messiah)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('third-part', 'egg', 'mighty', 'printing-press', 'shipwrecked')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_119": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Mike Wood)', '(as Lawrence Unger)', '(as Run-DMC)', '(as D. Cimarosa)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('investigation', 'drug-money', 'armor', 'chicken-pox', '26th-century')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_120": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Trixie Love)', '(girl in cafe)', '(segment 7)', '(D vision)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('animal-in-title', 'sandwich', 'lusitania', 'buckskin-dress', 'dionysus')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_121": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Nelly)', '(as Ciara Griffin)', '(as Finn Hageman)', '(as Robert Fotrer)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('antivenin', 'cocktail-waitress', 'judgment-day', 'troublemaker', 'online')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_122": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Nadache Rose)', '(as Tess A)', '(as Candy Adams)', '(manager: band)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('punched-in-the-face', 'tv-mini-series', 'harem-costume', 'humility', 'newcastle-england')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%I%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_123": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Maikel)', '(as Adam Redmond)', '(as Paul Cagney)', '(as Mike Quasar)')\nAND cn.country_code = '[de]'\nAND it.info = 'tech info'\nAND k.keyword IN ('python', 'utah-festival-opera', 'orleans-france', 'maryland', 'golden-shower')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%8%' OR mi.info LIKE '%1%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_124": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(overall designer)', '(as Harris Rehana)', '(as Dano Janda)', '(as Rick Bowe)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('military', 'williamsburg', 'israeli', 'invasion', 'unfaithfulness')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_125": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(ballet)', '(as Jayson Vades)', '(as Georgia)', '(as The Big Show)')\nAND cn.country_code = '[de]'\nAND it.info = 'locations'\nAND k.keyword IN ('spectator', 'late-night', 'caucasus', 'mysterious-stranger', 'hard-rock')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_126": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Francesca Sin)', '(as Jonnie Black)', '(as Shelbree Starr)', '(sex tour guide)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('abbreviation-in-title', 'submissive-woman', 'carny', 'epitaph', 'cooking')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_127": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Samira Kiss)', '(Kelsey)', '(as Jon Kinyon)', '(background paint)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('blonde', 'greenhouse', 'tumult', 'rating', 'newcastle-united')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_128": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(producer)', '(Shinesman Sepia)', '(as Gavril Patru)', '(as Mimi Fallace)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('betting', 'king', 'voice-training', 'machu-picchu', 'hostage-situation')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_129": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Miss October 1986)', '(as Tequila)', '(as Franco 30lance)', '(as Heather Gagnon)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('philadelphia-pennsylvania', 'magical-realism', 'disease', 'triceratops', 'child-care')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_130": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment \"Mud\")', '(as Kofi Adjololo)', '(Miss January 1994)', '(insterstitals)')\nAND cn.country_code = '[ar]'\nAND it.info = 'genres'\nAND k.keyword IN ('third-part', 'olympian', 'environmental-crime', 'anti-social', 'giallo')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%c%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_131": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(lyrics)', '(as Dom Casier)', '(as Ferrara)', '(head mechanic)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('airport', 'macguffin', 'sexual-encounter', 'condensation', 'donation')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_132": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Anastasia Vega)', '(Manga UK dub)', '(Bridgette)', '(as Desiree Fox)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('accidental-killing', 'scrap-metal', 'gospel-music', 'series-in-series', 'olympic-athlete')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_133": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(dog trainer)', '(as Marc Ashley)', '(as Timbaland)', '(trombonist)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('accidental-killing', 'quince', 'school-festival', 'misspelled-word', 'brood')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%p%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_134": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kamasu)', '(as Godiva)', '(as London Keys)', '(as Hilary Dusome)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('scientist', 'suicidal-guy', 'rite-of-passage', 'gold-fever', 'bugs')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%3%' OR mi.info LIKE '%3%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_135": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tanya Tucker)', '(as Richie Bray)', '(story manager)', '(as Jessica Koks)')\nAND cn.country_code = '[ca]'\nAND it.info = 'locations'\nAND k.keyword IN ('atlantic-city-new-jersey', 'trivial-pursuit', 'infanticide', 'flamboyance', 'blurred-nudity')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_136": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Jane Davil)', '(satan)', '(as Amy)', '(as Alisha Jordean)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('pubic-hair', 'wicca', 'open-ended', 'lew-wallace', 'air-traffic-control')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_137": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Jim Hawkinson)', '(as Rich Masters)', '(as Gen Padove)', '(as Curtis Grann)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('abbreviation-in-title', 'record-company', '1940s', 'socks', 'mafia-don')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_138": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Joel)', '(as Nick Miller)', '(as Jeff Duran)', '(The Ax)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('scientist', 'jester', 'caught-shoplifting', 'animal-penis', 'number-as-title')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_139": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(digital effects)', '(as Sabrina Blue)', '(as Jordon)', '(as Cara Johnson)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('explosion', 'athlete', 'racial-antipathy', 'jungle-explorer', 'android')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%p%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_140": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Christi Lane)', '(segment \"Scream\")', '(as Cassie Pelan)', '(as Milo)')\nAND cn.country_code = '[ca]'\nAND it.info = 'plot'\nAND k.keyword IN ('pubic-hair', 'ex-porn-star', 'oval-office', 'eternal-love', 'hook')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%B%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_141": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Merrill Jenson)', '(as Halli)', '(as Travis)', '(as Dave Rusell)')\nAND cn.country_code = '[us]'\nAND it.info = 'tech info'\nAND k.keyword IN ('announcer', 'disciple', 'kendo', 'underwater-escape', 'altered-states')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%R%' OR mi.info LIKE '%:%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_142": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Becca Bratt)', '(jefe de staff)', '(as Kark Dumber)', '(as Taylir)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('atlantic-city-new-jersey', 'graft', 'sink', 'grandmother', 'cut-on-face')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_143": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ariel Carmine)', '(as June Bower)', '(as Nikki Dee)', '(as Mark Wiszowaty)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('accidental-killing', 'loser', 'bouncing-breasts', 'aqueduct', 'friendly-fire')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_144": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ngozi Ike)', '(as Dr. Paul Gooch)', '(as Rend)', '(as Porsha Ride)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('announcer', 'alien-as-woman', 'transubstantiation', 'chiropractor', 'swarm-of-bats')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_145": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Said Legue)', '(as Susan Froemke)', '(as Mike Anthony)', '(on-set masseuse)')\nAND cn.country_code = '[ar]'\nAND it.info = 'countries'\nAND k.keyword IN ('news-report', 'non-fiction', 'walking-cane', 'tattoo', 'eight-word-title')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%U%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_146": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Cherie Gavuer)', '(vice president)', '(as Mark Mathews)', '(as Chanel Staxxx)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('corpse', 'sundae', 'reference-to-plato', 'turkey-the-bird', 'quo')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%S%' OR mi.info LIKE '%p%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_147": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Boo D. Licious)', '(as Joackim Kessef)', '(as Richard Marin)', '(chief director)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('disco', 'lasciviousness', 'trapped-in-tv', 'female-politician', 'lawn-jockey')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%m%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_148": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Miles Zakheim)', '(as Sap\u00c3\u00a3o)', '(as Titpig Hurley)', '(as Agnes Faludi)')\nAND cn.country_code = '[de]'\nAND it.info = 'taglines'\nAND k.keyword IN ('investigation', 'big-city', 'survivor-guilt', 'applause', 'darcie')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%o%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_149": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Daren James)', '(as Sandra Stuart)', '(as Marky Mark)', '(as Elodie)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('blonde', 'rockumentary', 'tied-to-a-table', 'balloon', 'fake-relative')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_150": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kayia Lynn)', '(talent relations)', '(Brandi Lyons)', '(as Desire Dupre'')')\nAND cn.country_code = '[de]'\nAND it.info = 'sound mix'\nAND k.keyword IN ('dancing', 'mountain-cabin', 'mc5', 'burn', 'film-series')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%t%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_151": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Akros Matyas)', '(as Rich Raines)', '(as Bella Feega)', '(as Brad Gregford)')\nAND cn.country_code = '[ca]'\nAND it.info = 'copyright holder'\nAND k.keyword IN ('punched-in-the-face', 'apollo-14', 'belief-in-god', 'pulling-tooth', 'spaceflight-test')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_152": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sheena Horn)', '(as Yukihide Benii)', '(as Amie Austin)', '(as Julia Silver)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('train-station', 'brain-out-of-head', 'alumni', 'cinema-history', 'name-calling')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_153": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Samson)', '(as Haylee)', '(as Bill Fergeson)', '(tour security)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('airport', 'photogrammetry', 'eating-human-flesh', 'winner', 'nixon')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%b%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_154": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sandor)', '(as Jeffrey Hunt)', '(as John J. Karyus)', '(as Phil Dunbridge)')\nAND cn.country_code = '[de]'\nAND it.info = 'taglines'\nAND k.keyword IN ('soldier', '17th-century', 'computer-genius', 'fingerprints', 'departure')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_155": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Manuel Ferrera)', '(as Bob Lydecker)', '(as Janet Reddix)', '(as Shennin)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('subway', 'mexican-border', 'decorative-painting', 'traitor', 'ginger')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_156": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Big Lez)', '(cast security)', '(as Dixie)', '(as Tatianna Varga)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('abbreviation-in-title', 'carnival', 'nude-talking', 'counting', 'camera-shot-of-feet')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%M%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_157": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Kim Katane)', '(as Ari Green)', '(as Kate Hinton)', '(chief)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('pubic-hair', 'woman-in-jeopardy', 'goalie', 'rugby', 'tv-show-in-film')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%y%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_158": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Katie Lewis)', '(as Syd Michief)', '(as Stephen Grimes)', '(as Betsie)')\nAND cn.country_code = '[ca]'\nAND it.info = 'goofs'\nAND k.keyword IN ('dancing', 'one-liner', 'lily-pad', 'adult-filmmaker', 'cartoon-spider')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%h%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_159": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Jamie Freitag)', '(as Olivea Del Rio)', '(as Brita)', '(as Ron L. Coons)')\nAND cn.country_code = '[ar]'\nAND it.info = 'countries'\nAND k.keyword IN ('reptile', 'glenn-strange', 'mysterious-death', 'cannabis-use', 'pluto-the-character')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_160": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Mandingo)', '(as Salina)', '(as Tim Sexton)', '(as Amaya Summer)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('news-report', 'social-documentary', 'robbery-victim', 'domino''s-pizza', 'miracle')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%R%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_161": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rob Paller)', '(as Tommie)', '(as Sussan Obi)', '(as Art Barnes)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('blood', 'senator', 'spritual-film', 'run-over-by-a-car', 'kickflip')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%n%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_162": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Wenston Love)', '(as Rocco Siffredy)', '(as Billy Boy)', '(as Mrs. T. Clark)')\nAND cn.country_code = '[ca]'\nAND it.info = 'release dates'\nAND k.keyword IN ('period-in-title', 'sex-with-a-coworker', 'hide-out', 'mugger', 'documentary-footage')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%O%' OR mi.info LIKE '%2%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_163": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Guest Keyboardist)', '(as Ola Mckenzie)', '(Ireland segment)', '(Spectre)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('soldier', 'dark-hero', 'pet-dog', 'bank', 'bad-wig')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%u%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_164": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Pat Allegiance)', '(as Thom Fendley)', '(as Stella Queen)', '(film provided by)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('snake', 'future-time-travel', 'woman-losing-pants', 'chastity', 'condom')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%r%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_165": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Behtany Lott)', '(as Tracy Scott)', '(as Natasha)', '(lead checker)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('reptile', 'bentwaters', 'ivory', 'stenciling', 'lost-father')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%6%' OR mi.info LIKE '%y%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_166": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sylvie Sun)', '(as Barry Mel Rose)', '(as Paul Nevitt)', '(as Des Saunders)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('airport', 'scissoring', 'toy-store', 'hung-upside-down', 'preview')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_167": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Teddy Bearit)', '(as Judyth)', '(as John Shadrach)', '(as Leo DeSilver)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('train-station', 'sun-tzu', 'femdom', 'dna-testing', 'fortune-teller')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_168": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tee Real)', '(as VixXxen)', '(as Slim Williams)', '(as Brian Wade)')\nAND cn.country_code = '[de]'\nAND it.info = 'budget'\nAND k.keyword IN ('antivenin', 'pinball', 'trust-fund', 'misconception', 'funeral-home')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%$%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_169": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(video \"Confusion\")', '(as Steve Pelican)', '(as Eddie Ting)', '(as Rebeca White)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('second-part', 'national-security', 'hand-camera', 'faithful-dog', 'bachelor-party')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%k%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_170": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tony De Sergio)', '(as Steliana)', '(as Irina)', '(as Molly Stroud)')\nAND cn.country_code = '[ca]'\nAND it.info = 'budget'\nAND k.keyword IN ('reptile', 'opera', 'tickle', 'bono-look-alike', 'spinach')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_171": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Nicki Blond)', '(as Laszlo F.)', '(as Ondra)', '(as Vladka Kopal)')\nAND cn.country_code = '[us]'\nAND it.info = 'mpaa'\nAND k.keyword IN ('airport', 'diabolical-laugh', 'reverse-motion', 'breakfast-in-bed', 'cutting')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_172": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Jef Hickey)', '(as Venoly)', '(as Desiree Russo)', '(as Asiadreams)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('third-part', 'woman-professor', 'silver-bullet', 'valley-girl', 'devotional')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%k%' OR mi.info LIKE '%i%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_173": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Rico Lowry)', '(as Wanessa)', '(as Tamara Apted)', '(as Bryan Dakota)')\nAND cn.country_code = '[de]'\nAND it.info = 'certificates'\nAND k.keyword IN ('buttocks', 'armenian-american', 'rock-guitar', 'lying-on-a-couch', 'yuppie')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_174": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment \"Retreat\")', '(as Natali Brown)', '(as C. Ray Nagin)', '(as MaxiMaxx)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('abbreviation-in-title', 'belly-dancing', 'leg-fetish', 'prison-escape', 'high-school-girl')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%u%')\nAND n.gender = 'm'\nAND n.name LIKE '%p%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_175": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Drew)', '(as Lala)', '(life guard)', '(score by)')\nAND cn.country_code = '[ar]'\nAND it.info = 'filming dates'\nAND k.keyword IN ('hunt', '1700s', 'peace-activist', 'deforestation', 'petition')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%0%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%S%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_176": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(producer: HDNet)', '(as Victoria Rosse)', '(as Fay DeBois)', '(as Kitty Saviec)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('announcer', 'big-sister', 'garden-shears', 'tv-film', 'blown-cover')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_177": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Toni De Sergio)', '(as Fabyana Kanavo)', '(as J.D. Lopez)', '(as Andrew Hodges)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('animal-in-title', 'pick-axe', 'avalanche', 'plastic-surgery', 'muscleman')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%b%' OR mi.info LIKE '%R%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_178": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Laszlo Virag)', '(as Gary Brickman)', '(as Rikki Lixxx)', '(as Andre Ribiero)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('flame-thrower', 'fear-of-hell', 'terrorist-attack', 'dave-crawley', 'wedding-reception')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_179": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Regan Star)', '(as Kody)', '(as Ondrej)', '(as Tatjana)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('train-station', 'forest-of-crosses', 'woman-fights-a-man', 'sex-work', 'pushed-down-stairs')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_180": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(stand-in: Faith)', '(as Lulu)', '(as Americana)', '(as Felicia Foxx)')\nAND cn.country_code = '[us]'\nAND it.info = 'copyright holder'\nAND k.keyword IN ('shot-in-the-chest', 'long-title', 'political-criminal', 'venice-italy', 'chain-of-command')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%r%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_181": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(segment \"Rapture\")', '(epk shooter)', '(as Sidney Capri)', '(as Victor L\u00c3\u00b3pez)')\nAND cn.country_code = '[ar]'\nAND it.info = 'countries'\nAND k.keyword IN ('third-part', 'mini-submarine', 'recording-studio', 'holy-blood', 'sunspot')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%U%' OR mi.info LIKE '%A%')\nAND n.gender = 'm'\nAND n.name LIKE '%k%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_182": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Meena)', '(as Rocky Buresh)', '(as Kristina Holm)', '(as Lisanne)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('buttocks', 'imitate', 'closed-circuit-tv', 'mcdonalds', 'burlesque')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%s%' OR mi.info LIKE '%h%')\nAND n.gender = 'm'\nAND n.name LIKE '%u%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_183": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tina Tinova)', '(video \"You Lie\")', '(as Amber Rox)', '(as Toby Eck)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('announcer', 'contradiction', 'cyborg-double', 'goldfish', 'blondie')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%4%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_184": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Stefan Dogaru)', '(as Kathy Caro)', '(as Zara)', '(as Tia Son)')\nAND cn.country_code = '[ca]'\nAND it.info = 'locations'\nAND k.keyword IN ('pubic-hair', 'survival-training', 'interrupted-sex', 'gay-wedding', 'glowing-eyes')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%l%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_185": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Ashley)', '(as Eszter)', '(as Nicoletta Rush)', '(as Pat Oseni)')\nAND cn.country_code = '[us]'\nAND it.info = 'certificates'\nAND k.keyword IN ('third-part', 'rubber-boat', 'marriage', 'babylon-babylonia', 'lockdown')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%G%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_186": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Johhny Paoline)', '(mastered by)', '(Kystbasse)', '(as Myron Vasquez)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('news-report', 'guster', 'milwaukee-wisconsin', 'quantum-fiction', 'hangover')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_187": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Enike)', '(as Joyce Lopez)', '(video \"Victory\")', '(as Sany Haydal)')\nAND cn.country_code = '[ca]'\nAND it.info = 'languages'\nAND k.keyword IN ('shot-in-the-chest', 'venom', 'manchester', 'metamorphosis', 'wrongful-arrest')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%n%' OR mi.info LIKE '%s%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_188": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Buster Goode)', '(assistant AVI)', '(as Bret Parker)', '(as Wakaana)')\nAND cn.country_code = '[ar]'\nAND it.info = 'goofs'\nAND k.keyword IN ('punched-in-the-face', 'soapland', 'murder-contract', 'athlete', 'chameleon')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%z%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_189": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Vivien Tora)', '(as Stanislas)', '(as Jon Douglas)', '(as Dolores)')\nAND cn.country_code = '[us]'\nAND it.info = 'genres'\nAND k.keyword IN ('hunt', 'liquor', 'hand-over-mouth', 'sex-on-grave', 'faberge''-chess-set')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%i%' OR mi.info LIKE '%t%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_190": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Sid Ganis)', '(as Karren Summers)', '(as Mark Altman)', '(as Megumi Terase)')\nAND cn.country_code = '[ca]'\nAND it.info = 'locations'\nAND k.keyword IN ('shot-to-death', 'tiger', 'parties', 'musical-education', 'chop-socky')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%g%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_191": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Natali)', '(as Syndee Coxx)', '(ceo)', '(as Edwado Dinero)')\nAND cn.country_code = '[ca]'\nAND it.info = 'certificates'\nAND k.keyword IN ('train-station', 'nomeansno', 'surfing', 'grave-robber', 'omega')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%5%' OR mi.info LIKE '%S%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_192": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(motion media)', '(as Jacky Brown)', '(as DJ Kay Slay)', '(as Jill Moore)')\nAND cn.country_code = '[us]'\nAND it.info = 'goofs'\nAND k.keyword IN ('explosion', 'burning-city', 'mob-killing', 'foreskin', 'blind-girl')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_193": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(during love scene)', '(as Ruslan Karpov)', '(German version)', '(as Corinna Anne)')\nAND cn.country_code = '[ar]'\nAND it.info = 'release dates'\nAND k.keyword IN ('thong-swimsuit', 'strangling-a-boy', 'murder-of-lover', 'sympathy-sex', 'head-spin')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%y%' OR mi.info LIKE '%0%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_194": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Everlast)', '(as Vaclam Skipala)', '(as Kathy Moore)', '(as Kevin Glover)')\nAND cn.country_code = '[ar]'\nAND it.info = 'certificates'\nAND k.keyword IN ('thong-swimsuit', 'cunnilingus', 'bra-and-panties', 'witch-hunter', 'extension-cord')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%A%' OR mi.info LIKE '%n%')\nAND n.gender = 'm'\nAND n.name LIKE '%i%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_195": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(Cherry Rose)', '(as Rick Desmond)', '(film set)', '(cake baker)')\nAND cn.country_code = '[us]'\nAND it.info = 'release dates'\nAND k.keyword IN ('philadelphia-pennsylvania', 'travel-agent', 'pedicure', 'graduation-ceremony', 'physical-education')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%a%' OR mi.info LIKE '%e%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_196": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lilian)', '(security captain)', '(as Raye D''ance)', '(as Kelly Howe)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('philadelphia-pennsylvania', 'plague', 'hutu', 'urophilia', 'paintbrush')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%e%' OR mi.info LIKE '%d%')\nAND n.gender = 'm'\nAND n.name LIKE '%,%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_197": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Lonnie Colon)', '(as Dave Gebroe)', '(as Liina Olmaru)', '(as Scott Colby)')\nAND cn.country_code = '[de]'\nAND it.info = 'goofs'\nAND k.keyword IN ('atlantic-city-new-jersey', 'sex-in-pool', 'garage', 'shanghai-china', 'abandoned-car')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%p%' OR mi.info LIKE '%a%')\nAND n.gender = 'm'\nAND n.name LIKE '%e%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_198": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Telicious)', '(as Shauna Harris)', '(2002)', '(as Bob Baldassari)')\nAND cn.country_code = '[de]'\nAND it.info = 'color info'\nAND k.keyword IN ('train-station', 'cowhand', 'motorscooter', '21st-birthday', 'bulletproof-vest')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%r%')\nAND n.gender = 'm'\nAND n.name LIKE '%a%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;",
    "24-0_testing_199": "SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng\nFROM cat_aka_name_4 AS an,\n   cat_char_name_4 AS chn,\n   cat_cast_info_4 AS ci,\n   cat_company_name_4 AS cn,\n   cat_info_type_4 AS it,\n   cat_keyword_4 AS k,\n   cat_movie_companies_4 AS mc,\n   cat_movie_info_4 AS mi,\n   cat_movie_keyword_4 AS mk,\n   cat_name_4 AS n,\n   cat_role_type_4 AS rt,\n   cat_title_4 AS t\nWHERE t.id = mi.movie_id\nAND t.id = mc.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND mc.movie_id = ci.movie_id\nAND mc.movie_id = mi.movie_id\nAND mc.movie_id = mk.movie_id\nAND mi.movie_id = ci.movie_id\nAND mi.movie_id = mk.movie_id\nAND ci.movie_id = mk.movie_id\nAND cn.id = mc.company_id\nAND it.id = mi.info_type_id\nAND n.id = ci.person_id\nAND rt.id = ci.role_id\nAND n.id = an.person_id\nAND ci.person_id = an.person_id\nAND chn.id = ci.person_role_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Spike Dauner)', '(as Tabatha Fox)', '(as Karl)', '(as Stacie Burke)', '(as Kelli Farmer)')\nAND cn.country_code = '[ca]'\nAND it.info = 'color info'\nAND k.keyword IN ('shot-to-death', 'sexual-exploration', 'battle-royal', 'army-hospital', 'undercover-agent')\nAND mi.info IS NOT NULL\nAND (mi.info LIKE '%o%' OR mi.info LIKE '%l%')\nAND n.gender = 'm'\nAND n.name LIKE '%D%'\nAND rt.role = 'actor'\nAND t.production_year > 2003;"
}