iteration,params,plan_id,confidence,plan_content
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5461366,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '1950']",188,0.55038476,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'm', '1990']",188,0.55899113,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '1990']",188,0.55187166,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""USA', 'America"", 'm', '1950']",188,0.53580695,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",188,0.5493758,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5459328,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5494556,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5575957,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55176836,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Germany', 'German"", 'm', '1990']",188,0.5437932,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5349602,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.54753333,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Germany', 'German"", 'm', '1990']",188,0.5437932,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5408245,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1950']",188,0.54318297,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5501133,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '1990']",188,0.54608333,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5372656,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1950']",188,0.54318297,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Thriller"", 'm', '1990']",188,0.5489889,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'm', '1990']",188,0.5466123,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",188,0.54487574,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54137766,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '1950']",188,0.53987765,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Drama', 'Horror"", 'm', '1990']",188,0.5615945,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Thriller"", 'm', '1950']",188,0.5500846,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5445376,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5494556,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.5536369,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.543239,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '1990']",188,0.54418653,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5508226,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1950']",188,0.542522,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1950']",188,0.53084284,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5571745,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",188,0.5405104,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.5539949,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.54821473,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5329316,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5400742,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5349602,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5578539,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5459935,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.55142576,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5465198,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5499591,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5372128,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5461366,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.55148554,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.5478305,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.55294895,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.539678,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",188,0.5450395,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55530566,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5459328,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5392023,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5567243,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54463995,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'm', '1990']",188,0.54316413,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5412962,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5349602,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5349602,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1990']",188,0.5518996,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5414023,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1990']",188,0.5445981,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5459328,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55251205,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5475936,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror"", 'm', '1990']",188,0.5585172,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1950']",188,0.5407892,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5411589,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Thriller"", 'm', '1990']",188,0.5503481,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5449319,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",188,0.5414403,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5575957,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.549244,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm', '1950']",188,0.5424152,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.549244,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5400742,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",188,0.54611003,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.55091035,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'top 250 rank', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '1990']",188,0.54266286,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1950']",188,0.53508264,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54801875,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm', '1990']",188,0.54884166,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5400742,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '1990']",188,0.5534363,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1950']",188,0.5304278,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5663921,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.5476897,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5572864,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.54988503,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5508226,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""USA', 'America"", 'm', '1950']",188,0.5376422,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Horror', 'Thriller"", 'm', '1950']",188,0.55424833,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.5537227,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55530566,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'm', '1950']",188,0.54148066,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.548412,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror"", 'm', '1950']",188,0.53827757,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5501796,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5465198,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Thriller"", 'm', '1990']",188,0.5457934,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",188,0.5465958,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5456796,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German', 'USA', 'American"", 'm', '1950']",188,0.5487863,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5412342,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54463995,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.56206197,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '1990']",188,0.5534363,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5354004,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55251205,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54531294,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54137766,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5348339,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5603427,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '1950']",188,0.5449435,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",188,0.5427518,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.54572374,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.54572374,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1950']",188,0.5440468,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5461366,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",188,0.54270667,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5576177,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5572864,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5427639,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55251205,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '1990']",188,0.5453093,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""USA', 'America"", 'm', '1990']",188,0.5430516,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '1990']",188,0.5575765,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55771524,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",188,0.54611963,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'top 250 rank', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54865384,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.54308873,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5392023,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.54741836,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.55149627,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.54682654,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1950']",188,0.52795357,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5501133,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5400742,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'm', '1990']",188,0.55899113,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '1990']",188,0.5534363,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Thriller"", 'm', '1990']",188,0.54174227,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",188,0.5427518,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5358662,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55152524,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5452877,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",188,0.53305024,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'm', '1950']",188,0.5470367,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.53670317,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5543211,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.527216,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '1950']",188,0.5396693,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5471925,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5598308,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.55000436,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5502433,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.55297244,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5443369,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm', '1990']",188,0.5490673,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.54173285,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '1990']",188,0.5575765,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",188,0.5467201,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'm', '1990']",188,0.55925167,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",188,0.5358662,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5483312,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.549336,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5452877,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",188,0.54963726,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5475345,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5427639,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Thriller"", 'm', '1990']",188,0.546703,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5498873,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5472348,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.569912,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1950']",188,0.5340732,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5552713,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",188,0.54611003,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '1990']",188,0.56193423,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5452877,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.5432495,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '1950']",188,0.53808945,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",188,0.5424243,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.54988503,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Thriller"", 'm', '1950']",188,0.5500846,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.5501133,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '1950']",188,0.5422101,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'top 250 rank', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.53650093,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",188,0.5452877,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.54596215,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",188,0.53644234,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.54988503,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",188,0.5476897,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '1990']",188,0.5513293,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1950']",188,0.5289409,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '1990']",188,0.54032123,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",188,0.55251205,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror"", 'm', '1950']",188,0.54185444,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_1) SeqScan(cc) SeqScan(cct2) SeqScan(cct1) IndexScan(t sampled_title_1_pkey) IndexScan(ci movie_id_cast_info_1) IndexScan(n sampled_name_1_pkey) IndexScan(mi movie_id_movie_info_1) IndexScan(it1 sampled_info_type_1_pkey) IndexScan(mi_idx movie_id_movie_info_idx_1) IndexScan(it2 sampled_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(cc cct2 cct1) HashJoin(k mk cc cct2 cct1) NestLoop(k mk cc cct2 cct1 t) NestLoop(k mk cc cct2 cct1 t ci) NestLoop(k mk cc cct2 cct1 t ci n) NestLoop(k mk cc cct2 cct1 t ci n mi) NestLoop(k mk cc cct2 cct1 t ci n mi it1) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx) NestLoop(k mk cc cct2 cct1 t ci n mi it1 mi_idx it2) Leading((((((((((k mk) ((cc cct2) cct1)) t) ci) n) mi) it1) mi_idx) it2)) */
