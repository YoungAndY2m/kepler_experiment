iteration,params,plan_id,confidence,plan_content
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.59029907,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5929143,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.58694607,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.57825476,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '2000']",101,0.59057164,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.605571,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6098907,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.5749305,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",101,0.5953782,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",101,0.5770722,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German"", 'm', '2000']",101,0.59758204,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2000']",101,0.5773822,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1990']",101,0.5781491,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2005']",101,0.57842106,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.59517086,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Thriller"", 'm', '2000']",101,0.58519745,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2005']",101,0.5919439,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Thriller"", 'm', '2000']",101,0.5914814,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.5792907,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2005']",101,0.5789205,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",101,0.5826393,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5753344,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '2000']",101,0.5881389,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '1990']",101,0.5854845,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '2005']",101,0.58921,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",101,0.5687917,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.58105236,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2005']",101,0.58801657,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German"", 'm', '2000']",101,0.60095704,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5891193,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2000']",101,0.5898894,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2005']",101,0.5751758,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.5880775,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",101,0.57777166,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2005']",101,0.5789623,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5980207,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5886047,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6062264,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",101,0.5872838,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5873486,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Drama', 'Horror"", 'm', '2005']",101,0.57089436,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '2000']",101,0.5815088,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '1950']",101,0.60021967,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '2000']",101,0.59297,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5880728,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '2005']",101,0.5747459,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5922215,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",101,0.5726937,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '2000']",101,0.58581376,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '2005']",101,0.58843195,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2005']",101,0.580485,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'm', '2005']",101,0.5834914,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6061449,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5850204,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",101,0.5750036,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",101,0.5808497,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.57555276,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6050808,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '2005']",101,0.5831587,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5864209,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2000']",101,0.57580453,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.58001447,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",101,0.5856829,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.57271045,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2000']",101,0.5705676,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2005']",101,0.5998335,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.58981496,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6009057,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.58197474,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5954157,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6089147,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5780533,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.58611643,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'Bulgaria', 'm', '1950']",101,0.5804671,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.59748644,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '2000']",101,0.59092534,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.57881033,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2000']",101,0.6073648,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2005']",101,0.58926797,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.6036655,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5780533,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.57047665,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5794953,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1950']",101,0.5740062,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",101,0.5891367,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'm', '1950']",101,0.58533686,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",101,0.59481573,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",101,0.6013562,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.59950066,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '2000']",101,0.5757596,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2005']",101,0.584371,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5876853,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",101,0.5697881,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2005']",101,0.59302336,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2005']",101,0.5772035,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5765827,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2005']",101,0.5844592,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5829497,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",101,0.5862727,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5796657,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2005']",101,0.59791034,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5796657,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.58092666,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '1990']",101,0.587024,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6069548,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Thriller"", 'm', '1990']",101,0.5877465,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""USA', 'America"", 'm', '2005']",101,0.5888302,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '2005']",101,0.5813736,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.56726956,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",101,0.5770722,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",101,0.57165694,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",101,0.5837116,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.6009057,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.57496023,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.59806085,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.5833969,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1990']",101,0.57367927,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5935896,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5876186,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.6061333,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5763119,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",101,0.5765278,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.59029907,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5862911,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.59338963,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.58367085,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",101,0.57186687,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.58600944,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5901565,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",101,0.58168995,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5973757,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Thriller"", 'm', '2000']",101,0.5912931,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""USA', 'America"", 'm', '1950']",101,0.5867726,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.5921608,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'm', '2000']",101,0.58338684,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2005']",101,0.585595,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.58557713,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.6008815,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5880728,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Germany', 'German"", 'm', '2005']",101,0.58818746,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",101,0.57946557,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.6003209,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.5831958,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",101,0.5830333,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",101,0.5747907,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",101,0.564112,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5857763,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German"", 'm', '2000']",101,0.5753467,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2009']",101,0.5758214,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Thriller"", 'm', '2005']",101,0.58965945,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(producer)', '(executive producer)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2005']",101,0.56393266,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.5914857,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5815667,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",101,0.57057476,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5990775,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '1990']",101,0.5715235,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2000']",101,0.59541893,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.5755921,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1950']",101,0.5918065,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.6059687,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German', 'USA', 'American"", 'm', '2005']",101,0.59148496,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",101,0.5786477,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5880728,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5803253,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'm', '1990']",101,0.59308285,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5864209,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.6067387,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2005']",101,0.5926673,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'm', '1950']",101,0.5928738,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2005']",101,0.604463,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.59459144,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'votes', ""murder', 'murder-in-title"", ""Germany', 'German', 'USA', 'American"", 'm', '2005']",101,0.5897036,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.58532584,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '1990']",101,0.58988947,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",101,0.583215,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '2005']",101,0.5913298,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",101,0.56820697,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",101,0.5833969,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",101,0.5891562,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5780533,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",101,0.57110155,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",101,0.57696134,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.59338963,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",101,0.5870677,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.5920753,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'votes', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror"", 'm', '2005']",101,0.59695935,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5749984,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '1990']",101,0.58235013,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2000']",101,0.5778493,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.5850165,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2000']",101,0.5953161,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",101,0.5925471,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Thriller"", 'm', '1990']",101,0.5734537,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror"", 'm', '1950']",101,0.5942017,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",101,0.59137285,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.5990775,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",101,0.60261935,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",101,0.5813492,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",101,0.5988595,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",101,0.6002773,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword_random_1) SeqScan(cc) SeqScan(cct2) IndexScan(t random_title_1_pkey) IndexScan(mi movie_id_movie_info_random_1) IndexScan(it1 random_info_type_1_pkey) IndexScan(cct1 random_comp_cast_type_1_pkey) IndexScan(ci movie_id_cast_info_random_1) IndexScan(mi_idx movie_id_movie_info_idx_random_1) IndexScan(n random_name_1_pkey) IndexScan(it2 random_info_type_1_pkey) NestLoop(k mk) HashJoin(cc cct2) HashJoin(k mk cc cct2) NestLoop(k mk cc cct2 t) NestLoop(k mk cc cct2 t mi) NestLoop(k mk cc cct2 t mi it1) NestLoop(k mk cc cct2 t mi it1 cct1) NestLoop(k mk cc cct2 t mi it1 cct1 ci) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n) NestLoop(k mk cc cct2 t mi it1 cct1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct2)) t) mi) it1) cct1) ci) mi_idx) n) it2)) */
