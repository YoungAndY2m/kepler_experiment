iteration,params,plan_id,confidence,plan_content
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Germany', 'German', 'USA', 'American"", '7.0', '2000']",165,0.52016747,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2000']",165,0.5268222,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2005']",165,0.53050953,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(USA)%', '%(co-production)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2000']",164,0.5169644,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2000']",165,0.5124159,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2000']",165,0.52100605,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.52724904,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(2006)%', ""Sweden', 'Germany', 'Swedish', 'German"", '3.0', '1990']",165,0.5202999,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5204304,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",164,0.5164507,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Germany', 'Swedish', 'German"", '7.0', '1950']",165,0.5326171,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2005']",165,0.5287729,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2000']",165,0.5195958,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""murder', 'murder-in-title"", 'movie', '%(USA)%', '%(2007)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.0', '2000']",165,0.52078104,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'top 250 rank', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '2000']",165,0.5159005,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2010']",165,0.5087125,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'tv series', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Horror', 'Thriller"", '8.5', '2000']",165,0.53871715,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(co-production)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.0', '2000']",165,0.5245998,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2006)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '3.0', '1950']",165,0.52881265,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '1990']",165,0.52234125,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2006)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",165,0.5113696,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(co-production)%', ""Sweden', 'Germany', 'Swedish', 'German"", '7.0', '2000']",165,0.52481496,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2000']",165,0.5147492,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2010']",165,0.51927495,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(co-production)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.0', '2005']",165,0.51830655,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(USA)%', '%(Japan)%', ""USA', 'America"", '8.5', '2010']",165,0.5360186,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2010']",164,0.50671893,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(Japan)%', ""Germany', 'German', 'USA', 'American"", '7.0', '2010']",165,0.5260731,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2010']",164,0.5200477,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'bottom 10 rank', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.51372576,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2000']",165,0.52273196,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2000']",164,0.5191335,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(co-production)%', ""Germany', 'German', 'USA', 'American"", '8.5', '1990']",164,0.52085185,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(Blu-ray)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.519544,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(USA)%', '%(worldwide)%', ""Germany', 'German"", '3.0', '1990']",165,0.53603786,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2000']",165,0.5260209,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.5', '1990']",165,0.528727,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(USA)%', '%(Japan)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '1990']",165,0.5111925,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Drama', 'Horror"", '3.0', '1990']",165,0.53301835,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(USA)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.5194739,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2000']",165,0.5203236,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5263014,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Horror', 'Thriller"", '8.5', '2005']",164,0.51869303,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(theatrical)%', ""USA', 'America"", '8.5', '2000']",165,0.5273303,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""movie', 'episode"", '%(USA)%', '%(presents)%', ""Horror', 'Thriller"", '8.5', '2000']",164,0.527942,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.0', '2005']",165,0.51927507,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",165,0.515823,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(co-production)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2000']",165,0.53167784,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5166509,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Drama', 'Horror"", '7.0', '2010']",165,0.52328235,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'tv series', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2006)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.5355172,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Germany', 'German', 'USA', 'American"", '8.5', '1990']",165,0.5178832,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'tv series', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Germany', 'German', 'USA', 'American"", '8.5', '1990']",165,0.5217102,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'murder-in-title"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(Japan)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2000']",165,0.5255204,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'tv series', '%(USA)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.5336487,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.5224854,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(USA)%', '%(co-production)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '3.0', '1990']",165,0.5153882,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '3.0', '2000']",165,0.5302479,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2006)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.0', '1990']",165,0.52448183,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2000']",164,0.5268673,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""USA', 'America"", '7.0', '1950']",164,0.5229064,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2010']",164,0.5120245,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2005']",165,0.52295846,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(theatrical)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '1990']",165,0.52767295,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Drama', 'Horror"", '8.5', '2000']",164,0.52130306,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""movie', 'episode"", '%(USA)%', '%(Japan)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '7.0', '2000']",164,0.52243257,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2000']",165,0.5366119,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""Drama', 'Horror"", '3.5', '2005']",165,0.52993125,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2005']",165,0.53560007,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'movie', '%(USA)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2000']",165,0.52029896,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(theatrical)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2000']",165,0.52764595,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2000']",165,0.51010036,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(2006)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '2000']",165,0.52008015,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2000']",164,0.5140218,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""Germany', 'German"", '8.5', '2000']",164,0.5159068,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'murder-in-title"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2000']",165,0.5264274,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2000']",165,0.5152728,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'top 250 rank', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Germany', 'German', 'USA', 'American"", '7.0', '1990']",165,0.5306584,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(co-production)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2005']",164,0.5329211,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(co-production)%', ""Sweden', 'Germany', 'Swedish', 'German"", '7.0', '2005']",165,0.5246236,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(worldwide)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '1990']",165,0.5198683,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'tv series', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5183763,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(USA)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",165,0.534668,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Germany', 'German', 'USA', 'American"", '8.5', '1950']",164,0.5174288,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '1990']",165,0.5452677,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2010']",165,0.5218973,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Drama', 'Horror', 'Western', 'Family"", '7.0', '2000']",165,0.52612346,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2005']",165,0.52165043,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",161,0.51034135,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexOnlyScan(ct company_type_pkey) IndexScan(kt kind_type_pkey) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 mi_idx) HashJoin(k mk cct1 cc cct2 mi_idx it2) NestLoop(k mk cct1 cc cct2 mi_idx it2 t) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt cn) Leading((((((((((((k mk) ((cct1 cc) cct2)) mi_idx) it2) t) mi) it1) mc) ct) kt) cn)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",161,0.5180557,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexOnlyScan(ct company_type_pkey) IndexScan(kt kind_type_pkey) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 mi_idx) HashJoin(k mk cct1 cc cct2 mi_idx it2) NestLoop(k mk cct1 cc cct2 mi_idx it2 t) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt cn) Leading((((((((((((k mk) ((cct1 cc) cct2)) mi_idx) it2) t) mi) it1) mc) ct) kt) cn)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2005']",165,0.52905184,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""movie', 'episode"", '%(USA)%', '%(France)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '2005']",165,0.5258286,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2005']",165,0.5218814,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Germany', 'German"", '3.5', '1990']",165,0.532171,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[us]', 'countries', 'top 250 rank', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(co-production)%', ""Germany', 'German"", '8.5', '2000']",164,0.52130413,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", 'movie', '%(USA)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.5242784,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.5289049,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '2000']",165,0.5188426,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(200%)%', ""Horror', 'Thriller"", '8.5', '2005']",165,0.5319673,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2010']",164,0.52187407,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2010']",164,0.50850606,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Horror', 'Thriller"", '7.0', '2010']",164,0.51402116,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Drama', 'Horror', 'Western', 'Family"", '3.5', '2000']",165,0.51721066,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Drama', 'Horror', 'Western', 'Family"", '7.0', '2005']",165,0.5253662,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(Blu-ray)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.5', '1990']",165,0.5244233,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(2007)%', ""Sweden', 'Germany', 'Swedish', 'German"", '3.0', '2000']",165,0.5231113,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2000']",164,0.5153981,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""movie', 'episode"", '%(USA)%', '%(co-production)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5193801,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '1990']",164,0.52231914,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.5217007,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Sweden', 'Germany', 'Swedish', 'German"", '3.0', '2000']",165,0.5327135,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '2005']",165,0.52398616,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'tv series', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",161,0.5186058,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexOnlyScan(ct company_type_pkey) IndexScan(kt kind_type_pkey) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 mi_idx) HashJoin(k mk cct1 cc cct2 mi_idx it2) NestLoop(k mk cct1 cc cct2 mi_idx it2 t) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt cn) Leading((((((((((((k mk) ((cct1 cc) cct2)) mi_idx) it2) t) mi) it1) mc) ct) kt) cn)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Sweden', 'Germany', 'Swedish', 'German"", '7.0', '2000']",165,0.51438344,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '1990']",164,0.51257986,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.5236579,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'movie', '%(USA)%', '%(worldwide)%', ""Drama', 'Horror', 'Western', 'Family"", '7.0', '2000']",165,0.5218554,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5223237,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2000']",164,0.5270447,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.5195574,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(co-production)%', ""Horror', 'Thriller"", '8.5', '1950']",164,0.52523386,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '2005']",165,0.52596945,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '1990']",164,0.52037674,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",165,0.5303535,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""movie', 'episode"", '%(USA)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '7.0', '2000']",164,0.5070468,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Germany', 'German', 'USA', 'American"", '7.0', '2008']",165,0.52725524,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2006)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1950']",165,0.5152776,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Germany', 'German', 'USA', 'American"", '7.0', '2000']",165,0.5141006,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '3.0', '1990']",165,0.51519114,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.51155764,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5138411,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.5216158,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Horror', 'Thriller"", '7.0', '2010']",164,0.51398957,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2006)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2000']",165,0.533437,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",161,0.51214004,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexOnlyScan(ct company_type_pkey) IndexScan(kt kind_type_pkey) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 mi_idx) HashJoin(k mk cct1 cc cct2 mi_idx it2) NestLoop(k mk cct1 cc cct2 mi_idx it2 t) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt cn) Leading((((((((((((k mk) ((cct1 cc) cct2)) mi_idx) it2) t) mi) it1) mc) ct) kt) cn)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '2000']",165,0.5169547,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Germany', 'German"", '7.0', '2005']",165,0.5223305,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(USA)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '2000']",164,0.52445495,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""USA', 'America"", '8.5', '2005']",164,0.5233293,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(France)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.513296,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.52061445,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(2006)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2005']",165,0.5279009,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2008']",165,0.52663124,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""tv series','episode"", '%(USA)%', '%(2007)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",165,0.52606195,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5160391,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", 'movie', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Japan)%', ""Horror', 'Thriller"", '3.0', '2005']",164,0.51181805,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2009']",164,0.51583517,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Horror', 'Thriller"", '8.5', '2000']",164,0.5107932,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""movie', 'episode"", '%(USA)%', '%(2006)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2005']",165,0.5299462,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", 'movie', '%(USA)%', '%(theatrical)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '7.0', '1990']",165,0.53440803,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(USA)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1990']",165,0.5381195,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", 'tv series', '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '1950']",164,0.51908624,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.5', '2010']",165,0.5249957,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""movie', 'tv movie', 'video movie', 'video game"", '%(USA)%', '%(co-production)%', ""Germany', 'German"", '8.5', '2005']",164,0.5295275,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '7.0', '2005']",165,0.508221,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.5', '1990']",165,0.51629835,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""tv series','episode"", '%(USA)%', '%(VHS)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2000']",165,0.53119427,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '2005']",165,0.51676756,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '7.0', '1990']",165,0.5225226,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '2005']",164,0.52583754,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", 'movie', '%(USA)%', '%(theatrical)%', ""USA', 'America"", '8.5', '1950']",165,0.5344357,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""murder', 'murder-in-title"", ""movie', 'episode"", '%(USA)%', '%(co-production)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '7.0', '2000']",165,0.52147114,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", 'movie', '%(USA)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.5', '1990']",165,0.53196007,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""movie', 'episode"", '%(USA)%', '%(200%)%', ""Sweden', 'Germany', 'Swedish', 'German"", '8.5', '1990']",165,0.5195187,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(Japan)%', ""USA', 'America"", '7.0', '1950']",164,0.51389855,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2010']",165,0.5340279,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'movie', '%(USA)%', '%(Japan)%', ""Drama', 'Horror', 'Western', 'Family"", '7.0', '1950']",165,0.5320607,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""tv series','episode"", '%(USA)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2005']",165,0.51815385,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'movie', '%(USA)%', '%(worldwide)%', ""Horror', 'Thriller"", '7.0', '2005']",164,0.52198595,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(USA)%', '%(2007)%', ""Germany', 'German"", '8.5', '2005']",164,0.52398866,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '1990']",164,0.52443874,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Drama', 'Horror', 'Western', 'Family"", '8.5', '1990']",164,0.51987904,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(VHS)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '7.0', '2005']",165,0.5225983,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2005']",164,0.523405,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'top 250 rank', ""murder', 'murder-in-title"", ""movie', 'episode"", '%(USA)%', '%(presents)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '1950']",161,0.5221986,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mc movie_id_movie_companies) IndexOnlyScan(ct company_type_pkey) IndexScan(kt kind_type_pkey) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 mi_idx) HashJoin(k mk cct1 cc cct2 mi_idx it2) NestLoop(k mk cct1 cc cct2 mi_idx it2 t) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt) NestLoop(k mk cct1 cc cct2 mi_idx it2 t mi it1 mc ct kt cn) Leading((((((((((((k mk) ((cct1 cc) cct2)) mi_idx) it2) t) mi) it1) mc) ct) kt) cn)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2000']",164,0.5148094,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(2007)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.5298077,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""movie', 'episode"", '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2010']",165,0.5397454,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2000']",165,0.5319805,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(200%)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.5', '2005']",165,0.5245903,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(USA)%', ""Horror', 'Thriller"", '8.5', '1990']",164,0.5105266,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '1990']",165,0.5200537,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '2000']",164,0.5269949,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""USA', 'America"", '7.0', '2010']",165,0.5209163,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""tv series','episode"", '%(USA)%', '%(theatrical)%', ""Drama', 'Horror"", '8.5', '1950']",164,0.53713757,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""tv series','episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '7.0', '1990']",165,0.50929147,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(France)%', ""Drama', 'Horror"", '8.5', '2000']",165,0.5223047,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""movie', 'episode"", '%(USA)%', '%(worldwide)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.0', '2000']",165,0.52656114,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(Blu-ray)%', ""Drama', 'Horror"", '7.0', '2000']",165,0.51567537,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Horror', 'Thriller"", '7.0', '2000']",164,0.5134419,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""movie', 'episode"", '%(USA)%', '%(worldwide)%', ""Horror', 'Thriller"", '8.5', '2000']",164,0.51986575,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[pl]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", '8.5', '2000']",164,0.51934797,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[us]', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(co-production)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", '8.5', '2000']",164,0.518865,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(France)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '8.5', '1990']",164,0.51090914,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(kt kind_type_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(k mk cct1 cc) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) NestLoop(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mi) HashJoin(k mk cct1 cc cct2 t kt mi it1) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx) NestLoop(k mk cct1 cc cct2 t kt mi it1 mc cn ct mi_idx it2) Leading(((((((((((((k mk) (cct1 cc)) cct2) t) kt) mi) it1) mc) cn) ct) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""movie', 'episode"", '%(USA)%', '%(presents)%', ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", '3.5', '2000']",165,0.53541887,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", 'tv series', '%(USA)%', '%(Japan)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2000']",165,0.53875947,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""movie', 'episode"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(presents)%', ""Horror', 'Thriller"", '3.0', '1950']",165,0.51720876,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['crew', 'complete+verified', '[us]', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""movie', 'episode"", '%(USA)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '8.5', '2010']",165,0.51439255,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[us]', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(worldwide)%', ""Germany', 'German', 'USA', 'American"", '8.5', '2005']",165,0.534328,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
0,"['cast', 'complete+verified', '[pl]', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""movie', 'tv movie', 'video movie', 'video game"", '%(as Metro-Goldwyn-Mayer Pictures)%', '%(theatrical)%', ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", '3.0', '2000']",165,0.52506626,/*+  SeqScan(k) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct1) IndexScan(cc subject_id_complete_cast) SeqScan(cct2) IndexScan(t title_pkey) SeqScan(kt) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) IndexOnlyScan(ct company_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cct1 cc) HashJoin(cct1 cc cct2) HashJoin(k mk cct1 cc cct2) NestLoop(k mk cct1 cc cct2 t) HashJoin(k mk cct1 cc cct2 t kt) NestLoop(k mk cct1 cc cct2 t kt mc) NestLoop(k mk cct1 cc cct2 t kt mc cn) NestLoop(k mk cct1 cc cct2 t kt mc cn ct) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx) NestLoop(k mk cct1 cc cct2 t kt mc cn ct mi it1 mi_idx it2) Leading((((((((((((k mk) ((cct1 cc) cct2)) t) kt) mc) cn) ct) mi) it1) mi_idx) it2)) */
