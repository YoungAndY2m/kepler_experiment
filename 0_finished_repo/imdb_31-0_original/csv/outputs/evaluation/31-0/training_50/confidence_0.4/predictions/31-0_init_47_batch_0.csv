iteration,params,plan_id,confidence,plan_content
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.5050482,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.5301462,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.5124818,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", 'Bulgaria', 'f']",33,0.49725592,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm']",85,0.503695,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f']",33,0.5022283,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'f']",33,0.50015086,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",74,0.4907073,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.49317935,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.5125722,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.49531895,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm']",33,0.48559046,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.5120851,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'bottom 10 rank', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm']",85,0.51049274,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.50610566,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.51044333,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",33,0.50675017,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Germany', 'German', 'USA', 'American"", 'm']",85,0.50335926,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'f']",33,0.5040096,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'f']",33,0.49843055,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.50896674,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.50431144,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",74,0.49899668,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(producer)', '(executive producer)"", '%Warner%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm']",33,0.5103889,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'f']",85,0.49677488,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.50075233,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",33,0.5156936,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.50781184,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.5103918,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",74,0.4957683,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.4973863,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.49550065,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.5085042,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.50853276,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Germany', 'German"", 'f']",33,0.4994322,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'f']",33,0.506516,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",85,0.49314463,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f']",33,0.49890643,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.49626854,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Drama', 'Horror"", 'f']",33,0.4982773,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Thriller"", 'f']",85,0.5093847,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror"", 'f']",33,0.500892,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'top 250 rank', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror"", 'm']",85,0.51405174,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.51445377,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm']",33,0.50875914,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f']",33,0.5104653,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f']",33,0.5143733,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.51504356,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.5100309,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'f']",33,0.48960727,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm']",85,0.499532,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm']",33,0.4943867,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.5066201,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.5023621,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.51205873,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.5098453,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'f']",85,0.5111851,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f']",33,0.50801677,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.49129635,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Twentieth Century Fox%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.5010568,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'f']",33,0.4955448,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German"", 'm']",33,0.524475,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",85,0.5050905,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.48937163,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f']",85,0.50293916,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f']",33,0.5065945,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.51179487,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Germany', 'German', 'USA', 'American"", 'm']",85,0.5037026,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Thriller"", 'f']",85,0.49991864,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'm']",33,0.4925565,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.4946491,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Twentieth Century Fox%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm']",33,0.5078049,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.49821433,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.50143754,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.51040584,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.5036643,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.5124954,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.48037466,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.49812528,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm']",85,0.51083773,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Thriller"", 'm']",33,0.5332654,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror"", 'm']",85,0.5039785,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'f']",33,0.51802546,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Germany', 'German', 'USA', 'American"", 'f']",85,0.49967894,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Thriller"", 'f']",33,0.51782507,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'genres', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.5150337,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f']",33,0.51134783,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.5155115,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",74,0.4907073,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f']",85,0.50047493,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.49244076,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'f']",33,0.50635886,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm']",85,0.49944285,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", 'Bulgaria', 'm']",74,0.49812216,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German', 'USA', 'American"", 'm']",85,0.505853,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm']",33,0.50681686,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.50609237,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", 'Lionsgate%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.50775915,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.5058397,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.50469905,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.49920958,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Thriller"", 'm']",85,0.500989,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'genres', 'votes', ""murder', 'murder-in-title"", ""Drama', 'Horror', 'Western', 'Family"", 'm']",85,0.5144361,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f']",33,0.5092861,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'genres', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.5212098,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'm']",33,0.49544284,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '%Warner%', 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.50086486,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.5003913,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",89,0.49020183,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi) NestLoop(cn mc mi it1) NestLoop(cn mc mi it1 ci) NestLoop(cn mc mi it1 ci n) NestLoop(cn mc mi it1 ci n t) NestLoop(cn mc mi it1 ci n t mk) NestLoop(cn mc mi it1 ci n t mk k) NestLoop(cn mc mi it1 ci n t mk k mi_idx) NestLoop(cn mc mi it1 ci n t mk k mi_idx it2) Leading(((((((((((cn mc) mi) it1) ci) n) t) mk) k) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.49487895,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",74,0.50044304,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",74,0.49646205,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.51614845,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.50460553,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.5116491,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'top 250 rank', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'f']",33,0.51956815,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '%Film%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",85,0.51100224,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",33,0.5008986,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'top 250 rank', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.5052961,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.5092928,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.5073532,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.50388217,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.50121266,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '20th Century Fox%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.5153126,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Thriller"", 'm']",33,0.49480113,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",33,0.5156936,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",33,0.50370383,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.49953562,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.48740968,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.4980773,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.506259,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.50646335,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.50543565,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'm']",85,0.49816722,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.51364017,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f']",33,0.49921,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f']",33,0.5212444,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'f']",33,0.50235015,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror"", 'f']",33,0.52396894,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.48037466,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '%Warner%', 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f']",33,0.51010174,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.5122694,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Twentieth Century Fox%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.4921531,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '20th Century Fox%', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.50035685,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",85,0.49856302,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",85,0.49973586,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",85,0.5080288,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.49119928,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f']",33,0.51572865,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror', 'Western', 'Family"", 'f']",85,0.5148703,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'f']",89,0.49122936,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mk movie_id_movie_keyword) IndexScan(k keyword_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) NestLoop(cn mc) NestLoop(cn mc mi) NestLoop(cn mc mi it1) NestLoop(cn mc mi it1 ci) NestLoop(cn mc mi it1 ci n) NestLoop(cn mc mi it1 ci n t) NestLoop(cn mc mi it1 ci n t mk) NestLoop(cn mc mi it1 ci n t mk k) NestLoop(cn mc mi it1 ci n t mk k mi_idx) NestLoop(cn mc mi it1 ci n t mk k mi_idx it2) Leading(((((((((((cn mc) mi) it1) ci) n) t) mk) k) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.5006058,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Twentieth Century Fox%', 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Germany', 'German"", 'm']",33,0.49298087,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.5119194,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.4973863,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.49158219,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm']",85,0.5091756,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.50549406,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.48740968,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.50609237,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German"", 'f']",33,0.506516,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.49550065,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f']",33,0.48936543,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.49626854,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.5253706,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",74,0.49899668,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.4973863,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.50143754,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(producer)', '(executive producer)"", '%Warner%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.5078251,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",85,0.4912212,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German', 'USA', 'American"", 'f']",33,0.50126415,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'votes', ""murder', 'murder-in-title"", ""Drama', 'Horror"", 'f']",74,0.5030008,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'Lionsgate%', 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",74,0.4913243,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",85,0.4950553,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",85,0.5047232,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Twentieth Century Fox%', 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",33,0.49626544,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f']",74,0.49596187,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.49997103,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f']",74,0.49342385,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(producer)', '(executive producer)"", '%Film%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm']",85,0.494155,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f']",33,0.50867456,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Film%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",85,0.51014894,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.51179487,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.50942403,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '20th Century Fox%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f']",85,0.49895784,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Germany', 'German"", 'f']",33,0.49129853,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",85,0.50330186,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(producer)', '(executive producer)"", 'Twentieth Century Fox%', 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.5257786,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""USA', 'America"", 'f']",33,0.51558334,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",33,0.51105493,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",33,0.5158198,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.49940395,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f']",74,0.5025066,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",33,0.49113226,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Warner%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm']",74,0.49820757,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) NestLoop(cn mc) HashJoin(k mk cn mc) NestLoop(k mk cn mc mi) NestLoop(k mk cn mc mi it1) NestLoop(k mk cn mc mi it1 ci) NestLoop(k mk cn mc mi it1 ci t) NestLoop(k mk cn mc mi it1 ci t mi_idx) NestLoop(k mk cn mc mi it1 ci t mi_idx n) NestLoop(k mk cn mc mi it1 ci t mi_idx n it2) Leading((((((((((k mk) (cn mc)) mi) it1) ci) t) mi_idx) n) it2)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", '%Warner%', 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm']",33,0.50787115,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm']",33,0.49940395,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", '%Film%', 'genres', 'rating', ""nerd', 'loner', 'alienation', 'dignity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f']",33,0.5066184,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(it2 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mc movie_id_movie_companies) IndexScan(cn company_name_pkey) NestLoop(k mk) NestLoop(k mk mi) NestLoop(k mk mi it1) NestLoop(k mk mi it1 mi_idx) NestLoop(k mk mi it1 mi_idx it2) NestLoop(k mk mi it1 mi_idx it2 ci) NestLoop(k mk mi it1 mi_idx it2 ci n) NestLoop(k mk mi it1 mi_idx it2 ci n t) NestLoop(k mk mi it1 mi_idx it2 ci n t mc) NestLoop(k mk mi it1 mi_idx it2 ci n t mc cn) Leading(((((((((((k mk) mi) it1) mi_idx) it2) ci) n) t) mc) cn)) */
0,"[""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'Lionsgate%', 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm']",85,0.5048501,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
0,"[""(producer)', '(executive producer)"", 'Twentieth Century Fox%', 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm']",85,0.49660313,/*+  SeqScan(cn) IndexScan(mc company_id_movie_companies) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) IndexScan(t title_pkey) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) NestLoop(cn mc) NestLoop(k mk) HashJoin(cn mc k mk) NestLoop(cn mc k mk mi) HashJoin(cn mc k mk mi it1) NestLoop(cn mc k mk mi it1 ci) NestLoop(cn mc k mk mi it1 ci n) NestLoop(cn mc k mk mi it1 ci n t) NestLoop(cn mc k mk mi it1 ci n t mi_idx) HashJoin(cn mc k mk mi it1 ci n t mi_idx it2) Leading((((((((((cn mc) (k mk)) mi) it1) ci) n) t) mi_idx) it2)) */
