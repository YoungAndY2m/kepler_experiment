iteration,params,plan_id,confidence,plan_content
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5703025,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.56201583,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '1990']",121,0.56478626,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2010']",121,0.5650881,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2010']",121,0.57245743,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5667581,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5664232,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '1990']",121,0.56884706,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '1990']",121,0.57267004,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",14,0.5617916,/*+  IndexScan(cc subject_id_complete_cast) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(cct1 comp_cast_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc k mk) HashJoin(cc k mk cct2) NestLoop(cc k mk cct2 t) NestLoop(cc k mk cct2 t ci) NestLoop(cc k mk cct2 t ci cct1) NestLoop(cc k mk cct2 t ci cct1 mi) NestLoop(cc k mk cct2 t ci cct1 mi it1) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx n) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx n it2) Leading(((((((((((cc (k mk)) cct2) t) ci) cct1) mi) it1) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German"", 'f', '2000']",121,0.55707484,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",149,0.5753667,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.56287175,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.5662324,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Thriller"", 'm', '2010']",121,0.57772183,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Horror', 'Thriller"", 'm', '2008']",121,0.55986774,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '2010']",121,0.5797938,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",149,0.5667714,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",121,0.5610218,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""USA', 'America"", 'm', '2005']",121,0.55463123,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",121,0.57017976,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2005']",149,0.56218046,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",149,0.560766,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.5642308,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1950']",121,0.5845121,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '1990']",121,0.57083076,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.56670785,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title"", ""USA', 'America"", 'm', '2000']",121,0.5576235,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.5672677,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.5583757,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.5602621,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",121,0.5644345,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2000']",121,0.5600556,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Germany', 'German', 'USA', 'American"", 'm', '2010']",149,0.5669128,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.5676552,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Drama', 'Horror"", 'm', '2010']",121,0.5707798,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '1990']",149,0.56448734,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""USA', 'America"", 'f', '2000']",149,0.557223,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Germany', 'German', 'USA', 'American"", 'f', '2005']",121,0.5631596,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1950']",149,0.5704807,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f', '1990']",149,0.56232846,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.5640205,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '2010']",121,0.56329095,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.5697702,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""Drama', 'Horror"", 'm', '2000']",121,0.55658853,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2010']",121,0.57245743,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.5661366,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2000']",149,0.5638681,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1950']",149,0.5689954,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.56699884,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2010']",121,0.5626881,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2010']",121,0.57464254,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.573475,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",121,0.57134473,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.5598457,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",121,0.5629063,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",14,0.5696285,/*+  IndexScan(cc subject_id_complete_cast) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(cct1 comp_cast_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc k mk) HashJoin(cc k mk cct2) NestLoop(cc k mk cct2 t) NestLoop(cc k mk cct2 t ci) NestLoop(cc k mk cct2 t ci cct1) NestLoop(cc k mk cct2 t ci cct1 mi) NestLoop(cc k mk cct2 t ci cct1 mi it1) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx n) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx n it2) Leading(((((((((((cc (k mk)) cct2) t) ci) cct1) mi) it1) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.5701389,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '2005']",121,0.55658877,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2010']",121,0.57633644,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",149,0.56529224,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",149,0.5680577,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.56571054,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",121,0.5707234,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'top 250 rank', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",149,0.56262004,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",121,0.568595,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f', '1990']",149,0.57483804,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",149,0.5658002,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""nerd', 'loner', 'alienation', 'dignity"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2000']",121,0.562988,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Drama', 'Horror"", 'f', '1950']",149,0.5554802,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",149,0.5673983,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.56699884,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.558685,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",121,0.56344056,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '1990']",121,0.5599057,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2005']",149,0.5604451,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",149,0.558864,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2000']",121,0.5635249,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'm', '2005']",121,0.55838436,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",121,0.56390697,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f', '1950']",149,0.57145643,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5621294,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.5702169,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'f', '1950']",149,0.56462884,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Germany', 'German"", 'm', '2000']",121,0.55622244,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",121,0.5672143,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1950']",149,0.5639052,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '1950']",149,0.54748607,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",149,0.5644862,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'm', '2000']",121,0.5617075,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f', '2000']",121,0.56962764,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",121,0.5675037,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2000']",121,0.56543,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2008']",149,0.56061226,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.56142175,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f', '2000']",121,0.5621745,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f', '2000']",121,0.56229913,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '1990']",121,0.5588912,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '1990']",121,0.5545317,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.5742549,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.55921525,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2005']",121,0.55212206,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2005']",121,0.562863,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1950']",149,0.5704807,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Germany', 'Swedish', 'German"", 'f', '2005']",121,0.5656069,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Drama', 'Horror"", 'm', '2000']",121,0.5625019,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.57169497,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.5671058,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1950']",121,0.5787227,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2010']",121,0.5741982,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",121,0.5601378,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2000']",149,0.5638681,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '1990']",149,0.5702708,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.5620026,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",121,0.56641114,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'f', '2000']",121,0.56173444,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",149,0.56067866,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1950']",149,0.56741357,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",14,0.5597407,/*+  IndexScan(cc subject_id_complete_cast) IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(ci movie_id_cast_info) IndexScan(cct1 comp_cast_type_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc k mk) HashJoin(cc k mk cct2) NestLoop(cc k mk cct2 t) NestLoop(cc k mk cct2 t ci) NestLoop(cc k mk cct2 t ci cct1) NestLoop(cc k mk cct2 t ci cct1 mi) NestLoop(cc k mk cct2 t ci cct1 mi it1) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx n) NestLoop(cc k mk cct2 t ci cct1 mi it1 mi_idx n it2) Leading(((((((((((cc (k mk)) cct2) t) ci) cct1) mi) it1) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.57486504,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Germany', 'German"", 'm', '2000']",121,0.55385846,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",121,0.5602388,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '2000']",121,0.56020856,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",149,0.5753667,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Germany', 'German', 'USA', 'American"", 'f', '1990']",121,0.5634983,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '1990']",121,0.5616209,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.56287175,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '2000']",149,0.5644862,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.5667276,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f', '2000']",149,0.57296175,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",149,0.5671962,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f', '1990']",149,0.569352,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2008']",121,0.5626717,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '2010']",121,0.5633665,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'f', '2000']",121,0.5589937,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""USA', 'America"", 'm', '1990']",149,0.5576266,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.56192285,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f', '2000']",121,0.5655052,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.57045835,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1990']",149,0.5665421,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",121,0.5648774,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'm', '1950']",149,0.5723964,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Drama', 'Horror', 'Western', 'Family"", 'f', '2000']",121,0.55769926,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.56699884,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Drama', 'Horror"", 'm', '2000']",121,0.55768055,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.5602689,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.55867994,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'f', '1990']",149,0.5521036,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '1990']",121,0.57238543,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2005']",121,0.56932515,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'f', '1950']",121,0.5629018,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Drama', 'Horror"", 'f', '1990']",149,0.5521036,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '2005']",149,0.5687046,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Drama', 'Horror', 'Western', 'Family"", 'm', '2005']",149,0.5714756,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",121,0.56565535,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f', '2000']",149,0.57296175,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '1990']",149,0.5627374,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5678288,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",149,0.557022,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.5655063,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.55995536,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Drama', 'Horror"", 'm', '2010']",121,0.56197655,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Germany', 'German', 'USA', 'American"", 'f', '1990']",149,0.57483804,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2005']",149,0.5609311,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.566635,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2010']",121,0.57362646,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2005']",121,0.5668432,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(producer)', '(executive producer)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2010']",121,0.56047744,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Thriller"", 'f', '2000']",121,0.56173444,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Germany', 'German', 'USA', 'American"", 'm', '2000']",121,0.5629414,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'fight"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5662279,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2009']",121,0.56919706,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'f', '1990']",149,0.56327605,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'f', '2005']",149,0.5661106,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.5701005,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1950']",121,0.5782199,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",121,0.55992013,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German"", 'm', '2000']",121,0.57066727,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Germany', 'Swedish', 'German"", 'm', '1990']",149,0.5699856,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'm', '1950']",149,0.55840904,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",121,0.56988055,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2005']",121,0.560297,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2005']",121,0.5601659,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.5704084,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2005']",121,0.55950755,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""murder', 'murder-in-title', 'blood', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2010']",121,0.5679554,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'votes', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2000']",121,0.57008016,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'blood', 'gore', 'death', 'female-nudity"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'f', '2000']",121,0.5685086,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Germany', 'German"", 'm', '2000']",121,0.5672143,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Thriller"", 'm', '2010']",121,0.56661445,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence"", ""Horror', 'Thriller"", 'm', '2000']",149,0.5697772,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2005']",121,0.5732187,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""hero', 'martial-arts', 'hand-to-hand-combat"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '1990']",121,0.56836593,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title', 'blood', 'violence"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'f', '2000']",149,0.56195843,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc subject_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) IndexScan(it1 info_type_pkey) IndexScan(ci movie_id_cast_info) IndexScan(mi_idx movie_id_movie_info_idx) IndexScan(n name_pkey) IndexScan(it2 info_type_pkey) NestLoop(k mk) HashJoin(cc cct1) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) NestLoop(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 ci) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n) NestLoop(k mk cc cct1 cct2 t mi it1 ci mi_idx n it2) Leading(((((((((((k mk) (cc cct1)) cct2) t) mi) it1) ci) mi_idx) n) it2)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'rating', ""murder', 'murder-in-title"", ""Horror', 'Thriller"", 'f', '2000']",121,0.5724137,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'genres', 'votes', ""superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser"", ""Horror', 'Thriller"", 'f', '1990']",121,0.55411714,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Germany', 'German', 'USA', 'American"", 'm', '1990']",121,0.5673857,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English"", 'f', '2000']",121,0.5669351,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete+verified', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'genres', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War"", 'm', '2000']",121,0.57075346,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
0,"[""cast', 'crew"", 'complete', ""(writer)', '(head writer)', '(written by)', '(story)', '(story editor)"", 'countries', 'rating', ""sequel', 'revenge', 'based-on-novel"", ""Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American"", 'm', '2005']",121,0.5617383,/*+  IndexScan(k keyword_pkey) IndexScan(mk keyword_id_movie_keyword) IndexScan(cc movie_id_complete_cast) SeqScan(cct1) SeqScan(cct2) IndexScan(t title_pkey) IndexScan(mi movie_id_movie_info) SeqScan(it1) IndexScan(mi_idx movie_id_movie_info_idx) SeqScan(it2) IndexScan(ci movie_id_cast_info) IndexScan(n name_pkey) NestLoop(k mk) NestLoop(k mk cc) HashJoin(k mk cc cct1) HashJoin(k mk cc cct1 cct2) NestLoop(k mk cc cct1 cct2 t) NestLoop(k mk cc cct1 cct2 t mi) HashJoin(k mk cc cct1 cct2 t mi it1) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx) HashJoin(k mk cc cct1 cct2 t mi it1 mi_idx it2) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci) NestLoop(k mk cc cct1 cct2 t mi it1 mi_idx it2 ci n) Leading((((((((((((k mk) cc) cct1) cct2) t) mi) it1) mi_idx) it2) ci) n)) */
