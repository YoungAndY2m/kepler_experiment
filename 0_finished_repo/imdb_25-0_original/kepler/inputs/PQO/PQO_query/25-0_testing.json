{
    "25-0_testing_0": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(accounting clerk)', '(Torajiro''s sister)', '(as Pappu Polister)', '(as Yuko Ozeki)', '(Ganga''s bhabhi)')\nAND it1.info = 'trivia'\nAND it2.info = 'rating'\nAND k.keyword IN ('explosion', 'self-publishing', 'history-makers', 'ant-hill', 'code-of-silence')\nAND mi.info = 'The script was first written by ''Vincent Ngo'' (qv) in 1996 and it languished for close to 10 years. Later, the script was picked up and rewritten by ''Vince Gilligan'' (qv), to be directed by ''Jonathan Mostow'' (qv) for a 2007 release. Gilligan wrote the second draft when Sony picked up the script in early 2005.'\nAND n.gender = 'm';",
    "25-0_testing_1": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(as Jak)', '(as Tsutomu Teruki)', '(as Sofi Onore)', '(as Polly LePort)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('returning-character-killed-off', '9-11', 'tv-contest', 'genomic-imprinting', 'blocked-chimney')\nAND mi.info = 'Colombia:27 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_2": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(as Becky Saunders)', '(as Zophia Myaw)', '(as Craig Young)', '(as Andres Salmon)')\nAND it1.info = 'trivia'\nAND it2.info = 'votes'\nAND k.keyword IN ('hippie', 'airplane-collision', 'tomb', 'sexual-predator', 'father-hates-son')\nAND mi.info = 'Monty''s Rolls-Royce is a 1953 Silver Wraith Sedanca de Ville customised by Hooper coachbuilders for oil magnate Nubar Gulbenkian, who owned a variety of gaudily customised Rolls-Royces.'\nAND n.gender = 'm';",
    "25-0_testing_3": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Cousin Jody)', '(segment \"pilot\")', '(technical intern)', '(as Matt Barrett)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'arkansas-delta', 'blood-on-bread', 'coral-sea', 'financial-advice')\nAND mi.info = 'PCS:Spherical'\nAND n.gender = 'm';",
    "25-0_testing_4": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Jack Randall)', '(as Zoe Mugford)', '(as Victor Parra)', '(as Matthew Radico)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('necklace', 'slack', 'sacco-and-vanzetti', 'pcw', 'wrapped-in-carpet')\nAND mi.info = 'CONT: During the chase after the trade heist, Bane separates from his henchman and passes Batman on his left side; Batman turns to see him to his right side.'\nAND n.gender = 'm';",
    "25-0_testing_5": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Dr. Kim Rossmo)', '(as Scott Putesky)', '(as Siddharth)', '(as Urs Villinger)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('national-guard', 'fishing-business', 'sturmabtellung', 'child''s-shoes', 'fear-of-lesbianism')\nAND mi.info = 'PFM:35 mm'\nAND n.gender = 'm';",
    "25-0_testing_6": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Ken Cope)', '(as Mikey Davis)', '(as J.A. Marcus)', '(Bougie n\u00c2\u00b030)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('shaving', 'band-of-outcasts', 'skokie-illinois', 'last-show-in-series', 'blowhard')\nAND mi.info = 'Canada:G'\nAND n.gender = 'f';",
    "25-0_testing_7": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(stand-in: Mr. Hoskins)', '(as Colleen Brenan)', '(as Max Boyer)', '(Another Burglar)', '(as Tracy Does It)')\nAND it1.info = 'locations'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('cooking', 'hookworm', 'response', 'american-gothic', 'shirt-size')\nAND mi.info = 'Dagenham, Essex, England, UK'\nAND n.gender = 'm';",
    "25-0_testing_8": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(cycling segment)', '(as Reben Moreno)', '(1971-1995)', '(as Lou Isreal)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('stock-exchange', 'bar-of-soap', 'gift-sword', 'prejudiced-father', 'stolen-cash')\nAND mi.info = 'USA:16 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_9": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as \u00c3\u0080dam Mart\u00c3\u00adn)', '(Dubai)', '(as Ann O''Neal)', '(segment \"Kruske\")')\nAND it1.info = 'certificates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('sniper-rifle', 'french-instructor', 'sefarad', 'far-future', 'partly-subtitled')\nAND mi.info = 'Hong Kong:IIA'\nAND n.gender = 'm';",
    "25-0_testing_10": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as CaboSanRoque)', '(as David Lucas)', '(LUAR leader)', '(local guide: Cuba)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('tragic-villain', 'self-gratification', 'doughnut-ball', 'floatation', 'midnight-chimes')\nAND mi.info = 'RAT:1.44 : 1'\nAND n.gender = 'f';",
    "25-0_testing_11": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(German commentary)', '(master armorer)', '(as Derick Dee)', '(as Rodrigo Ricio)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('shaving', 'cutting-tree', 'musical-act', 'food-critic', 'reference-to-plato')\nAND mi.info = 'Thomas Wayne: Bruce, why do we fall?'\nAND n.gender = 'm';",
    "25-0_testing_12": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(Jane''s father)', '(age 36-48)', '(yuppie)', '(as F. Taccetti)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('bare-chested-male', 'bedridden-father', 'bands', 'bicentennial', 'dane')\nAND mi.info = 'Belgium:2011'\nAND n.gender = 'm';",
    "25-0_testing_13": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Star Townshend)', '(as Felice)', '(as A. Raskin)', '(as Kink Boy UK)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('secret-door', 'nissan', 'first-millennium', 'dextrocardia', 'standing-on-hands')\nAND mi.info = 'John Daggett: What. The hell. Is going on?::Bane: Our plan is proceeding as expected.::John Daggett: Oh really? Do *I* look like I''m running Wayne Enterprises right now? Your hit, on the stock exchange, it didn''t work, my friend! And now you have my construction crews going around the city at 24 hours a day! How exactly is that supposed to help my company absorb Wayne''s?::Bane: [to Stryver] Leave us!::John Daggett: No! You stay here, I''m in charge!::Bane: [puts his hand on Daggett''s shoulder] Do you *feel* in charge?::[Stryver leaves]::John Daggett: I paid you a small fortune.::Bane: And this gives you *power* over me?::John Daggett: What is this?::Bane: Your money and infrastructure have been important... ''til now!::John Daggett: What are you?::Bane: I''m Gotham''s reckoning. Here to end the borrowed time you''ve all been living on!::John Daggett: You''re pure evil!::Bane: I''m *necessary* evil!::[breaks Daggett''s neck; Stryver flinches]'\nAND n.gender = 'm';",
    "25-0_testing_14": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as Laumonier)', '(as DJ Polymorphic)', '(as Loles Garc\u00c3\u00ada)', '(as Thuraya Masri)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('stock-exchange', 'tape-player', 'snowed-in', 'forced-alliance', 'channel-tunnel')\nAND mi.info = 'SYNC: When they take over the stock exchange, the bad guys enter the place shooting. It is noticeable that their machine guns are not shooting and yet we hear the noise and we see the ricochet of the bullets against the monitors in the ceiling.'\nAND n.gender = 'f';",
    "25-0_testing_15": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(co-producer)', '(as Konica)', '(as Ester)', '(as Lacy Stewart)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('snow', 'rear-window', 'oversight', 'chemical-vat', 'second-angel')\nAND mi.info = '[Two traders are getting their shoes shined]::Trader #2: You can''t short the stock because Bruce Wayne goes to a party.::Trader #1: Wayne coming back is change. Change is either good or bad. I pick bad.::Trader #2: On what basis?::Trader #1: I flipped a coin. [They leave, at which point the man shining their shoes reaches into his gym bag and pulls out a submachine gun]'\nAND n.gender = 'm';",
    "25-0_testing_16": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Jo Dyce)', '(as Vic Kjellin)', '(as Bandit Haze)', '(as Jacq Wallage)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('white-tuxedo', 'stuffed-toy-shark', 'auto-theft-ring', 'lying-in-the-street', 'writing-a-novel')\nAND mi.info = 'OFM:35 mm'\nAND n.gender = 'm';",
    "25-0_testing_17": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(episode M\u00c3\u00a5lbrott)', '(as Rex Hale)', '(as Tricia Mara)', '(as Kari Mattson)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('secret-door', 'pub-crawl', 'monster-of-florence', 'room', 'car-fender')\nAND mi.info = 'Canada:14A'\nAND n.gender = 'f';",
    "25-0_testing_18": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Curt Vesperman)', '(as Alex Brake)', '(as Arcade Fire)', '(as Tony Holland)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('gang-member', 'cappuccino', 'superciliousness', 'solomon-islands', 'candy-kiss')\nAND mi.info = 'PFM:35 mm'\nAND n.gender = 'm';",
    "25-0_testing_19": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Lisa Ryall)', '(as Mitch Davies)', '(as Joe Baar)', '(as Soldan)', '(as Johnny Philips)')\nAND it1.info = 'LD group genre'\nAND it2.info = 'votes'\nAND k.keyword IN ('photos', 'stuffing-turkey', 'hairstyling', 'learning-to-cook', 'black-lace-panties')\nAND mi.info = 'Thriller'\nAND n.gender = 'f';",
    "25-0_testing_20": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(presenter)', '(as Titos Wandis)', '(as Cristi Black)', '(1st runner up)', '(as Lj. Gener)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('roast', 'valentine''s-card', 'posing-for-portrait', 'over-pressure', 'origin-of-hero')\nAND mi.info = 'Iceland:L'\nAND n.gender = 'm';",
    "25-0_testing_21": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(help technician)', '(The Straight Boy)', '(as Ian Babilee)', '(as Kadigia Bove)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('orphan', 'night-doctor', 'vierzon-france', 'stars-at-home', 'western-airlines')\nAND mi.info = 'Alfred: [about Selina Kyle] You two should exchange notes over coffee.::Bruce Wayne: So now you''re trying to set me up with a jewel thief?::Alfred: At this point, I''d set you up with a chimpanzee if it''d brought you back to the world!::Bruce Wayne: There''s nothing out there for me.::Alfred: And that''s the problem. You hung up your cape and your cowl, but you didn''t move on, you never went to find a life, to find someone...::Bruce Wayne: Alfred... I did find someone.::Alfred: I know, and you lost her. But that''s all part of living, sir. But you''re not living. You''re just waiting, hoping for things to go bad again.'\nAND n.gender = 'm';",
    "25-0_testing_22": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as M. Vertinskaya)', '(as Mifuyu H\u00c3\u00aeragi)', '(as Marlene Kos)', '(Her Classmate)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('warlord', 'selenium', 'recruiting-poster', 'cheaters', 'cya')\nAND mi.info = 'USA:16 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_23": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(catholic adviser)', '(as Vera Friedberg)', '(as G.A. Semmler)', '(as Deseree)')\nAND it1.info = 'LD certification'\nAND it2.info = 'rating'\nAND k.keyword IN ('destroying-property', 'body-blow', 'senator-mccarthy', 'handshake-goodby', 'jehovah''s-witness')\nAND mi.info = 'R'\nAND n.gender = 'm';",
    "25-0_testing_24": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(writer)', '(as Rajesh Asthana)', '(as Valerie R\u00c3\u00a1cz)', '(as Anjolie)', '(date producer)')\nAND it1.info = 'countries'\nAND it2.info = 'rating'\nAND k.keyword IN ('cigarette-smoking', 'church-elders', 'homemade-bomb', 'zeytuni-beirut', 'one-man-hamlet')\nAND mi.info = 'Italy'\nAND n.gender = 'm';",
    "25-0_testing_25": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Toni Hallaran)', '(as Lev Grossman)', '(as Tamara Jackson)', '(as Buddy Windrush)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('combat', 'set-designer', 'in-flight-magazine', 'sajuaro-cactus', 'invisible-children')\nAND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'\nAND n.gender = 'm';",
    "25-0_testing_26": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(as Jaap)', '(novel) (2000)', '(as Josie Xu)', '(as Dave Michener)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes'\nAND k.keyword IN ('gay', 'tahitian-costume', 'zero-gravity-sex', 'change-blindness', 'systems-analyst')\nAND mi.info = 'UK:X'\nAND n.gender = 'm';",
    "25-0_testing_27": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant: New York) (as Dwayne A. Smith)', '(as Qu Ying)', '(as Carolyn Sand)', '(conception: video)', '(as Fuga)')\nAND it1.info = 'LD disc size'\nAND it2.info = 'rating'\nAND k.keyword IN ('murder', 'spinal-surgery', 'unholy-resurrection', 'vatican-observatory', 'glasgow-scotland')\nAND mi.info = '12'\nAND n.gender = 'm';",
    "25-0_testing_28": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as J\u00c3\u00balio Verme)', '(as R.A. Walsh)', '(as Jay M. Boryea)', '(as C.J. Williams)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'guadalajara', 'sex-with-coworker', 'sightings', 'watch')\nAND mi.info = 'RAT:1.37 : 1'\nAND n.gender = 'm';",
    "25-0_testing_29": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Andreas Haller)', '(as Anna Lauren)', '(as Katya Golubeva)', '(as Oscar Haffmans)')\nAND it1.info = 'sound mix'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'scaring-dogs', 'aspiring-lawyer', 'song-dedication', 'art-forum-magazine')\nAND mi.info = 'Mono'\nAND n.gender = 'm';",
    "25-0_testing_30": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(co-producer) (as Bill Brown)', '(as Yu.Vorobyov)', '(as Lionel Haft)', '(as Pavel Patriki)', '(as T. Meena)')\nAND it1.info = 'trivia'\nAND it2.info = 'rating'\nAND k.keyword IN ('admiral', 'year-1565', 'eating-intestines', 'vampire-parents', 'confinement')\nAND mi.info = 'The cast had camel-riding lessons during which they would have to ride the camel at full gallop for 90 minutes alongside a moving train.'\nAND n.gender = 'm';",
    "25-0_testing_31": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(test: Experis)', '(as Mr. Bob)', '(via Skype)', '(as A. Boyajian)')\nAND it1.info = 'countries'\nAND it2.info = 'rating'\nAND k.keyword IN ('stock-exchange', 'yucca-tree', 'imaginary-country', 'south-london', 'human-rights')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_32": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Lucinda)', '(as Katy Fisher)', '(as Vince Capone)', '(as Alex Jenkins)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('shaving', 'demetra', 'mutual-suspicion', 'south-jersey', 'monrovia')\nAND mi.info = 'Georgia:26 July 2012'\nAND n.gender = 'f';",
    "25-0_testing_33": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(as Keisuke \u00c3\u0094tori)', '(as Ivan Katic)', '(as Gandhi)', '(as Gregg Lucas)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('necklace', 'skindiving', 'former-actor', 'morten', 'carioca')\nAND mi.info = 'South Korea:15'\nAND n.gender = 'm';",
    "25-0_testing_34": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Kevin Graves)', '(as Allen Marlowe)', '(as Carrie Wallace)', '(as Jose Viv\u00c3\u00b3)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('secret-door', 'mosaik', 'synarchy', 'cura\u00c3\u00a7ao', 'disabilities')\nAND mi.info = 'Indonesia:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_35": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(as Jillian Yoccum)', '(as James Shaw)', '(as Jan Eckermann)', '(as Ewan Rochelle)')\nAND it1.info = 'LD color information'\nAND it2.info = 'rating'\nAND k.keyword IN ('bare-breasts', 'chinese-refugee', 'special-care', 'bulimia', 'one-man-band')\nAND mi.info = 'Color'\nAND n.gender = 'm';",
    "25-0_testing_36": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(pilot: London)', '(ADR loop group)', '(as Crystal Down)', '(episodes 8-10)')\nAND it1.info = 'trivia'\nAND it2.info = 'rating'\nAND k.keyword IN ('escape-attempt', 'goth-girl', 'lamasery', 'victimology', 'teleconferencing')\nAND mi.info = '''Billy Hayes (I)'' (qv) visited the Maltese filming locations during principal photography exactly two years to the date he had escaped. Hayes said: \"It was so true to life that I started to sweat. It was obvious to me that everyone concerned wanted to make a film that says something - and there''s a lot to be said . . . Hopefully, we can shake people up, and move them to do something for all those others who are still locked up in stinking hell-holes around the world\".'\nAND n.gender = 'm';",
    "25-0_testing_37": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Ken Terrill)', '(as Qin Ping)', '(as Mohamedali)', '(segment \"Privat\")')\nAND it1.info = 'genres'\nAND it2.info = 'rating'\nAND k.keyword IN ('dead-man', 'remake-of-series', 'paper-bag', 'face-cut-off', 'addiction-group')\nAND mi.info = 'Thriller'\nAND n.gender = 'm';",
    "25-0_testing_38": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(as Sarah Sit)', '(as Inma de Santy)', '(as Damien Wayans)', '(as Michael Duncan)')\nAND it1.info = 'LD analog left'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('freeze-frame', 'mama-sunshine', 'village-elder', 'wild-hunt', 'selling-one''s-blood')\nAND mi.info = 'Mono'\nAND n.gender = 'm';",
    "25-0_testing_39": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(signing)', '(as Carmen Jay)', '(action sequences)', '(as Engelbert)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('sawed-off-shotgun', 'manhood', 'plea-for-protection', 'playing-i-spy', 'pupilless-eyes')\nAND mi.info = 'Netherlands:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_40": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(as Elena Moddalo)', '(2003-2004)', '(as Rolf Lefeuvre)', '(as Emma Caesari)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('stabbed-in-the-chest', 'clara-cluck', 'man-in-gorilla-suit', 'erotic-cake', 'paint-rock-texas')\nAND mi.info = 'Finland:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_41": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Shadab Khan)', '(as Steve Blonder)', '(as Daniel Clough)', '(segment 6)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('death-of-mother', 'ancient-korea', 'super-earth', 'living-in-fear', 'cerebral-cortex')\nAND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'\nAND n.gender = 'm';",
    "25-0_testing_42": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as A. Kravchenko)', '(as Mr. Potent)', '(as Kay Elhardt)', '(as Ans v.d. Molen)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('sawed-off-shotgun', 'male-nudity', 'ming-dynasty', 'last-minite-escape', 'foibles-of-marriage')\nAND mi.info = 'CAM:Panavision Panaflex Millennium XL2, Panavision C-, E-Series and Super High Speed Lenses'\nAND n.gender = 'm';",
    "25-0_testing_43": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(as Gerard Acao)', '(as Venceslao Vich)', '(story designer)', '(as Assorti)')\nAND it1.info = 'budget'\nAND it2.info = 'rating'\nAND k.keyword IN ('ritual', 'whining-woman', 'mini-submarine', 'holed-up-in-shack', 'based-on-dream')\nAND mi.info = '$3,000,000'\nAND n.gender = 'm';",
    "25-0_testing_44": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Natalie Raper)', '(Genevi\u00c3\u00a8ve)', '(as Bert Cayayan)', '(super looping)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('combat', 'escape-in-a-boat', 'gym-shorts', 'mechanical-cat', 'evil-god')\nAND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'\nAND n.gender = 'm';",
    "25-0_testing_45": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant) (uncredited)', '(as Marcus Redmond)', '(1957-????)', '(as Yuz Merza)', '(as Marco Riaskoff)')\nAND it1.info = 'countries'\nAND it2.info = 'rating'\nAND k.keyword IN ('amateur-radio', 'safety-belt', 'lactose-intolerance', 'private-army', 'ukelele-player')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_46": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Zack Ryan)', '(as Lars Block)', '(as Chun-yu Ng)', '(as Mark Winter)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes'\nAND k.keyword IN ('swat', 'androgynous-male', 'psalm', 'e-meter', 'girls''-bathroom')\nAND mi.info = 'Brazil:12'\nAND n.gender = 'm';",
    "25-0_testing_47": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(as Alfredo Murfe)', '(as Pal Makray)', '(as Ambika Travis)', '(as Sepp Nermuth)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('swat', 'prison-ministry', 'chinese-slur', 'eating-evidence', 'feeding-tube')\nAND mi.info = 'LAB:Technicolor, Hollywood (CA), USA'\nAND n.gender = 'm';",
    "25-0_testing_48": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as J\u00c3\u00bcrgen T\u00c3\u00b6gel)', '(as Clara Greet)', '(La serveuse)', '(as Jenifer)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('police-station', 'buckboard-driver', 'achilles-tendon-cut', 'commentator', 'west-hollywood')\nAND mi.info = 'Serbia:26 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_49": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as Milton Ingley)', '(as Geoffe George)', '(as Laura Lavarnie)', '(as D. Simone)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('secret-door', 'prague', 'pleading-guilty', 'whistling-sound', 'huckster')\nAND mi.info = 'Hooded Man #2: Have we started the fire?::Bane: Yes. The fire rises.'\nAND n.gender = 'm';",
    "25-0_testing_50": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Alex) (as Aika)', '(as Nino Batista)', '(as Viktor Schef\u00c3\u00a9)', '(as Monique Perry)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('sniper-rifle', 'blood-sample', 'big-wooden-spoon', 'move', 'cultural-change')\nAND mi.info = 'John Blake: When I spotted you, I was looking for a friend of mine, Bruce Wayne. Did they kill him?::Selina Kyle: I''m not sure.'\nAND n.gender = 'f';",
    "25-0_testing_51": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(Natasina majka)', '(play \"Totentanz\")', '(as V. Mikhailov)', '(show-window)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('stock-exchange', 'slipping-on-blood', 'organelle', 'income-tax-evasion', 'indigo-children')\nAND mi.info = 'Bolivia:26 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_52": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant production coordinator)', '(as Matthew Jared)', '(as Nadereh)', '(medical examiner)', '(as Brooke Hoyt)')\nAND it1.info = 'countries'\nAND it2.info = 'rating'\nAND k.keyword IN ('fight', 'agouti', 'fishing-lure', 'tv-head', 'plastic-utensil')\nAND mi.info = 'Germany'\nAND n.gender = 'f';",
    "25-0_testing_53": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alesa B. Gantz)', '(as Jamar)', '(as Birthe Newmann)', '(as Clotilde De)', '(as Ward Williams)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('church', 'tool-kit', 'order-of-execution', 'chopsticks-the-song', 'corregio-madonna')\nAND mi.info = 'Hungary:21 June 2010'\nAND n.gender = 'f';",
    "25-0_testing_54": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(as Flavie Ducores)', '(as Sabrena Dawn)', '(as Sue Lentini)', '(as Kay Foster)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('fight', 'dances-with-wolves', 'scrap-yard', 'film-maudit', 'chicory')\nAND mi.info = 'Withnail: [fondling the money Monty has given them to buy wellingtons] I think a drink, don''t you?::Marwood: What about the wellingtons?::Withnail: Oh, bollocks to the wellingtons. We''ll tell him they had a farmers conference and had a run on them.'\nAND n.gender = 'm';",
    "25-0_testing_55": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(in-game music)', '(as Jerry Okuneff)', '(as Chris Bunworth)', '(story \"Barkhany\")')\nAND it1.info = 'LD catalog number'\nAND it2.info = 'rating'\nAND k.keyword IN ('boyfriend-girlfriend-relationship', 'public-execution', 'futurism', 'mini-dv', 'dying-daughter')\nAND mi.info = 'VLD 3275'\nAND n.gender = 'm';",
    "25-0_testing_56": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(in ''Funny Girl'')', '(as Mery)', '(as Jan & Ren\u00c3\u00a9)', '(as Dave Castillo)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('pistol-whip', 'lecture-hall', 'arrival', 'photo-montage', 'foot-on-crotch')\nAND mi.info = 'Israel:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_57": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(as Leonhard Mader)', '(as Anne Yee)', '(rival gangleader)', '(as Eduardo Tilve)')\nAND it1.info = 'LD disc format'\nAND it2.info = 'rating'\nAND k.keyword IN ('based-on-distorted-reality', 'love-thwarted', 'rotary-club', 'uranium-238', 'shared-grave')\nAND mi.info = 'CLV'\nAND n.gender = 'm';",
    "25-0_testing_58": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Bo Wideberg)', '(as Bill Reilly)', '(as Peikoff)', '(as Bart Gunn)')\nAND it1.info = 'plot'\nAND it2.info = 'votes'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'brandon-california', 'letter-to-god', 'shop-teacher', 'nigerian-music')\nAND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy prot\u00c3\u00a9g\u00c3\u00a9 from his television show and billed above the title and first billed in the cast as Laurie (\"I-like-the-wide-open-spaces\") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in \"McLintock.\" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his \"Screen Snapshots\" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'\nAND n.gender = 'm';",
    "25-0_testing_59": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(stand-in: Japan)', '(as Jean Tatum)', '(as Yvan Heylen)', '(Miss March 1986)')\nAND it1.info = 'LD video standard'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('boyfriend-girlfriend-relationship', 'bergdorf-goodman''s', 'archaeopteryx', 'sucking-on-ear', 'spider''s-milk')\nAND mi.info = 'NTSC'\nAND n.gender = 'm';",
    "25-0_testing_60": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Jefferson Airplane)', '(as Dr. Vera Rubin)', '(Keyboardist)', '(as M. Doro)', '(as Lajos D.)')\nAND it1.info = 'gross'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('end-of-an-era', 'armenian-terrorism', 'little-black-dress', 'schools', 'model-agent')\nAND mi.info = '$119,759 (USA) (3 September 2000)'\nAND n.gender = 'm';",
    "25-0_testing_61": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as JP Hubbell)', '(as Jessica Paul)', '(Eddie)', '(as Joan La Duca)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes'\nAND k.keyword IN ('title-at-the-end', 'oklahoma-city', 'toy-van', 'make-it-rain', 'karantina-massacre')\nAND mi.info = 'Sweden:15'\nAND n.gender = 'm';",
    "25-0_testing_62": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Frank Apitz)', '(as Michael Nyilas)', '(as Elizabeth Drew)', '(as Red Schwartz)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('police-officer-killed', 'inability-to-drive', 'embracing-future', 'afro', 'stuffed-pheasant')\nAND mi.info = 'John Blake: [to Bruce Wayne] I don''t know why you took the fall for Dent''s murder, but I''m still a believer in the Batman.'\nAND n.gender = 'f';",
    "25-0_testing_63": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant) (uncredited)', '(as Carol Walker)', '(as Hanna Hunter)', '(as Sammy Lee)', '(as Vladka Erbov\u00c3\u00a1)')\nAND it1.info = 'countries'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('amateur-radio', 'trick-or-treat', 'chorus-girl', 'police-massacre', 'weekend-pass')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_64": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Bartek Kita)', '(cook) (uncredited)', '(as Cecily Wiggins)', '(as Aletha Orr)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('secret-door', 'serpent', 'school-bus-safety', 'arbeitslager', 'comedy-of-errors')\nAND mi.info = 'FAKE: During the stadium scene in Gotham City, at one point a logo reading \"UPMC\" (University of Pittsburgh Medical Center) is clearly visible next to Bane''s head.'\nAND n.gender = 'f';",
    "25-0_testing_65": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Alan Deloin)', '(as Rupert Seidl)', '(as Tony Wong)', '(as Berek Kati)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('necklace', 'cattle-mustering', 'landscape-art', 'naive-boy', 'road-closed')\nAND mi.info = 'Malaysia:19 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_66": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Paul Smith)', '(as Thanos Loukas)', '(as Sanders)', '(road manager)', '(as Gitti & Erika)')\nAND it1.info = 'trivia'\nAND it2.info = 'votes'\nAND k.keyword IN ('cruelty', 'opthalmologist', 'topical-humor', 'direct-cinema', '60-a.d.')\nAND mi.info = 'In 2004, screen-writer ''Oliver Stone (I)'' (qv) apologized for the portrayal of Turkey, Turkish prisons and the Turkish people in the movie.'\nAND n.gender = 'm';",
    "25-0_testing_67": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Mary B. Keller)', '(Dadiji)', '(as Joe Thompson)', '(adr)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('sawed-off-shotgun', 'nofx', 'anonymous-charity', 'rigged-casino', 'platinum-island')\nAND mi.info = 'Hong Kong:IIA'\nAND n.gender = 'm';",
    "25-0_testing_68": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Jee Yun Lee)', '(as Nicky Barrat)', '(as German Rojas)', '(senior armorer)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('orphan', 'framed-butterfly', 'cast-iron', 'foley-alabama', 'dojang')\nAND mi.info = 'CONT: When Catwoman shoots the cars blocking the tunnel, she beforehand puts on her glasses. In the next shot, she doesn''t have her glasses on, just the mask.'\nAND n.gender = 'm';",
    "25-0_testing_69": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(written by)', '(as Vlada i Bajka)', '(as Sam Delilo)', '(gorilla)', '(as Joseph Conlon)')\nAND it1.info = 'LD category'\nAND it2.info = 'votes'\nAND k.keyword IN ('woman-with-glasses', 'lightwave', 'back-stairway', 'biting-crotch', 'market-populism')\nAND mi.info = 'Movie'\nAND n.gender = 'm';",
    "25-0_testing_70": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Dave Savage)', '(as Charo Lopez)', '(retail sales)', '(as Joe Virgel)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('orphan', 'unrealistic', 'clipboard', 'bicycle-chain', 'awaiting-a-messiah')\nAND mi.info = 'OFM:65 mm'\nAND n.gender = 'm';",
    "25-0_testing_71": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Tom Larson)', '(as Hans Sturm)', '(as Tan En-mei)', '(medical equipment)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('grandmother', 'moaning-gown', 'live-in-girlfriend', 'revenge-on-bully', 'atomic-bomb-victim')\nAND mi.info = 'Julien: Cursed be he who puts an obstacle in the path of a blind man.'\nAND n.gender = 'm';",
    "25-0_testing_72": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as K@rl Pfeifer)', '(as Mary Ryan)', '(artist producer)', '(as Ben Padero)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('orphan', 'manhattan-ice-tea', 'carbon', 'hearing-impairment', '8-perspectives')\nAND mi.info = 'FAIR: In \"Batman Begins\" Lucius Fox says about the Batsuit: \"This sucker will stop a knife.\" In \"The Dark Knight Rises\", Batman gets stabbed. However, in \"The Dark Knight\", Fox gives Batman a new suit that makes him more agile but also \"more vulnerable to knives and gunfire\". If Batman kept his old suit, it''s likely that the knife would''ve been less effective.'\nAND n.gender = 'f';",
    "25-0_testing_73": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as NaOnka Mixon)', '(as Vic Bandera)', '(as Zita Bernstein)', '(as Steve Turner)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('honor', 'hit-with-a-crowbar', 'quebec-nationalism', 'purple-ribbon', 'barbecue-pit')\nAND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'\nAND n.gender = 'm';",
    "25-0_testing_74": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Xavi Figuerola)', '(as I.Yazvinskaya)', '(Potential Victim)', '(as William Hicks)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('police-officer-killed', 'sex-tourism', 'mechanical-heart', 'asp', 'central-africa')\nAND mi.info = 'Norway:25 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_75": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(EFP/JIB operator)', '(as Graicy O''Hara)', '(contract officer)', '(as Ivo G\u00c3\u00bcbel)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('police-officer-killed', 'year-10991', 'zlotys', 'stick-fighting', 'american-nazi-party')\nAND mi.info = 'Australia:19 July 2012'\nAND n.gender = 'f';",
    "25-0_testing_76": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(director of photography)', '(as Rob Kenneally)', '(as Candy Mobley)', '(as Albert Dagnan)', '(as Wm. Dyer)')\nAND it1.info = 'locations'\nAND it2.info = 'votes'\nAND k.keyword IN ('cocaine', 'aloof', 'frankenstein', 'trigger-sports', 'moe-hare')\nAND mi.info = 'Valencia, California, USA'\nAND n.gender = 'm';",
    "25-0_testing_77": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Maeve Dermody)', '(as Dr. Tony Kim)', '(as Thomas Happer)', '(as Ren\u00c3\u00a9 Ojeda)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('theft', 'language-course', 'prime-suspect', 'techno', 'new-canaan')\nAND mi.info = 'UK:18 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_78": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as @DannyZuker)', '(Canadian PM, 1939)', '(1981) (as Brienne)', '(as David Oca\u00c3\u00b1as)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('machine-gun-nest', 'savage', 'greek-christian', 'security-police', 'opportunism')\nAND mi.info = 'Kerrigan: [Observing the starving Italian orphans picking through garbagr cans] They picked a great time to be born, didn''t they?'\nAND n.gender = 'm';",
    "25-0_testing_79": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Matt Nagrete)', '(as Eddie Gregory)', '(as Dayal)', '(as James Rolfe)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('robbery', 'abrupt-ending', 'palm-oil', 'austria-history', 'secret-exposed')\nAND mi.info = 'PCS:Spherical'\nAND n.gender = 'm';",
    "25-0_testing_80": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(as Jordi Gigo)', '(as Gisele Ingrid)', '(as Edward Faietta)', '(segment \"Camote\")')\nAND it1.info = 'LD number'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('digging-through-a-prison-wall', 'weak-king', 'everglades', 'centre-county', 'magic-versus-will')\nAND mi.info = '2904'\nAND n.gender = 'm';",
    "25-0_testing_81": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant) (uncredited)', '(stereotypical Jew)', '(as Nikki Swasey)', '(as Mrs. Clarke)', '(as Bob Oram)')\nAND it1.info = 'weekend gross'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('tgv', 'bikini-model', 'attacked-by-a-dog', 'dullahan', 'commencement-speech')\nAND mi.info = '$6,338 (USA) (4 September 2005) (3 screens)'\nAND n.gender = 'm';",
    "25-0_testing_82": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Thomas Kuhn)', '(as Sharon Jones)', '(as M. Henry)', '(as Karl Arana)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('shot-to-death', 'grogeous', 'cartoon-cheetah', 'exploding-truck', 'birkenhead-england')\nAND mi.info = 'Alfred: I''ll get this to Mr. Fox, but no more. I''ve sewn you up, I''ve set your bones, but I won''t bury you. I''ve buried enough members of the Wayne family.::Bruce Wayne: You''ll leave me?::Alfred: You see only one end to your journey. Leaving is all I have to make you understand, you''re not Batman anymore. You have to find another way. You used to talk about finishing a life beyond that awful cape.::Bruce Wayne: Rachel died believing that we would be together; that was my life beyond the cape. I can''t just move on. She didn''t, she couldn''t.::Alfred: What if she had? What if, before she died, she wrote a letter saying she chose Harvey Dent over you? And what if, to spare your pain, I burnt that letter?::Bruce Wayne: How dare you use Rachel to try to stop me?::Alfred: I am using the truth, Master Wayne. Maybe it''s time we all stop trying to outsmart the truth and let it have its day. I''m sorry.::Bruce Wayne: You''re sorry? You expect to destroy my world and then think we''re going to shake hands?::Alfred: No... no, I know what this means.::Bruce Wayne: What does it mean?::Alfred: It means your hatred... and it also means losing someone that I have cared for since I first heard his cries echo through this house. But it might also mean saving your life. And that is more important.::Bruce Wayne: Goodbye, Alfred.'\nAND n.gender = 'm';",
    "25-0_testing_83": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant)', '(as E. Vlasenko)', '(as Edi Saito)', '(6 episodes 1993)', '(aide de camp)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('orphan', 'drunken-doctor', 'teddy-corset', 'epcot-center', 'negro-life')\nAND mi.info = 'Thailand:19 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_84": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(Metzger-Gehilfe)', '(as Nikki Nieves)', '(as Vanna)', '(as A. Veksler)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('apple', 'renal-dysfunction', 'minister-of-culture', 'slicing', 'protective-helmet')\nAND mi.info = 'USA:22 September 1939'\nAND n.gender = 'f';",
    "25-0_testing_85": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Deisy)', '(Mun-ho''s wife)', '(as Space)', '(as Jessie Vega)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('title-at-the-end', 'drug-paraphanalia', 'tin-cup', 'mysterious-object', 'window-blow-open')\nAND mi.info = 'FAKE: When Batman saves Blake from the ambush by Christopher Judge''s character, he fights the henchmen. The guy to the very left never even encounters him yet is flown backwards and falls down as if he was attacked by Batman.'\nAND n.gender = 'm';",
    "25-0_testing_86": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Jesse Dunn)', '(as Daniel Brucker)', '(as Wolf)', '(as Hsiao Ying-Chi)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('sawed-off-shotgun', 'glass-painting', 'green-tights', 'midnight-launch', 'elvira')\nAND mi.info = 'Ra''s al Ghul: You, yourself fought the decadence of Gotham for years with all your strength, all your resources, all your moral authority and the only victory you achieved was a lie. Now you understand Gotham is beyond saving and must be allowed to die.'\nAND n.gender = 'f';",
    "25-0_testing_87": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(story \"D\u00c3\u00bckkanci\")', '(as Francis Dumond)', '(as Sandy Crisp)', '(as Pete Aromando)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('fight', 'legend-of-ostara', 'post-rock', 'ketchup-for-blood', 'media-frenzy')\nAND mi.info = 'Hungary:21 May 2011'\nAND n.gender = 'f';",
    "25-0_testing_88": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Igor Sk)', '(as Guli Korolyova)', '(as Ona)', '(as Daz)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('title-at-the-end', 'camera-man', 'pagan-subtext', 'georgia-state-flag', 'draft-dodger')\nAND mi.info = 'CAM:Arriflex 235, Panavision C-, E-Series and Super High Speed Lenses'\nAND n.gender = 'f';",
    "25-0_testing_89": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Donal Ward)', '(as \u00c3\u0081rbol)', '(as Pete Gas)', '(as Flesh Andrea)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'meany-miny-and-moe', 'woman''s-birthday', 'athlete', 'radio-telescope')\nAND mi.info = 'PCS:Spherical'\nAND n.gender = 'm';",
    "25-0_testing_90": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(Chain)', '(as Sophie O)', '(as Leon Dobrinski)', '(as Michaela V.)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('stabbed-in-the-chest', 'little-champ', 'death-wail', 'recuperation', 'jivaro')\nAND mi.info = 'Hooded Man #2: Have we started the fire?::Bane: Yes. The fire rises.'\nAND n.gender = 'm';",
    "25-0_testing_91": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Jan Caruna)', '(as Dr. Ted Selker)', '(V.J.)', '(Age 8-9)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('machine-gun-nest', 'keyboard-player', 'rolling-downhill', 'road-accident', '1985')\nAND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'\nAND n.gender = 'm';",
    "25-0_testing_92": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Sean Tate)', '(as Tomiko Ly)', '(Juicy''s Mother)', '(as Esther)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('pistol-whip', 'mud-people', 'plastikman', 'nauvoo-illinois', 'silhouettes')\nAND mi.info = 'Australia:M'\nAND n.gender = 'f';",
    "25-0_testing_93": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(fight arranger)', '(as Gao Shan)', '(home)', '(as Sampo)', '(as John Sandford)')\nAND it1.info = 'trivia'\nAND it2.info = 'votes'\nAND k.keyword IN ('american-consulate', 'suburbs', 'flank-speed', 'papist', 'cookery')\nAND mi.info = 'Billy Hayes'' speech in the courtroom scene in the film went longer than it did in real life. In it, Billy gives a long soliloquy against the Turkish penal system and according to Hayes, said everything he wish he had said in the dock.'\nAND n.gender = 'm';",
    "25-0_testing_94": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Jefferson Airplane)', '(as Kandaswami)', '(as Mark Labett)', '(as A-Teens)', '(as Tom Hunter)')\nAND it1.info = 'countries'\nAND it2.info = 'votes'\nAND k.keyword IN ('performance', 'dance-performance', 'virtual-fantasy', 'japanese-government', 'chatsworth-england')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_95": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Pater Staub)', '(video taper)', '(as Alex Welch)', '(as Davin Carey)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('murder', 'automaker', 'smelling-salts', 'bowling-arcade-game', 'reconstruction-era')\nAND mi.info = '[Two traders are getting their shoes shined]::Trader #2: You can''t short the stock because Bruce Wayne goes to a party.::Trader #1: Wayne coming back is change. Change is either good or bad. I pick bad.::Trader #2: On what basis?::Trader #1: I flipped a coin. [They leave, at which point the man shining their shoes reaches into his gym bag and pulls out a submachine gun]'\nAND n.gender = 'm';",
    "25-0_testing_96": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Matolay G\u00c3\u00a9za)', '(as J.F. Otto)', '(as Bob Mora)', '(as Parkyakarkus)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('sawed-off-shotgun', 'power-shutdown', 'upper-egypt', 'diocese', 'training-a-bird')\nAND mi.info = 'Hong Kong:19 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_97": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant)', '(as Garlin Green)', '(as Susan H\u00c3\u00b6cke)', '(as Julian Dower)', '(as Andy Milonokis)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('theft', 'series-of-accidents', 'high-crime', 'castration-threat', 'self-education')\nAND mi.info = 'Morocco:25 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_98": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Sue Matthews)', '(as Volodya Shvets)', '(as Shao-hsiang Li)', '(as Keie Deei)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('pearl-harbor', 'present-indicative', 'boiling-flask', 'scattering-ashes', 'drink-me')\nAND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'\nAND n.gender = 'm';",
    "25-0_testing_99": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as D. Kasymov)', '(as K. H. W\u00c3\u00bcpper)', '(as Mad. Geoffroy)', '(trailer director)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('indian-chief', 'installation-art', 'car-floating-away', 'endoscopy', 'gift-wrapped-box')\nAND mi.info = 'Chief Whitedeer: [looking at the new division arm patch] Thunderbird, bringer of rain. It is new. Why you change it?::Cpl. Ralph Mogay: I have the old one. [close-up of Mogay holding the old swastika patch the division had used before] Hitler took our sign.::Chief Whitedeer: Hitler? Oh, the crazy man. You take it back, son.::Cpl. Ralph Mogay: Maybe we will, soon.'\nAND n.gender = 'm';",
    "25-0_testing_100": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(Russian dialogue)', '(as Bob Sola)', '(as Dai Ngyuyen)', '(music consultant)')\nAND it1.info = 'plot'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('stagecoach', 'gothic-cathedral', 'six-stories', 'hunting-accident', 'gooseberry-bush')\nAND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy prot\u00c3\u00a9g\u00c3\u00a9 from his television show and billed above the title and first billed in the cast as Laurie (\"I-like-the-wide-open-spaces\") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in \"McLintock.\" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his \"Screen Snapshots\" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'\nAND n.gender = 'm';",
    "25-0_testing_101": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Saliva)', '(as Lino Furlai)', '(as F.A. Kelsey)', '(Red Lamp House)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('shotgun', 'late-night', 'red-maple-leaf', 'yerevan', 'airplane-accident')\nAND mi.info = '[Bane''s men announce their entry into the stock exchange, as the food delivery man shoots down a trader, while the shoeshiner and janitor fire their guns into the trading screen. As the screens shut off, Bane comes in and walks over to one trader]::Trader #1: This is a stock exchange! There''s no money you can steal!::Bane: Really? Then why are you people here? [Bane drags the trader by his tie across the floor to a computer terminal, slams his head against the table, and uses his security card to log-in and start the application on the shoeshiner''s laptop]'\nAND n.gender = 'm';",
    "25-0_testing_102": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(novel)', '(as Alana Hamilton)', '(as Shakil Khan)', '(quick draw expert)', '(as Philip Oxman)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes'\nAND k.keyword IN ('shot-to-death', 'politics', 'russian-dragoon', 'boiling-a-recording', 'sprint-distance')\nAND mi.info = 'CONT: Brant is driving a Mercedes 560SEC Coupe. Near the end of the movie he is being followed by \"Blitz\" away from a funeral when his stock (period) 15-inch wheels suddenly become modern 19-inch shiny rims.'\nAND n.gender = 'm';",
    "25-0_testing_103": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Marisol Giro)', '(1992-1996)', '(novel \"By Jiminy\")', '(1930-1933)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('reference-to-mussolini', 'group-dynamics', 'siege-ramp', 'zypora', 'ale')\nAND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'\nAND n.gender = 'm';",
    "25-0_testing_104": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as D. Bortnyansky)', '(as Blue Lagoon)', '(as Esha)', '(as Greg Southard)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('night-cityscape', 'animated-dog', 'limit', 'adbusters', 'it-girl')\nAND mi.info = 'Lucius Fox: It has a long uninteresting name. I just took to calling it... The Bat, and yes, Mr. Wayne, it does come in black.'\nAND n.gender = 'f';",
    "25-0_testing_105": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(novel)', '(as Jose Biggel)', '(as Dan Kay)', '(as Kamla Kant)', '(stage planner)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('train-depot', 'sword-master', 'repressed-violence', 'porno-awards-show', 'hostile-workplace')\nAND mi.info = 'CONT: In the final scene when Brant shoots \"The Blitz\", Brant is holding a revolver in close up and lowers his arm after he fires. When the camera changes to a long shot a few seconds later, Brant is holding the Sig Sauer and his arm is raised as it was before.'\nAND n.gender = 'm';",
    "25-0_testing_106": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Marylyn Ross)', '(as Kandee Licks)', '(as Lucien John)', '(as Jeffrey Ong)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('thief', 'japanese-shocker', 'immigrant', 'hand-drawn', 'yell')\nAND mi.info = 'Trinidad and Tobago:25 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_107": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Chester Sims)', '(as J. Nermut)', '(as Lazar)', '(as Gy\u00c3\u00b5ry Emil)')\nAND it1.info = 'plot'\nAND it2.info = 'rating'\nAND k.keyword IN ('gang-member', 'health-farm', 'resistor', 'art-contest', 'wall-safe')\nAND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy prot\u00c3\u00a9g\u00c3\u00a9 from his television show and billed above the title and first billed in the cast as Laurie (\"I-like-the-wide-open-spaces\") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in \"McLintock.\" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his \"Screen Snapshots\" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'\nAND n.gender = 'm';",
    "25-0_testing_108": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant: Houston)', '(as M\u00c3\u00a1ria Illy\u00c3\u00a9s)', '(as Cheabow)', '(as Indera Bansal)', '(as Bernard Purdie)')\nAND it1.info = 'LD master format'\nAND it2.info = 'votes'\nAND k.keyword IN ('post-college', 'prison-discharge', 'nylon-fetish', 'torrevieja-spain', 'blown-cover')\nAND mi.info = 'Film'\nAND n.gender = 'm';",
    "25-0_testing_109": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(craft service)', '(as Jin Tha MC)', '(as Brian McGugan)', '(play script)', '(Joao)')\nAND it1.info = 'locations'\nAND it2.info = 'rating'\nAND k.keyword IN ('freight-train', 'carriage-horse', 'russian-politician', 'voting-by-phone', 'urban-fable')\nAND mi.info = 'Santa Monica Promenade, Santa Monica, California, USA'\nAND n.gender = 'f';",
    "25-0_testing_110": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(as Will Paterson)', '(druid wrangler)', '(as Robert Walters)', '(as gyom h.)')\nAND it1.info = 'LD quality program'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('dying', 'screen-montage', 'conservative', 'parricide', 'mayan-hieroglyph')\nAND mi.info = '-'\nAND n.gender = 'm';",
    "25-0_testing_111": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Jeff Abramson)', '(as Abti Alg\u00c3\u00bcl)', '(from Otoko Oidon)', '(as Karen Chan)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('amphibious-landing', 'stagedoor-manor', 'windrush', 'foreign-born-indian', 'kids-playing')\nAND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'\nAND n.gender = 'm';",
    "25-0_testing_112": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Roberto Chapu)', '(as Jan Dean)', '(8mm transfer)', '(as Anna Ortiz)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('death-of-mother', 'grenade-launcher', 'television-series', 'minuteman-missle', 'traveling-circus')\nAND mi.info = 'Lt. Manning: At 0500 we''ll open up with small arms fire. The 7th will move across at the same time. I''m sure the Jerries will throw some entertainment our way.::Audie Murphy: I think you can count on it, Lieutenant.'\nAND n.gender = 'm';",
    "25-0_testing_113": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(Special Features)', '(as Ricardo Wiley)', '(as Tali Cochrane)', '(novel \"Yllet\")')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('pistol-whip', 'holy-land-crusades', 'vacationer', 'lerida-spain', 'bleeding-from-eyes')\nAND mi.info = 'South Korea:15'\nAND n.gender = 'm';",
    "25-0_testing_114": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Jan and Dean)', '(as Radheyshyam)', '(book) (as Tiitus)', '(as Korina H.)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('hero', 'tree-of-knowledge', 'fictional-place', 'leaky-apartment', 'learning-english')\nAND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'\nAND n.gender = 'm';",
    "25-0_testing_115": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(director: finance)', '(as Michael Thomas)', '(producer: imaging)', '(as Max Kesmodel)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('stagecoach', 'inquisition', 'pilcopata-peru', 'young-woman', 'tree-falls-on-house')\nAND mi.info = 'PCS:Spherical'\nAND n.gender = 'm';",
    "25-0_testing_116": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set intern)', '(as Neil Barry)', '(as Nature)', '(as Boris Levin)', '(as Carl Galan)')\nAND it1.info = 'genres'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('nudity', 'mechanical-arm', 'spiral', 'farm', 'circus-strongman')\nAND mi.info = 'Drama'\nAND n.gender = 'm';",
    "25-0_testing_117": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Mr. Barrington)', '(as Tso Kin)', '(as Michael O''Day)', '(with acid)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('orphan', 'indiana', 'anglo-american', 'son-of-a-king', 'jiggaboo')\nAND mi.info = 'FAKE: The seasons throughout the film are portrayed inconsistently even with the passage of time. This is evidenced via leaf foliage shown inconsistently throughout the film. For example, during the \"winter\" scenes on the isolated Gotham, many streets have a dusting of \"snow\" only to have trees with green leaves visible a block away.'\nAND n.gender = 'm';",
    "25-0_testing_118": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Pam Miras)', '(Captain - LSE)', '(as Bill Childers)', '(talent travel)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('swat', 'seaside', 'animal-cake', 'locked-in-a-car', 'heavy-sleeper')\nAND mi.info = 'Finland:K-12'\nAND n.gender = 'f';",
    "25-0_testing_119": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(craft service)', '(as Shannah Betz)', '(as A. Panova)', '(piano/organ)', '(as Ant Neate)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('wine', 'mind-over-matter', 'peach-cobbler', 'general-strike', 'blue-dress')\nAND mi.info = 'Israel:30 July 1998'\nAND n.gender = 'm';",
    "25-0_testing_120": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Raja Avasthi)', '(as Toni Leicester)', '(The Witches)', '(as A. Krmela)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('pistol-whip', 'artillery', 'thrown-out-of-class', 'cutting-toe-nails', 'licks')\nAND mi.info = 'Israel:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_121": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Elena Moseva)', '(as Roger Boren)', '(as Tim Waddel)', '(as Bill Pettigrew)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('necklace', 'girl-mouse', 'friendship-gone-bad', 'church-bishop', 'photographic-memory')\nAND mi.info = 'Alfred: I''ll get this to Mr. Fox, but no more. I''ve sewn you up, I''ve set your bones, but I won''t bury you. I''ve buried enough members of the Wayne family.::Bruce Wayne: You''ll leave me?::Alfred: You see only one end to your journey. Leaving is all I have to make you understand, you''re not Batman anymore. You have to find another way. You used to talk about finishing a life beyond that awful cape.::Bruce Wayne: Rachel died believing that we would be together; that was my life beyond the cape. I can''t just move on. She didn''t, she couldn''t.::Alfred: What if she had? What if, before she died, she wrote a letter saying she chose Harvey Dent over you? And what if, to spare your pain, I burnt that letter?::Bruce Wayne: How dare you use Rachel to try to stop me?::Alfred: I am using the truth, Master Wayne. Maybe it''s time we all stop trying to outsmart the truth and let it have its day. I''m sorry.::Bruce Wayne: You''re sorry? You expect to destroy my world and then think we''re going to shake hands?::Alfred: No... no, I know what this means.::Bruce Wayne: What does it mean?::Alfred: It means your hatred... and it also means losing someone that I have cared for since I first heard his cries echo through this house. But it might also mean saving your life. And that is more important.::Bruce Wayne: Goodbye, Alfred.'\nAND n.gender = 'f';",
    "25-0_testing_122": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(as Riccardo Tarci)', '(as Elena Buhaci)', '(as Stevo Jocz)', '(2010-)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('tribute', 'selling-tv', 'gay-action-hero', 'fire-plough', 'mgm-promotional')\nAND mi.info = 'Singapore:19 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_123": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Gordon Kee)', '(as Larin Raker)', '(as Nathan Bosckay)', '(as Gor\u00c3\u00b4 Kataoka)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('stabbed-in-the-chest', 'flower-wreaf', 'black-eye-patch', 'alien-predator', 'exchange-rate')\nAND mi.info = 'CONT: When Catwoman shoots the cars blocking the tunnel, she beforehand puts on her glasses. In the next shot, she doesn''t have her glasses on, just the mask.'\nAND n.gender = 'm';",
    "25-0_testing_124": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Koyama Noriko)', '(1976) (uncredited)', '(as Kane)', '(as Shush)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('secret-door', 'marine-biology', 'grande-dame-guignol', 'guerilla-base', 'house-on-stilts')\nAND mi.info = 'Catwoman: You could have gone anywhere, but you came back.::Batman: So did you.::Catwoman: Well then I guess we''re both suckers.::[she kisses him]'\nAND n.gender = 'm';",
    "25-0_testing_125": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location manager) (uncredited)', '(as Adrizonu)', '(as Rona Johnstone)', '(as Pedro Antonio)', '(as Onjulic)')\nAND it1.info = 'printed media reviews'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('tanker', 'pathologist', 'camp-kill-yourself', 'travel-alarm-clock', 'illustration-model')\nAND mi.info = 'Gerle, J\u00c3\u00b6rg. \"28 Days Later\". In: \"film dienst\" (Germany), Vol. 56, Iss. 12, 3 June 2003, Pg. 33'\nAND n.gender = 'm';",
    "25-0_testing_126": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(as Kim Spies)', '(as David Morse)', '(dubbing voice)', '(as Eric J. Berner)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('sniper-rifle', 'monopoly', 'psychoanalysis', 'making-a-budget', 'romanian-embassy')\nAND mi.info = 'MET:4473 m'\nAND n.gender = 'm';",
    "25-0_testing_127": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Sonny Davis)', '(Father of Vijay)', '(as James Webb)', '(as Michael Amory)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('murder', 'groupon', '28th-century', 'man-on-the-moon', 'girl-heroine')\nAND mi.info = 'FAIR: Midway through the movie, there is an aerial shot of a Tumbler (Batmobile) being slowly driven down a snow-covered street. The vehicle features a set of 4 rear wheels, yet only a single set of tire tracks are left in its path. However given that the Tumbler is a real vehicle constructed for the movie (neither a special effect, nor fake constructed over another vehicle) this is probably how the vehicle leaves tracks at low speed. (Six-wheel drive is unlikely to be efficient in slow city driving.)'\nAND n.gender = 'f';",
    "25-0_testing_128": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(craft service)', '(as ED J. Horton)', '(as Denissa D\u00c3\u00a9r)', '(as Maria Lucia)', '(as Tank Jones)')\nAND it1.info = 'filming dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('fire', 'emperor-of-china', 'number-32-jersey', 'filet-mignon', 'bosnia-syndrome')\nAND mi.info = '3 July 2007 - November 2007'\nAND n.gender = 'f';",
    "25-0_testing_129": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(story)', '(as Luk Kam Bo)', '(as Bhavna Bhatt)', '(as Yuya Ogawa)', '(as Sandy Samuels)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes'\nAND k.keyword IN ('slow-motion-scene', 'beer-salesgirl', 'walking-on-fire', 'pet-allergy', 'singing-to-a-doll')\nAND mi.info = 'CREW: During the shootout replay at the bar, with Eunice walking down the middle of the mobsters, you can see the blood packs behind several of the guys'' shirts and the mini-explosions that go off when they are triggered.'\nAND n.gender = 'm';",
    "25-0_testing_130": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Andre Slexsen)', '(as David Atkins)', '(as Ewa Gralak)', '(as Brett Charles)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('night-cityscape', 'juvenile-crime', 'crime-ring', 'latina', 'plastic-trash-bag')\nAND mi.info = 'Chile:Y7'\nAND n.gender = 'f';",
    "25-0_testing_131": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as Tudor Panduru)', '(Angelo''s Mother)', '(as Mike Gowdy)', '(as Gary McMillian)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('police-officer-killed', 'facial-hair', 'normal-texas', 'digital-casino', 'witold-gombrowicz')\nAND mi.info = 'Israel:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_132": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(as William White)', '(as Ranata S. Aly)', '(as Biru Robinson)', '(as Ulrika Hohlt)')\nAND it1.info = 'LD language'\nAND it2.info = 'votes'\nAND k.keyword IN ('bare-breasts', 'choral-recitative', 'vanity', 'cherries', 'herman-brood')\nAND mi.info = 'English'\nAND n.gender = 'm';",
    "25-0_testing_133": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant) (uncredited)', '(as Marco Hansom)', '(as Ray Shuman)', '(as The Smoke)', '(as John Vennema)')\nAND it1.info = 'countries'\nAND it2.info = 'rating'\nAND k.keyword IN ('police-station', 'hand-car', 'scissor-hands', 'house-of-windsor', 'disestablishment')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_134": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Shaad)', '(as Tracy Voyek)', '(as Arne Burchardt)', '(beadwork)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('secret-door', 'personal-genome', 'fake-brother', 'confidence-game', 'video-editing')\nAND mi.info = 'OFM:65 mm'\nAND n.gender = 'm';",
    "25-0_testing_135": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Miklos Rozsa)', '(as Stephan Lovatt)', '(as James Edwards)', '(as Keely Smith)', '(as Underdog Lady)')\nAND it1.info = 'copyright holder'\nAND it2.info = 'votes'\nAND k.keyword IN ('slow-motion-scene', 'far-west', 'car-vandalized', 'ashes', 'prison-shower')\nAND mi.info = 'Copyright MCMXL by Alexander Korda Films, Inc.'\nAND n.gender = 'm';",
    "25-0_testing_136": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(Open All Hours)', '(as Emotion)', '(as Shahid Ali)', '(MOW Detective)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('casablanca-morocco', 'oleo', 'american-muscle', 'jumping-onto-a-bed', 'texan-accent')\nAND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'\nAND n.gender = 'm';",
    "25-0_testing_137": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(presenter)', '(as Kalle Bjerk\u00c3\u00b8)', '(as Adam Trottman)', '(as Joe Casaliggi)', '(as Mr. WC)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('electrocution', 'train-explosion', 'weekly', 'key-master', 'surface-of-the-sun')\nAND mi.info = 'Iceland:L'\nAND n.gender = 'm';",
    "25-0_testing_138": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Willard Pugh)', '(as Douglas Purdy)', '(as Mike Higgins)', '(episodes 2 & 7)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes'\nAND k.keyword IN ('cheerleading', 'the-rock', 'sulfa-powder', 'team-leader', 'religious-mysticism')\nAND mi.info = 'Germany:12'\nAND n.gender = 'f';",
    "25-0_testing_139": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Bando da Lua)', '(episode 1.23)', '(as Malorie)', '(Farraj)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'murder-in-hospital', 'part-improvisation', 'anti-drugs-program', 'salt-on-tail')\nAND mi.info = 'OFM:35 mm'\nAND n.gender = 'm';",
    "25-0_testing_140": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Angela Devil)', '(as Jack R. Wilkes)', '(stand-in: Desi)', '(as Lauren Vaughan)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('song', 'bells', 'school-attendance', 'serial-killer-m.o.', 'secret-service-plot')\nAND mi.info = 'PFM:35 mm'\nAND n.gender = 'm';",
    "25-0_testing_141": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant)', '(as Z. Skoczek)', '(as S.Sharangovich)', '(as Chelsea Swain)', '(as Angelica Fox)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('shotgun', 'mother-figure', 'preface', 'cutting-wood', 'urban-legend-vector')\nAND mi.info = 'Germany:26 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_142": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(LSD y Hero\u00c3\u00adna)', '(as Kaylee LoveCox)', '(as Zandra D''Abreu)', '(as Jean Ann Lewis)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('shot-to-death', 'nazi-occupation', 'cities', 'agano-river-japan', 'docu-art')\nAND mi.info = 'CONT: After Bane and his men attack the stock exchange, vehicle crash barriers are deployed on the streets. The one we see deploying has its open side towards the stock exchange. But when Bane and his men leave on their motorcycles, the open sides of the angled crash barriers are pointed away from the exchange allowing Bane to use them as ramps.'\nAND n.gender = 'f';",
    "25-0_testing_143": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Filippone)', '(as Paul Scarif)', '(as Will Roache)', '(as L\u00c3\u00a9on Batifol)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('snow', 'dead-body-in-closet', 'loan-shark', 'altered-photograph', 'general-pershing')\nAND mi.info = 'PCS:VistaVision'\nAND n.gender = 'm';",
    "25-0_testing_144": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(as M\u00c3\u00bcfid Kiper)', '(as Fabio Pasolini)', '(as Kimmy Gatewood)', '(as Ellie Omiya)')\nAND it1.info = 'trivia'\nAND it2.info = 'votes'\nAND k.keyword IN ('controversy', 'hajji', 'hit-on-the-knee', 'burden-of-proof', 'rock-monster')\nAND mi.info = 'Director ''Alan Parker (I)'' (qv) once said that this film was \"the first story which could be made in Europe with a British crew and had a chance of making it in the States. It''s an American story; it doesn''t compromise; and it''s the opposite to what I''ve done before\".'\nAND n.gender = 'm';",
    "25-0_testing_145": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location manager)', '(as Betty Waldron)', '(as Max Maxwell)', '(as Margo Reymundo)', '(as Nicole Dudalia)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('bare-chested-male', 'linoleum', 'kurds', 'monsey-new-york', 'cuddling')\nAND mi.info = 'Ethan: They call me Cool Ethan. I live in Heineraker Hall.::Dave: Alright - cool.'\nAND n.gender = 'm';",
    "25-0_testing_146": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(1980 screenplay)', '(as Kathi Angerer)', '(coordinator: LAPD)', '(as Le petit Toto)', '(as Sreehari Nanu)')\nAND it1.info = 'weekend gross'\nAND it2.info = 'rating'\nAND k.keyword IN ('bedridden', 'grocery-robbery', 'year-1839', 'franco-mexican-war', 'fallen-idol')\nAND mi.info = '$11,752,917 (USA) (16 October 2005) (2,972 screens)'\nAND n.gender = 'm';",
    "25-0_testing_147": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Alex Preston)', '(as Kristin Glover)', '(as Majken Wex\u00c3\u00b8)', '(as Michael Morse)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('tragic-villain', 'philip-the-handsome', 'cyanide-poisoning', 'rings-swing', 'plethora')\nAND mi.info = 'Blind Prisoner: You do not fear death. You think this makes you strong. It makes you weak.::Bruce Wayne: Why?::Blind Prisoner: How can you move faster than possible, fight longer than possible without the most powerful impulse of the spirit: the fear of death.::Bruce Wayne: I do fear death. I fear dying in here, while my city burns, and there''s no one there to save it.::Blind Prisoner: Then make the climb.::Bruce Wayne: How?::Blind Prisoner: As the child did. Without the rope. Then fear will find you again.'\nAND n.gender = 'f';",
    "25-0_testing_148": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Marika Rowski)', '(as Marilee)', '(Witch''s assistant)', '(as Haider Ali)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('sniper-rifle', 'caballero-costume', 'job-satisfaction', 'ghosts-japan', 'first-amendment')\nAND mi.info = 'Alfred: [to Bruce] Remember when you left Gotham? Before all this, before Batman? You were gone seven years. Seven years I waited, hoping that you wouldn''t come back. Every year, I took a holiday. I went to Florence, there''s this cafe, on the banks of the Arno. Every fine evening, I''d sit there and order a Fernet Branca. I had this fantasy, that I would look across the tables and I''d see you there, with a wife and maybe a couple of kids. You wouldn''t say anything to me, nor me to you. But we''d both know that you''d made it, that you were happy. I never wanted you to come back to Gotham. I always knew there was nothing here for you, except pain and tragedy. And I wanted something more for you than that. I still do.'\nAND n.gender = 'm';",
    "25-0_testing_149": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Yashar Adem)', '(as A.J. Meijer)', '(as Mi Pettersson)', '(as John Porrell)', '(as Forrie Smith)')\nAND it1.info = 'LD video standard'\nAND it2.info = 'rating'\nAND k.keyword IN ('digging-through-a-prison-wall', 'black-caricature', 'feederism', 'earth-day', 'funny-devil')\nAND mi.info = 'NTSC'\nAND n.gender = 'm';",
    "25-0_testing_150": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(as Ben Disinger)', '(as L. Staritsyna)', '(as Pierre Decaze)', '(as Chris Petit)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('orphan', 'dance-recital', 'research-center', 'far-west', 'year-1858')\nAND mi.info = 'Argentina:26 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_151": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(as Dee Dee Sharp)', '(as Mads Feldballe)', '(segment \"Enigme\")', '(as Albert Alfano)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('sniper-rifle', 'optical-illusion', 'drinking-at-bar', 'funny-accent', 'leg-tumor')\nAND mi.info = 'SYNC: When the prisoners in the pit shout ''rise'', their lips don''t move synchronised to the shout.'\nAND n.gender = 'm';",
    "25-0_testing_152": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(extra: bar scene)', '(segment \"B-Rex\")', '(ep20)', '(as Tim D''Arcy)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes'\nAND k.keyword IN ('murder', 'guest-performer', 'que-sera-sera', 'prisoner-exchange', 'dance-costume')\nAND mi.info = 'South Korea:15'\nAND n.gender = 'm';",
    "25-0_testing_153": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Paul Smith)', '(as Mark D.)', '(as Dr. Lynn Ianni)', '(as Albert Garrat)', '(as Sv. Skl\u00c3\u00a1dal)')\nAND it1.info = 'LD language'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('bare-breasts', 'killed-by-a-tractor', 'overweight-slur', 'bonus-phrase', 'ancestry')\nAND mi.info = 'English'\nAND n.gender = 'm';",
    "25-0_testing_154": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(archive footage)', '(as Jose Martin)', '(original writer)', '(as Armand Acosta)', '(as Judith Weller)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('garbage-can', 'panic-button', 'kissing-a-painting', 'cotton-between-toes', '16th-floor')\nAND mi.info = 'Canada:14'\nAND n.gender = 'm';",
    "25-0_testing_155": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(as Kwan Chi Kan)', '(as Jim Mair)', '(egyptologist)', '(Patrol Officer)')\nAND it1.info = 'countries'\nAND it2.info = 'votes'\nAND k.keyword IN ('returning-character-killed-off', 'jewish-lesbian', 'yogini', 'wrinkled-suit', 'knock-''em-dead')\nAND mi.info = 'UK'\nAND n.gender = 'm';",
    "25-0_testing_156": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Joel Ziele)', '(as \u00c3\u0089ric Cabana)', '(caterer: Kemi\u00c3\u00b6)', '(as Miss Hayward)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('secret-door', 'warrenton-virginia', 'tractor-factory', 'literary', 'gun-kata')\nAND mi.info = 'Selina Kyle: Shrimp balls?'\nAND n.gender = 'm';",
    "25-0_testing_157": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(seasons 2-)', '(as Stephen Clarke)', '(as Giorgina)', '(as Ladine Hall)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('police-station', 'white-pants', 'aqua-aerobics', 'search-for-dog', 'neo-nazism')\nAND mi.info = 'France:25 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_158": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as Raphael Vogt)', '(Imekura Customer)', '(as Sarah Cannon)', '(tent manufacturer)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('stabbed-in-the-chest', 'click', 'hit-with-a-breast', 'lithosphere', 'minister-of-culture')\nAND mi.info = 'Bane: [to Batman] Peace has cost you your strength! Victory has defeated you!'\nAND n.gender = 'm';",
    "25-0_testing_159": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Lisa Ryall)', '(as Z. Zelinskaya)', '(as James Sheridan)', '(1915)', '(as Mark Dipp\u00c3\u00a9)')\nAND it1.info = 'runtimes'\nAND it2.info = 'rating'\nAND k.keyword IN ('famous-song', 'youngarts', 'woolly-bully', 'digital-designer', 'ritual-sacrifice')\nAND mi.info = '119'\nAND n.gender = 'f';",
    "25-0_testing_160": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Isobel Ice)', '(as Grace Carlisle)', '(as Gunter Gerzso)', '(as Chippy Ganjee)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('stock-exchange', 'unpacking', 'seductress', 'tennis-pro', 'friars-club')\nAND mi.info = 'Germany:12'\nAND n.gender = 'm';",
    "25-0_testing_161": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(as G.A. Smith)', '(key technician)', '(as Caroline DeFay)', '(as Andrew Seeley)')\nAND it1.info = 'locations'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('teenage-prostitution', 'old-navy', 'gun-toting-monk', 'gold-standard', 'muslim-american')\nAND mi.info = 'El Paso, Texas, USA'\nAND n.gender = 'm';",
    "25-0_testing_162": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Yili Chen)', '(as Ezra Cabay)', '(as Scotty Cox)', '(as Stuart Allery)')\nAND it1.info = 'locations'\nAND it2.info = 'rating'\nAND k.keyword IN ('surrealism', 'basset-hound', 'poisoned-cigarette', 'humorous-policeman', 'corn-broom')\nAND mi.info = 'Savannah, Georgia, USA'\nAND n.gender = 'm';",
    "25-0_testing_163": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Lisa Churgin)', '(as Surinder)', '(as Ada-May)', '(as Sarah Slick)', '(as V. Davydov)')\nAND it1.info = 'LD disc size'\nAND it2.info = 'votes'\nAND k.keyword IN ('homosexual', 'sound-recordist', 'one-night-stand', 'manicurist', 'norrland')\nAND mi.info = '12'\nAND n.gender = 'f';",
    "25-0_testing_164": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(as Dr. Lore Reich)', '(as Pete Mamakos)', '(as Brahmdutt)', '(as Printania)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('orphan', 'moissanite', 'missoula', 'britrock', 'steam-boat')\nAND mi.info = 'FAKE: SPOILER: In the final scene, when the bomb is shown ticking closer to zero, smoke is seen emanating from it slowly as if the bomb were stationery. But in fact it is hanging by a wire and carried away into the ocean by The Bat at high speed, so the smoke should travel much faster.'\nAND n.gender = 'm';",
    "25-0_testing_165": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Eilemann-Trio)', '(as Poppy Cannon)', '(as Jayaprada)', '(as Chax)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('sawed-off-shotgun', 'equine-excel', 'rowing-championship', 'jojo', 'college-enmity')\nAND mi.info = 'GEOG: When the Gotham police force takes on Bane''s recruited prisoners, a banner clearly marking \"NYC\" is visible in the background.'\nAND n.gender = 'f';",
    "25-0_testing_166": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(set production assistant)', '(as Tom Fellegi)', '(as Sabina Marina)', '(explosive effects)', '(as Francisco Roma)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('title-at-the-end', 'tripping-someone', 'high-speed-camera', 'russian-woman', 'foxtrot')\nAND mi.info = 'Ireland:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_167": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(producer)', '(as F. Hanzekovic)', '(as Jenni Nelson)', '(as J. Abello)', '(as A. Robinson)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes'\nAND k.keyword IN ('number-in-title', 'family-desertion', 'e=mc2', 'blood-on-a-mirror', 'trick-course')\nAND mi.info = 'USA:24 January 2003'\nAND n.gender = 'm';",
    "25-0_testing_168": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Frau Sterr)', '(as Joseph Mallory)', '(as Frederick Solm)', '(Brati''s father)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('casablanca-morocco', 'articles-of-war', 'german-immigrant', 'credit-rating', 'lunch-hour')\nAND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'\nAND n.gender = 'm';",
    "25-0_testing_169": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Kristin Sales)', '(as Chino)', '(as Gunnar Ohlund)', '(as Suzie McCoppin)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes'\nAND k.keyword IN ('night-cityscape', 'cat-town', 'lawn-ornament', 'large-breasts', 'coffee-cup')\nAND mi.info = 'GEOG: When the Gotham police force takes on Bane''s recruited prisoners, a banner clearly marking \"NYC\" is visible in the background.'\nAND n.gender = 'm';",
    "25-0_testing_170": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(as Katia Chiani)', '(as Franck Bruneau)', '(as Sally O''Neill)', '(Anju''s mother)')\nAND it1.info = 'runtimes'\nAND it2.info = 'votes'\nAND k.keyword IN ('stolen-car', 'human-mannequin', 'plaid-gloves', 'water-glass', 'satanist')\nAND mi.info = '105'\nAND n.gender = 'f';",
    "25-0_testing_171": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(novel \"Fat City\")', '(as L. Rammo)', '(as Jenny M.)', '(as Gandii Nathen)')\nAND it1.info = 'sound mix'\nAND it2.info = 'votes'\nAND k.keyword IN ('actor-shares-first-and-last-name-with-character', 'travel-business', 'tv-guide-magazine', 'oil-drilling', 'rca')\nAND mi.info = 'Mono'\nAND n.gender = 'm';",
    "25-0_testing_172": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(archive footage)', '(as Alex Barrios)', '(as Lulu Li)', '(Hard Harry)', '(muppet workshop)')\nAND it1.info = 'languages'\nAND it2.info = 'votes'\nAND k.keyword IN ('champion', 'stealing-a-taxi', 'vertigo', 'fear-of-cars', 'tonsure')\nAND mi.info = 'English'\nAND n.gender = 'm';",
    "25-0_testing_173": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant)', '(as Cristine Jaca)', '(casual assistant)', '(tow plane)', '(as Lal\u00c3\u00a1 Gato\u00c3\u00b3)')\nAND it1.info = 'goofs'\nAND it2.info = 'rating'\nAND k.keyword IN ('title-at-the-end', 'dark-machinist', 'dialysis-machine', 'spina-bifida', 'remains')\nAND mi.info = 'CONT: As Blake runs into the hospital, he is seen to have a long shotgun with a wooden stock and a silver barrel. However, when he inside, he is seen to have a short black shotgun.'\nAND n.gender = 'm';",
    "25-0_testing_174": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(Mamaji)', '(Kaneko, Teru)', '(as Dick Farina)', '(as Icl\u00c3\u00a2l Gen\u00c3\u00a7)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('stock-exchange', 'hazmat-suit', 'panel', 'sex-with-maid', 'faking-a-limp')\nAND mi.info = 'Canada:14A'\nAND n.gender = 'm';",
    "25-0_testing_175": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Charles Locher)', '(as Matej Reger)', '(as Fili Escarcega)', '(Mr. Westlake)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('shot-to-death', 'false-morality', 'walk-along-beach', 'suicide-by-cop', 'play-within-a-play')\nAND mi.info = 'RAT:1.44 : 1'\nAND n.gender = 'm';",
    "25-0_testing_176": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant) (as Dwayne A. Smith)', '(as Bozinovski)', '(as Navid Akhavan)', '(as Ray Viser)', '(as Peter Helm)')\nAND it1.info = 'certificates'\nAND it2.info = 'votes'\nAND k.keyword IN ('injury', 'whore-in-window', 'first-sergeant', 'fuel-injection', 'decorum')\nAND mi.info = 'USA:R'\nAND n.gender = 'm';",
    "25-0_testing_177": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(as Alex C. Skuby)', '(as Kandy)', '(as Felicity Jurd)', '(as Clarke Moore)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('reference-to-michael-redgrave', 'sex-with-an-object', 'chocolate-icing', 'operation-paperclip', 'mental-illness')\nAND mi.info = 'Marwood: Parkin''s been. There''s the supper.::[a live chicken is standing on the table]::Withnail: What are we supposed to do with that?::Marwood: Eat it.::Withnail: Eat it? Fucker''s alive.::Marwood: Yeah, I know that, you''ve got to kill it.::Withnail: Me? I''m the firelighter and fuel collector.::Marwood: Yeah, I know, but I got the logs in. [they get up and approach it] It takes away your appetite just looking at it.::Withnail: No it doesn''t. I''m starving. How can we make it die?::Marwood: You got to throttle him. Listen, I think you should strangle it instantly in case it starts trying to make friends with us.::Withnail: All right, get hold of it. You hold it down, I''ll strangle it.::Marwood: I can''t. It''s those dreadful beady eyes, they stare you out.::Withnail: It''s a bloody chicken! Just think of it with bacon across its back.'\nAND n.gender = 'm';",
    "25-0_testing_178": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Sylvie Laguna)', '(river unit)', '(as Robert Munroe)', '(as Tom Keische)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('necklace', 'sex-in-gym', 'retribution', 'prostitute-killer', 'absurd-humor')\nAND mi.info = 'Mexico:B'\nAND n.gender = 'f';",
    "25-0_testing_179": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(as Mischel)', '(as John Colley)', '(as Marcel Lee)', '(body coach)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('night-cityscape', 'hurn-joke', 'flavoring', 'pinched-nerve', 'bloody-moon')\nAND mi.info = 'Brazil:27 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_180": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant) (as Alex Martin)', '(as w.frank)', '(as Tracy D Smith)', '(as Jake Douval)', '(special filmings)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('shaving', 'walthers-ppk', 'pumice', 'boot-fetish', 'throwing-paper-ball')\nAND mi.info = 'Bulgaria:27 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_181": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Pedro Salvin)', '(as Palina)', '(web master) (2002)', '(as Jack Tillar)', '(as Jennifer Smith)')\nAND it1.info = 'color info'\nAND it2.info = 'rating'\nAND k.keyword IN ('slow-motion-scene', 'black-rock', 'macrobiotics', 'bartender', 'grumpy-old-man')\nAND mi.info = 'Color'\nAND n.gender = 'm';",
    "25-0_testing_182": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(medic)', '(runner: Mallorca)', '(as Jiro Kagoshima)', '(as Amit Gangoly)', '(as Sheridan Hall)')\nAND it1.info = 'release dates'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('thief', 'sixth-generation', 'thesis-advisor', 'prairie', 'bone-cancer')\nAND mi.info = 'France:25 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_183": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Katerina Stano)', '(as T\u00c3\u00ado Pl\u00c3\u00a1cido)', '(as Victor Stewart)', '(as Kamel Bahaj)')\nAND it1.info = 'locations'\nAND it2.info = 'votes'\nAND k.keyword IN ('nightclub', 'king-henry-ii', 'magnetic-mine', 'philippe-d''orleans', 'keith-cafferty')\nAND mi.info = 'Raleigh Studios - 5300 Melrose Avenue, Hollywood, Los Angeles, California, USA'\nAND n.gender = 'f';",
    "25-0_testing_184": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as A. Volkonsky)', '(producer: Wilco)', '(as Lindsay)', '(as Rimma Zyubina)')\nAND it1.info = 'plot'\nAND it2.info = 'rating'\nAND k.keyword IN ('robbery', 'phase', 'den-of-iniquity', 'pancreatic-cancer', 'blues-guitar')\nAND mi.info = 'Produced by Ken Murray strictly as a vehicle for Laurie Anders, his curvy prot\u00c3\u00a9g\u00c3\u00a9 from his television show and billed above the title and first billed in the cast as Laurie (\"I-like-the-wide-open-spaces\") Anders, which was her catch-line phrase and how she was introduced and known. This is neither a comedy, satire or parody---missing badly on all attempts at such---and isn''t much of a western either, even by bottom-of-the-barrel B-standards. The plot by veteran B-western villain player Bob Duncan, who did manage to write himself the best role in the movie, relative to there being no good roles in this movie, has town banker Anderson, the secret head of an outlaw gang, trying to organize a Cattleman''s Association and not getting any takers. He sends for Trigger Gans to act as a persuader. But a mysterious, masked rider known as El Coyote begins to resist. El Coyote is of course Laurie Dawson, daughter of retired Marshal and rancher Ben Dawson, and her El Coyote role ensured that whoever stunt-doubled her would wear pads where no stunt man ever wore them, with the possible later exception of Dean Smith doubling Maureen O''Hara in \"McLintock.\" The heroines that Dave Sharpe doubled in Republic serials weren''t built like Laurie Anders. Producer Ken Murray, as a riverboat gambler named Sliding Bill Murray, rolls into town on the same stage as Trigger Gans, and then promptly engages Preston Foster, Johnny Mack Brown, Jimmy Wakely and Buddy Baer (in cameo roles) in a blackout-skit poker game written by himself, which had to have been even more painful for the participants than the viewers. Ralph Staub used to get better stuff than this in his \"Screen Snapshots\" just roaming around Columbia''s backlot and interviewing Smiley Burnette and Ringeye.'\nAND n.gender = 'm';",
    "25-0_testing_185": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Alon Moni Aboutboul)', '(as Dr Susan Jebb)', '(novel \"Nu\")', '(visual identity)', '(tank arcade)')\nAND it1.info = 'quotes'\nAND it2.info = 'votes'\nAND k.keyword IN ('title-at-the-end', 'overweight-person', 'killied-with-acid', 'ski-jumping', 'nightwing')\nAND mi.info = 'Bruce Wayne: I watched you die.::Ra''s al Ghul: I told you I was immortal.'\nAND n.gender = 'm';",
    "25-0_testing_186": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(written by)', '(as Sabur\u00c3\u00b4 B\u00c3\u00b4ya)', '(Moritz'' classmate)', '(as Volker Olms)', '(as Cunio Miyari)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('radio', 'bomb-throwing', 'sex-by-a-fireplace', 'car-seat', 'documentary-ethics')\nAND mi.info = 'RAT:1.85 : 1'\nAND n.gender = 'm';",
    "25-0_testing_187": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Marion Scali)', '(as Elizabeth Amos)', '(as Pat Delany)', '(as Jose M\u00c2\u00aa Caro)')\nAND it1.info = 'tech info'\nAND it2.info = 'rating'\nAND k.keyword IN ('grand-piano', 'window-sill', 'tibetan-monk', 'amontillado', '500-pound-note')\nAND mi.info = 'RAT:1.33 : 1'\nAND n.gender = 'f';",
    "25-0_testing_188": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(assistant football coordinator)', '(as Ho Lin)', '(Raju''s friend)', '(as Bruno Gomes)', '(producer) (1994-?)')\nAND it1.info = 'goofs'\nAND it2.info = 'votes'\nAND k.keyword IN ('police-station', 'moral-deterioration', 'shrine-maiden', 'crop-dusting', 'lunar-mining')\nAND mi.info = 'FAKE: One of Bane''s mercenaries (on the far left of the rooftop fight scene with Catwoman and Batman right after it shows Daggett) falls down without being hit.'\nAND n.gender = 'f';",
    "25-0_testing_189": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Vesna Pocuca)', '(as Art Canning)', '(Segment 3)', '(Seasons 1-2)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('hero', 'gun-in-airport', 'volte-face', 'methadone-clinic', 'druid-ceremony')\nAND mi.info = 'Kerrigan: [after a jumpy Murphy shoots at his own image in a mirror] Man, that''s the first time I ever seen a Texan beat himself to the draw.'\nAND n.gender = 'm';",
    "25-0_testing_190": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(as Dean Spinksley)', '(as Cecil Philips)', '(as Jesse Martinez)', '(as Cut Yanti)', '(as Laura Dinolsky)')\nAND it1.info = 'locations'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('slow-motion-scene', 'taking-on-water', 'overcrowded', 'racehorse', 'antiglobalization')\nAND mi.info = 'Welbeck Abbey, Worksop, Nottinghamshire, England, UK'\nAND n.gender = 'm';",
    "25-0_testing_191": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(executive producer)', '(film crew)', '(as Wayne Maugans)', '(as Manuel \u00c3\u0081guas)', '(as Carla Castele)')\nAND it1.info = 'languages'\nAND it2.info = 'rating'\nAND k.keyword IN ('stolen-car', 'art-house', 'camera-in-watch', 'impaired-speech', 'political-art')\nAND mi.info = 'English'\nAND n.gender = 'f';",
    "25-0_testing_192": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(Rradio-Canada)', '(story) (as DLZ)', '(as Oscar Ulloa)', '(as Dawn Warner)')\nAND it1.info = 'release dates'\nAND it2.info = 'rating'\nAND k.keyword IN ('sniper-rifle', 'exquisite-corpse', 'alice-in-chains', 'sex-with-the-undead', 'gold-necklace')\nAND mi.info = 'USA:20 July 2012'\nAND n.gender = 'm';",
    "25-0_testing_193": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(as Bj. De Jesus)', '(guest appereance)', '(as V. Shakov)', '(as Monika Tajma)')\nAND it1.info = 'plot'\nAND it2.info = 'votes'\nAND k.keyword IN ('written-confession', 'blood-ballet', 'dingo', 'cosmic-research', 'm1-assault-boat')\nAND mi.info = 'The Arizona wilderness, 1880. Gen. Fletcher Blackwell sends a message telling Capt. Walsh, who is escorting a wagon-train through Apache territory, heading for the fort at Furnace Creek, that he should cancel the escort and rush to another town. Apache leader \"Little Dog\" is leading the attack on the wagon-train and massacring everyone at the poorly manned fort. As a result the treaty is broken with the Indians and the white settlers take over the territory with the help of the calvary, as the Apaches are wiped out and only \"Little Dog\" remains at large. Gen. Fletcher Blackwell is court-martial-led for treason. The general''s 2 sons, Cash Blackwell and Capt. Rufe Blackwell, each with a different disposition, go about trying to find evidence to clear their father''s name.'\nAND n.gender = 'm';",
    "25-0_testing_194": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant) (uncredited)', '(as Los Rebeldes)', '(TV Quiz Show)', '(as Janine Pen)', '(as Peggy Missi)')\nAND it1.info = 'countries'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('male-slaps-a-female', 'wedding-music', 'house-key', 'hunting-safari', 'jump-start')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_195": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(additional location assistant)', '(as Kwan Yung-Wun)', '(as Tyrone Shu)', '(as Robert Muzingo)', '(adaptation) (1980)')\nAND it1.info = 'certificates'\nAND it2.info = 'rating'\nAND k.keyword IN ('stock-exchange', 'san-pablo-peru', 'snow-cave', 'libyan-desert', 'dalton-gang')\nAND mi.info = 'India:U/A'\nAND n.gender = 'm';",
    "25-0_testing_196": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant) (uncredited)', '(as Virginia Polak)', '(broadcast rf)', '(as Asad)', '(play \"Dona Xepa\")')\nAND it1.info = 'countries'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('hole', 'burying-dead-body', 'crack-den', 'wales', 'spectres')\nAND mi.info = 'USA'\nAND n.gender = 'm';",
    "25-0_testing_197": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(production assistant)', '(as Jon Savich)', '(as Nanna Kjeldsen)', '(as Gene De Rue)', '(as Ursula Marsden)')\nAND it1.info = 'quotes'\nAND it2.info = 'rating'\nAND k.keyword IN ('tribute', 'geefe', 'seabed', 'air-force-veteran', 'gay-football-player')\nAND mi.info = 'John Daggett: Can we get some ladies in here?::Catwoman: Careful what you wish for.::[Catwoman attacks Daggett and pins him up against the wall]::Catwoman: What''s the matter, Cat got your tongue?::John Daggett: You dumb bitch.::Catwoman: Nobody ever accused me of being dumb!::John Daggett: You''re dumb; for coming here.::Catwoman: I want what you owe me!'\nAND n.gender = 'f';",
    "25-0_testing_198": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(location assistant)', '(as Aline J Mowat)', '(as Charlie Fields)', '(as 60 \u00c3\u00a5r)', '(novel Dvojnik)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes'\nAND k.keyword IN ('sawed-off-shotgun', 'sadistic-husband', 'canning-food', 'degania-israel', 'physical-training')\nAND mi.info = 'PCS:VistaVision'\nAND n.gender = 'm';",
    "25-0_testing_199": "SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title\nFROM cast_info AS ci,\n   info_type AS it1,\n   info_type AS it2,\n   keyword AS k,\n   movie_info AS mi,\n   movie_info_idx AS mi_idx,\n   movie_keyword AS mk,\n   name AS n,\n   title AS t\nWHERE t.id = mi.movie_id\nAND t.id = mi_idx.movie_id\nAND t.id = ci.movie_id\nAND t.id = mk.movie_id\nAND ci.movie_id = mi.movie_id\nAND ci.movie_id = mi_idx.movie_id\nAND ci.movie_id = mk.movie_id\nAND mi.movie_id = mi_idx.movie_id\nAND mi.movie_id = mk.movie_id\nAND mi_idx.movie_id = mk.movie_id\nAND n.id = ci.person_id\nAND it1.id = mi.info_type_id\nAND it2.id = mi_idx.info_type_id\nAND k.id = mk.keyword_id\nAND ci.note IN ('(uncredited)', '(ca: Wowow)', '(as Ng Ting Yip)', '(prayer team)', '(as Kek\u00c3\u00a4le)')\nAND it1.info = 'tech info'\nAND it2.info = 'votes distribution'\nAND k.keyword IN ('robbery', 'test-of-bravery', 'porcupine-joke', 'artcore', 'destivelle')\nAND mi.info = 'PFM:35 mm'\nAND n.gender = 'm';"
}